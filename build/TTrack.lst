ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"TTrack.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN6TTrack10initialiseEv,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	_ZN6TTrack10initialiseEv
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN6TTrack10initialiseEv:
  27              	.LVL0:
  28              	.LFB4738:
  29              		.file 1 "src/TTrack.cpp"
   1:src/TTrack.cpp **** #include "TTrack.h"
   2:src/TTrack.cpp **** #include <cmath>
   3:src/TTrack.cpp **** 
   4:src/TTrack.cpp **** TTrack::TTrack() : odf(EnergyDifference, Hanning)
   5:src/TTrack.cpp **** {
   6:src/TTrack.cpp ****     initialise();
   7:src/TTrack.cpp **** }
   8:src/TTrack.cpp **** //================================================
   9:src/TTrack.cpp **** void TTrack::initialise()
  10:src/TTrack.cpp **** {
  30              		.loc 1 10 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  11:src/TTrack.cpp **** 
  12:src/TTrack.cpp ****     pi = 3.14159265358979323846264338327950288;
  34              		.loc 1 12 5 view .LVU1
  10:src/TTrack.cpp **** 
  35              		.loc 1 10 1 is_stmt 0 view .LVU2
  36 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  37              		.cfi_def_cfa_offset 28
  38              		.cfi_offset 4, -28
  39              		.cfi_offset 5, -24
  40              		.cfi_offset 6, -20
  41              		.cfi_offset 7, -16
  42              		.cfi_offset 8, -12
  43              		.cfi_offset 9, -8
  44              		.cfi_offset 14, -4
  45              		.loc 1 12 8 view .LVU3
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 2


  46 0004 00F54056 		add	r6, r0, #12288
  47 0008 41F22405 		movw	r5, #4132
  13:src/TTrack.cpp **** 
  14:src/TTrack.cpp ****     hopSize = 512;
  15:src/TTrack.cpp **** 
  16:src/TTrack.cpp ****     framesUntilTempoDisplay = 1024;
  48              		.loc 1 16 29 view .LVU4
  49 000c 00F58043 		add	r3, r0, #16384
  14:src/TTrack.cpp **** 
  50              		.loc 1 14 13 view .LVU5
  51 0010 4FF40074 		mov	r4, #512
  52              		.loc 1 16 29 view .LVU6
  53 0014 4FF48062 		mov	r2, #1024
  12:src/TTrack.cpp **** 
  54              		.loc 1 12 8 view .LVU7
  55 0018 4F4F     		ldr	r7, .L17+24
  10:src/TTrack.cpp **** 
  56              		.loc 1 10 1 view .LVU8
  57 001a 8146     		mov	r9, r0
  58 001c 0544     		add	r5, r5, r0
  12:src/TTrack.cpp **** 
  59              		.loc 1 12 8 view .LVU9
  60 001e 06F58960 		add	r0, r6, #1096
  61              	.LVL1:
  17:src/TTrack.cpp ****     beatPeriod = 0.0f;
  62              		.loc 1 17 16 view .LVU10
  63 0022 0021     		movs	r1, #0
  10:src/TTrack.cpp **** 
  64              		.loc 1 10 1 view .LVU11
  65 0024 2DED028B 		vpush.64	{d8}
  66              		.cfi_def_cfa_offset 36
  67              		.cfi_offset 80, -36
  68              		.cfi_offset 81, -32
  12:src/TTrack.cpp **** 
  69              		.loc 1 12 8 view .LVU12
  70 0028 0760     		str	r7, [r0]	@ float
  14:src/TTrack.cpp **** 
  71              		.loc 1 14 5 is_stmt 1 view .LVU13
  10:src/TTrack.cpp **** 
  72              		.loc 1 10 1 is_stmt 0 view .LVU14
  73 002a 83B0     		sub	sp, sp, #12
  74              		.cfi_def_cfa_offset 48
  14:src/TTrack.cpp **** 
  75              		.loc 1 14 13 view .LVU15
  76 002c C6F84044 		str	r4, [r6, #1088]
  16:src/TTrack.cpp ****     beatPeriod = 0.0f;
  77              		.loc 1 16 5 is_stmt 1 view .LVU16
  78              	.LBB214:
  18:src/TTrack.cpp ****     estimatedTempo = 0.0f;
  19:src/TTrack.cpp ****     
  20:src/TTrack.cpp ****     float rayleighParameter = 43;
  21:src/TTrack.cpp **** 
  22:src/TTrack.cpp ****     estimatedTempo = 120.0f;
  23:src/TTrack.cpp **** 
  24:src/TTrack.cpp ****     for (int i = 0; i < 128; i++)
  79              		.loc 1 24 14 is_stmt 0 view .LVU17
  80 0030 0024     		movs	r4, #0
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 3


  81              	.LBE214:
  16:src/TTrack.cpp ****     beatPeriod = 0.0f;
  82              		.loc 1 16 29 view .LVU18
  83 0032 C3F8982E 		str	r2, [r3, #3736]
  17:src/TTrack.cpp ****     estimatedTempo = 0.0f;
  84              		.loc 1 17 5 is_stmt 1 view .LVU19
  17:src/TTrack.cpp ****     estimatedTempo = 0.0f;
  85              		.loc 1 17 16 is_stmt 0 view .LVU20
  86 0036 03F56962 		add	r2, r3, #3728
  22:src/TTrack.cpp **** 
  87              		.loc 1 22 20 view .LVU21
  88 003a 03F69463 		addw	r3, r3, #3732
  17:src/TTrack.cpp ****     estimatedTempo = 0.0f;
  89              		.loc 1 17 16 view .LVU22
  90 003e 1160     		str	r1, [r2]	@ float
  18:src/TTrack.cpp ****     estimatedTempo = 0.0f;
  91              		.loc 1 18 5 is_stmt 1 view .LVU23
  20:src/TTrack.cpp **** 
  92              		.loc 1 20 5 view .LVU24
  93              	.LVL2:
  22:src/TTrack.cpp **** 
  94              		.loc 1 22 5 view .LVU25
  22:src/TTrack.cpp **** 
  95              		.loc 1 22 20 is_stmt 0 view .LVU26
  96 0040 464A     		ldr	r2, .L17+28
  97 0042 1A60     		str	r2, [r3]	@ float
  98              		.loc 1 24 5 is_stmt 1 view .LVU27
  99              	.LVL3:
 100              	.LBB218:
 101              		.loc 1 24 23 view .LVU28
 102              	.L2:
  25:src/TTrack.cpp ****     {
  26:src/TTrack.cpp ****         weightingVector[i] = ((float) i / pow(rayleighParameter, 2)) * exp(-1 * pow((float) -i, 2) 
 103              		.loc 1 26 9 discriminator 2 view .LVU29
 104              	.LBB215:
 105              	.LBI215:
 106              		.file 2 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // You should have received a copy of the GNU General Public License and
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 4


  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** /** @file include/cmath
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  as macros in C).
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  */
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #pragma GCC system_header
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include_next <math.h>
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef div
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acos
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asin
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan2
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ceil
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cos
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cosh
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fabs
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef floor
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmod
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef frexp
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ldexp
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log10
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef modf
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef pow
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sin
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sinh
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sqrt
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tan
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tanh
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** extern "C++"
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 5


  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** {
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acos;
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(float __x)
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(long double __x)
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asin;
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(float __x)
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(long double __x)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(float __x)
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(long double __x)
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 6


 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan2;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ceil;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(float __x)
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(long double __x)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     ceil(_Tp __x)
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cos;
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(float __x)
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(long double __x)
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 7


 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     cos(_Tp __x)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cos(__x); }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cosh;
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(float __x)
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(long double __x)
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     cosh(_Tp __x)
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp;
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(float __x)
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expf(__x); }
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(long double __x)
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expl(__x); }
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     exp(_Tp __x)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_exp(__x); }
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fabs;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(float __x)
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsf(__x); }
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(long double __x)
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsl(__x); }
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 8


 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fabs(_Tp __x)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_fabs(__x); }
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::floor;
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(float __x)
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorf(__x); }
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(long double __x)
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorl(__x); }
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     floor(_Tp __x)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_floor(__x); }
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmod;
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(float __x, float __y)
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodf(__x, __y); }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(long double __x, long double __y)
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodl(__x, __y); }
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fmod(_Tp __x, _Up __y)
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fmod(__type(__x), __type(__y));
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::frexp;
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(float __x, int* __exp)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(long double __x, int* __exp)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpl(__x, __exp); }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 9


 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     frexp(_Tp __x, int* __exp)
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_frexp(__x, __exp); }
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ldexp;
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(float __x, int __exp)
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(long double __x, int __exp)
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     ldexp(_Tp __x, int __exp)
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log;
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log(float __x)
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logf(__x); }
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log(long double __x)
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logl(__x); }
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log(_Tp __x)
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log(__x); }
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log10;
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(float __x)
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10f(__x); }
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(long double __x)
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10l(__x); }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 10


 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log10(_Tp __x)
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log10(__x); }
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::modf;
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(float __x, float* __iptr)
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modff(__x, __iptr); }
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(long double __x, long double* __iptr)
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::pow;
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, float __y)
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powf(__x, __y); }
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, long double __y)
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powl(__x, __y); }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if __cplusplus < 201103L
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline double
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(double __x, int __i)
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powi(__x, __i); }
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, int __n)
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powif(__x, __n); }
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, int __n)
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powil(__x, __n); }
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     pow(_Tp __x, _Up __y)
 107              		.loc 2 415 5 discriminator 2 view .LVU30
 108              	.LBE215:
 109              		.loc 1 26 93 is_stmt 0 discriminator 2 view .LVU31
 110 0044 6342     		rsbs	r3, r4, #0
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 11


 111 0046 07EE103A 		vmov	s14, r3	@ int
 112              		.loc 1 26 84 discriminator 2 view .LVU32
 113 004a B8EEC77A 		vcvt.f32.s32	s14, s14
 114              	.LVL4:
 115              		.loc 1 26 75 discriminator 2 view .LVU33
 116 004e 9FED3C0B 		vldr.64	d0, .L17
 117              	.LBB217:
 118              	.LBB216:
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return pow(__type(__x), __type(__y));
 119              		.loc 2 418 17 discriminator 2 view .LVU34
 120 0052 B7EEC77A 		vcvt.f64.f32	d7, s14
 121              	.LVL5:
 122              		.loc 2 418 17 discriminator 2 view .LVU35
 123              	.LBE216:
 124              	.LBE217:
 125              		.loc 1 26 79 discriminator 2 view .LVU36
 126 0056 27EE477B 		vnmul.f64	d7, d7, d7
 127              		.loc 1 26 75 discriminator 2 view .LVU37
 128 005a 87EE000B 		vdiv.f64	d0, d7, d0
 129 005e FFF7FEFF 		bl	exp
 130              	.LVL6:
 131              		.loc 1 26 31 discriminator 2 view .LVU38
 132 0062 07EE904A 		vmov	s15, r4	@ int
  24:src/TTrack.cpp ****     {
 133              		.loc 1 24 5 discriminator 2 view .LVU39
 134 0066 0134     		adds	r4, r4, #1
 135              	.LVL7:
 136              		.loc 1 26 31 discriminator 2 view .LVU40
 137 0068 B8EEE76A 		vcvt.f32.s32	s12, s15
  24:src/TTrack.cpp ****     {
 138              		.loc 1 24 23 discriminator 2 view .LVU41
 139 006c 802C     		cmp	r4, #128
 140              		.loc 1 26 41 discriminator 2 view .LVU42
 141 006e 9FED365B 		vldr.64	d5, .L17+8
 142              		.loc 1 26 31 discriminator 2 view .LVU43
 143 0072 B7EEC66A 		vcvt.f64.f32	d6, s12
 144              		.loc 1 26 41 discriminator 2 view .LVU44
 145 0076 86EE057B 		vdiv.f64	d7, d6, d5
 146              		.loc 1 26 70 discriminator 2 view .LVU45
 147 007a 27EE007B 		vmul.f64	d7, d7, d0
 148 007e B7EEC77B 		vcvt.f32.f64	s14, d7
 149 0082 A5EC017A 		vstmia.32	r5!, {s14}
  24:src/TTrack.cpp ****     {
 150              		.loc 1 24 5 is_stmt 1 discriminator 2 view .LVU46
 151              	.LVL8:
  24:src/TTrack.cpp ****     {
 152              		.loc 1 24 23 discriminator 2 view .LVU47
 153 0086 DDD1     		bne	.L2
 154 0088 41F2C823 		movw	r3, #4808
 155 008c 41F26C31 		movw	r1, #4972
 156 0090 4B44     		add	r3, r3, r9
 157 0092 4944     		add	r1, r1, r9
 158              	.L3:
 159              	.LBE218:
 160              	.LBB219:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 12


  27:src/TTrack.cpp ****     }
  28:src/TTrack.cpp **** 
  29:src/TTrack.cpp ****     for (int i = 0; i < 41; i++)
  30:src/TTrack.cpp ****     {
  31:src/TTrack.cpp ****         prevDelta[i] = 1.0f;
 161              		.loc 1 31 9 discriminator 2 view .LVU48
 162              		.loc 1 31 22 is_stmt 0 discriminator 2 view .LVU49
 163 0094 4FF07E52 		mov	r2, #1065353216
 164 0098 43F8042B 		str	r2, [r3], #4	@ float
  29:src/TTrack.cpp ****     {
 165              		.loc 1 29 5 is_stmt 1 discriminator 2 view .LVU50
  29:src/TTrack.cpp ****     {
 166              		.loc 1 29 23 discriminator 2 view .LVU51
 167 009c 9942     		cmp	r1, r3
 168 009e F9D1     		bne	.L3
 169 00a0 43F24C48 		movw	r8, #13388
 170              	.LBE219:
 171              	.LBB220:
  32:src/TTrack.cpp ****     }
  33:src/TTrack.cpp **** 
  34:src/TTrack.cpp ****     float t_mu = 41/2;
  35:src/TTrack.cpp ****     float m_sig = 41/8;
  36:src/TTrack.cpp ****     float x;
  37:src/TTrack.cpp **** 
  38:src/TTrack.cpp ****     for (int i = 0; i < 41; i++)
 172              		.loc 1 38 14 is_stmt 0 view .LVU52
 173 00a4 0027     		movs	r7, #0
 174 00a6 C844     		add	r8, r8, r9
 175              	.LVL9:
 176              	.L8:
 177              	.LBB221:
  39:src/TTrack.cpp ****     {
  40:src/TTrack.cpp ****         for (int j = 0; j < 41; j++)
 178              		.loc 1 40 27 is_stmt 1 view .LVU53
  41:src/TTrack.cpp ****         {
  42:src/TTrack.cpp ****             x = j + 1;
  43:src/TTrack.cpp ****             t_mu = i + 1;
 179              		.loc 1 43 22 is_stmt 0 view .LVU54
 180 00a8 0137     		adds	r7, r7, #1
 181              	.LVL10:
 182              		.loc 1 43 18 view .LVU55
 183 00aa 4546     		mov	r5, r8
  40:src/TTrack.cpp ****         {
 184              		.loc 1 40 18 view .LVU56
 185 00ac 0024     		movs	r4, #0
 186              		.loc 1 43 18 view .LVU57
 187 00ae 07EE907A 		vmov	s15, r7	@ int
 188 00b2 F8EEE78A 		vcvt.f32.s32	s17, s15
 189              	.LVL11:
 190              	.L7:
  42:src/TTrack.cpp ****             t_mu = i + 1;
 191              		.loc 1 42 13 is_stmt 1 discriminator 2 view .LVU58
  44:src/TTrack.cpp ****             tempoTransitionMatrix[i][j] = (1 / (m_sig * sqrt(2 * pi))) * exp(-1 * pow((x - t_mu), 2
 192              		.loc 1 44 66 is_stmt 0 discriminator 2 view .LVU59
 193 00b6 06F58963 		add	r3, r6, #1096
  42:src/TTrack.cpp ****             t_mu = i + 1;
 194              		.loc 1 42 19 discriminator 2 view .LVU60
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 13


 195 00ba 0134     		adds	r4, r4, #1
 196              	.LVL12:
 197              		.loc 1 44 61 discriminator 2 view .LVU61
 198 00bc 93ED000A 		vldr.32	s0, [r3]
  42:src/TTrack.cpp ****             t_mu = i + 1;
 199              		.loc 1 42 15 discriminator 2 view .LVU62
 200 00c0 07EE904A 		vmov	s15, r4	@ int
 201              		.loc 1 44 61 discriminator 2 view .LVU63
 202 00c4 30EE000A 		vadd.f32	s0, s0, s0
  42:src/TTrack.cpp ****             t_mu = i + 1;
 203              		.loc 1 42 15 discriminator 2 view .LVU64
 204 00c8 B8EEE77A 		vcvt.f32.s32	s14, s15
 205              	.LVL13:
  43:src/TTrack.cpp ****             tempoTransitionMatrix[i][j] = (1 / (m_sig * sqrt(2 * pi))) * exp(-1 * pow((x - t_mu), 2
 206              		.loc 1 43 13 is_stmt 1 discriminator 2 view .LVU65
 207              		.loc 1 44 13 discriminator 2 view .LVU66
 208              	.LBB222:
 209              	.LBI222:
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sin;
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sin(float __x)
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sin(long double __x)
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinl(__x); }
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     sin(_Tp __x)
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_sin(__x); }
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sinh;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sinh(float __x)
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinhf(__x); }
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sinh(long double __x)
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinhl(__x); }
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     sinh(_Tp __x)
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_sinh(__x); }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 14


 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sqrt;
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sqrt(float __x)
 210              		.loc 2 463 3 discriminator 2 view .LVU67
 211              	.LBB223:
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sqrtf(__x); }
 212              		.loc 2 464 5 discriminator 2 view .LVU68
 213 00cc B5EE400A 		vcmp.f32	s0, #0
 214 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 215 00d4 28D4     		bmi	.L14
 216              		.loc 2 464 27 is_stmt 0 view .LVU69
 217 00d6 B1EEC08A 		vsqrt.f32	s16, s0
 218              	.LVL14:
 219              	.L6:
 220              		.loc 2 464 27 view .LVU70
 221              	.LBE223:
 222              	.LBE222:
 223              	.LBB225:
 224              	.LBI225:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 225              		.loc 2 415 5 is_stmt 1 discriminator 2 view .LVU71
 226              	.LBE225:
 227              		.loc 1 44 86 is_stmt 0 discriminator 2 view .LVU72
 228 00da 37EE687A 		vsub.f32	s14, s14, s17
 229              	.LVL15:
 230              		.loc 1 44 77 discriminator 2 view .LVU73
 231 00de 9FED1C0B 		vldr.64	d0, .L17+16
 232              	.LBB227:
 233              	.LBB226:
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 234              		.loc 2 418 17 discriminator 2 view .LVU74
 235 00e2 B7EEC77A 		vcvt.f64.f32	d7, s14
 236              	.LVL16:
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 237              		.loc 2 418 17 discriminator 2 view .LVU75
 238              	.LBE226:
 239              	.LBE227:
 240              		.loc 1 44 81 discriminator 2 view .LVU76
 241 00e6 27EE477B 		vnmul.f64	d7, d7, d7
 242              		.loc 1 44 77 discriminator 2 view .LVU77
 243 00ea 87EE000B 		vdiv.f64	d0, d7, d0
 244 00ee FFF7FEFF 		bl	exp
 245              	.LVL17:
  40:src/TTrack.cpp ****         {
 246              		.loc 1 40 27 discriminator 2 view .LVU78
 247 00f2 292C     		cmp	r4, #41
 248              		.loc 1 44 55 discriminator 2 view .LVU79
 249 00f4 F1EE047A 		vmov.f32	s15, #5.0e+0
 250              		.loc 1 44 46 discriminator 2 view .LVU80
 251 00f8 B7EE007A 		vmov.f32	s14, #1.0e+0
 252              		.loc 1 44 55 discriminator 2 view .LVU81
 253 00fc 28EE278A 		vmul.f32	s16, s16, s15
 254              		.loc 1 44 46 discriminator 2 view .LVU82
 255 0100 C7EE087A 		vdiv.f32	s15, s14, s16
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 15


 256 0104 B7EEE77A 		vcvt.f64.f32	d7, s15
 257              		.loc 1 44 72 discriminator 2 view .LVU83
 258 0108 27EE000B 		vmul.f64	d0, d7, d0
 259 010c B7EEC00B 		vcvt.f32.f64	s0, d0
 260 0110 A5EC010A 		vstmia.32	r5!, {s0}
  40:src/TTrack.cpp ****         {
 261              		.loc 1 40 9 is_stmt 1 discriminator 2 view .LVU84
 262              	.LVL18:
  40:src/TTrack.cpp ****         {
 263              		.loc 1 40 27 discriminator 2 view .LVU85
 264 0114 CFD1     		bne	.L7
 265              	.LBE221:
  38:src/TTrack.cpp ****     {
 266              		.loc 1 38 5 discriminator 2 view .LVU86
 267              	.LVL19:
  38:src/TTrack.cpp ****     {
 268              		.loc 1 38 23 discriminator 2 view .LVU87
 269 0116 292F     		cmp	r7, #41
 270 0118 08F1A408 		add	r8, r8, #164
 271 011c C4D1     		bne	.L8
 272              	.LBE220:
  45:src/TTrack.cpp ****         }
  46:src/TTrack.cpp ****     }
  47:src/TTrack.cpp **** 
  48:src/TTrack.cpp **** }
 273              		.loc 1 48 1 is_stmt 0 view .LVU88
 274 011e 03B0     		add	sp, sp, #12
 275              		.cfi_remember_state
 276              		.cfi_def_cfa_offset 36
 277              		@ sp needed
 278 0120 BDEC028B 		vldm	sp!, {d8}
 279              		.cfi_restore 80
 280              		.cfi_restore 81
 281              		.cfi_def_cfa_offset 28
 282 0124 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 283              	.LVL20:
 284              	.L14:
 285              		.cfi_restore_state
 286              		.loc 1 48 1 view .LVU89
 287 0128 8DED017A 		vstr.32	s14, [sp, #4]	@ int
 288              	.LBB230:
 289              	.LBB229:
 290              	.LBB228:
 291              	.LBB224:
 292              		.loc 2 464 27 discriminator 2 view .LVU90
 293 012c FFF7FEFF 		bl	sqrtf
 294              	.LVL21:
 295              		.loc 2 464 27 discriminator 2 view .LVU91
 296 0130 9DED017A 		vldr.32	s14, [sp, #4]	@ int
 297 0134 B0EE408A 		vmov.f32	s16, s0
 298 0138 CFE7     		b	.L6
 299              	.L18:
 300 013a 00BFAFF3 		.align	3
 300      0080
 301              	.L17:
 302 0140 00000000 		.word	0
 303 0144 00E4AC40 		.word	1085072384
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 16


 304 0148 00000000 		.word	0
 305 014c 00E49C40 		.word	1084023808
 306 0150 00000000 		.word	0
 307 0154 00004940 		.word	1078525952
 308 0158 DB0F4940 		.word	1078530011
 309 015c 0000F042 		.word	1123024896
 310              	.LBE224:
 311              	.LBE228:
 312              	.LBE229:
 313              	.LBE230:
 314              		.cfi_endproc
 315              	.LFE4738:
 317              		.section	.text._ZN6TTrackC2Ev,"ax",%progbits
 318              		.align	1
 319              		.p2align 2,,3
 320              		.global	_ZN6TTrackC2Ev
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 324              		.fpu fpv5-d16
 326              	_ZN6TTrackC2Ev:
 327              	.LVL22:
 328              	.LFB4736:
   4:src/TTrack.cpp **** {
 329              		.loc 1 4 1 is_stmt 1 view -0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
   4:src/TTrack.cpp **** {
 333              		.loc 1 4 1 is_stmt 0 view .LVU93
 334 0000 70B5     		push	{r4, r5, r6, lr}
 335              		.cfi_def_cfa_offset 16
 336              		.cfi_offset 4, -16
 337              		.cfi_offset 5, -12
 338              		.cfi_offset 6, -8
 339              		.cfi_offset 14, -4
   4:src/TTrack.cpp **** {
 340              		.loc 1 4 1 view .LVU94
 341 0002 0446     		mov	r4, r0
 342              	.LVL23:
 343              	.LBB231:
 344              	.LBB232:
 345              	.LBI232:
 346              		.file 3 "./lib/etl/include/etl/circular_buffer.h"
   1:./lib/etl/include/etl/circular_buffer.h **** ///\file
   2:./lib/etl/include/etl/circular_buffer.h **** 
   3:./lib/etl/include/etl/circular_buffer.h **** /******************************************************************************
   4:./lib/etl/include/etl/circular_buffer.h **** The MIT License(MIT)
   5:./lib/etl/include/etl/circular_buffer.h **** 
   6:./lib/etl/include/etl/circular_buffer.h **** Embedded Template Library.
   7:./lib/etl/include/etl/circular_buffer.h **** https://github.com/ETLCPP/etl
   8:./lib/etl/include/etl/circular_buffer.h **** https://www.etlcpp.com
   9:./lib/etl/include/etl/circular_buffer.h **** 
  10:./lib/etl/include/etl/circular_buffer.h **** Copyright(c) 2020 John Wellbelove
  11:./lib/etl/include/etl/circular_buffer.h **** 
  12:./lib/etl/include/etl/circular_buffer.h **** Permission is hereby granted, free of charge, to any person obtaining a copy
  13:./lib/etl/include/etl/circular_buffer.h **** of this software and associated documentation files(the "Software"), to deal
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 17


  14:./lib/etl/include/etl/circular_buffer.h **** in the Software without restriction, including without limitation the rights
  15:./lib/etl/include/etl/circular_buffer.h **** to use, copy, modify, merge, publish, distribute, sublicense, and / or sell
  16:./lib/etl/include/etl/circular_buffer.h **** copies of the Software, and to permit persons to whom the Software is
  17:./lib/etl/include/etl/circular_buffer.h **** furnished to do so, subject to the following conditions :
  18:./lib/etl/include/etl/circular_buffer.h **** 
  19:./lib/etl/include/etl/circular_buffer.h **** The above copyright notice and this permission notice shall be included in all
  20:./lib/etl/include/etl/circular_buffer.h **** copies or substantial portions of the Software.
  21:./lib/etl/include/etl/circular_buffer.h **** 
  22:./lib/etl/include/etl/circular_buffer.h **** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  23:./lib/etl/include/etl/circular_buffer.h **** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  24:./lib/etl/include/etl/circular_buffer.h **** FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE
  25:./lib/etl/include/etl/circular_buffer.h **** AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  26:./lib/etl/include/etl/circular_buffer.h **** LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  27:./lib/etl/include/etl/circular_buffer.h **** OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  28:./lib/etl/include/etl/circular_buffer.h **** SOFTWARE.
  29:./lib/etl/include/etl/circular_buffer.h **** ******************************************************************************/
  30:./lib/etl/include/etl/circular_buffer.h **** 
  31:./lib/etl/include/etl/circular_buffer.h **** #ifndef ETL_CIRCULAR_BUFFER_INCLUDED
  32:./lib/etl/include/etl/circular_buffer.h **** #define ETL_CIRCULAR_BUFFER_INCLUDED
  33:./lib/etl/include/etl/circular_buffer.h **** 
  34:./lib/etl/include/etl/circular_buffer.h **** #include "platform.h"
  35:./lib/etl/include/etl/circular_buffer.h **** #include "vector.h"
  36:./lib/etl/include/etl/circular_buffer.h **** #include "exception.h"
  37:./lib/etl/include/etl/circular_buffer.h **** #include "error_handler.h"
  38:./lib/etl/include/etl/circular_buffer.h **** #include "memory.h"
  39:./lib/etl/include/etl/circular_buffer.h **** #include "memory_model.h"
  40:./lib/etl/include/etl/circular_buffer.h **** #include "type_traits.h"
  41:./lib/etl/include/etl/circular_buffer.h **** #include "iterator.h"
  42:./lib/etl/include/etl/circular_buffer.h **** #include "static_assert.h"
  43:./lib/etl/include/etl/circular_buffer.h **** #include "initializer_list.h"
  44:./lib/etl/include/etl/circular_buffer.h **** 
  45:./lib/etl/include/etl/circular_buffer.h **** namespace etl
  46:./lib/etl/include/etl/circular_buffer.h **** {
  47:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
  48:./lib/etl/include/etl/circular_buffer.h ****   /// Exception for the circular_buffer.
  49:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
  50:./lib/etl/include/etl/circular_buffer.h ****   class circular_buffer_exception : public etl::exception
  51:./lib/etl/include/etl/circular_buffer.h ****   {
  52:./lib/etl/include/etl/circular_buffer.h ****   public:
  53:./lib/etl/include/etl/circular_buffer.h **** 
  54:./lib/etl/include/etl/circular_buffer.h ****     circular_buffer_exception(string_type reason_, string_type file_name_, numeric_type line_number
  55:./lib/etl/include/etl/circular_buffer.h ****       : exception(reason_, file_name_, line_number_)
  56:./lib/etl/include/etl/circular_buffer.h ****     {
  57:./lib/etl/include/etl/circular_buffer.h ****     }
  58:./lib/etl/include/etl/circular_buffer.h ****   };
  59:./lib/etl/include/etl/circular_buffer.h **** 
  60:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
  61:./lib/etl/include/etl/circular_buffer.h ****   /// Empty exception for the circular_buffer.
  62:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
  63:./lib/etl/include/etl/circular_buffer.h ****   class circular_buffer_empty : public etl::circular_buffer_exception
  64:./lib/etl/include/etl/circular_buffer.h ****   {
  65:./lib/etl/include/etl/circular_buffer.h ****   public:
  66:./lib/etl/include/etl/circular_buffer.h **** 
  67:./lib/etl/include/etl/circular_buffer.h ****     circular_buffer_empty(string_type file_name_, numeric_type line_number_)
  68:./lib/etl/include/etl/circular_buffer.h ****       : etl::circular_buffer_exception(ETL_ERROR_TEXT("circular_buffer:empty", ETL_CIRCULAR_BUFFER_
  69:./lib/etl/include/etl/circular_buffer.h ****     {
  70:./lib/etl/include/etl/circular_buffer.h ****     }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 18


  71:./lib/etl/include/etl/circular_buffer.h ****   };
  72:./lib/etl/include/etl/circular_buffer.h **** 
  73:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
  74:./lib/etl/include/etl/circular_buffer.h ****   /// Incompatible type exception.
  75:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
  76:./lib/etl/include/etl/circular_buffer.h ****   class circular_buffer_incompatible_type : public circular_buffer_exception
  77:./lib/etl/include/etl/circular_buffer.h ****   {
  78:./lib/etl/include/etl/circular_buffer.h ****   public:
  79:./lib/etl/include/etl/circular_buffer.h **** 
  80:./lib/etl/include/etl/circular_buffer.h ****     circular_buffer_incompatible_type(string_type file_name_, numeric_type line_number_)
  81:./lib/etl/include/etl/circular_buffer.h ****       : circular_buffer_exception(ETL_ERROR_TEXT("circular_buffer:type", ETL_CIRCULAR_BUFFER_FILE_I
  82:./lib/etl/include/etl/circular_buffer.h ****     {
  83:./lib/etl/include/etl/circular_buffer.h ****     }
  84:./lib/etl/include/etl/circular_buffer.h ****   };
  85:./lib/etl/include/etl/circular_buffer.h **** 
  86:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
  87:./lib/etl/include/etl/circular_buffer.h ****   ///
  88:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
  89:./lib/etl/include/etl/circular_buffer.h ****   class circular_buffer_base
  90:./lib/etl/include/etl/circular_buffer.h ****   {
  91:./lib/etl/include/etl/circular_buffer.h ****   public:
  92:./lib/etl/include/etl/circular_buffer.h **** 
  93:./lib/etl/include/etl/circular_buffer.h ****     /// The type used for determining the size of queue.
  94:./lib/etl/include/etl/circular_buffer.h ****     typedef size_t size_type;
  95:./lib/etl/include/etl/circular_buffer.h **** 
  96:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
  97:./lib/etl/include/etl/circular_buffer.h ****     size_type size() const
  98:./lib/etl/include/etl/circular_buffer.h ****     {
  99:./lib/etl/include/etl/circular_buffer.h ****       return (in >= out) ? in - out : buffer_size - (out - in);
 100:./lib/etl/include/etl/circular_buffer.h ****     }
 101:./lib/etl/include/etl/circular_buffer.h **** 
 102:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 103:./lib/etl/include/etl/circular_buffer.h ****     bool empty() const
 104:./lib/etl/include/etl/circular_buffer.h ****     {
 105:./lib/etl/include/etl/circular_buffer.h ****       return in == out;
 106:./lib/etl/include/etl/circular_buffer.h ****     }
 107:./lib/etl/include/etl/circular_buffer.h **** 
 108:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 109:./lib/etl/include/etl/circular_buffer.h ****     bool full() const
 110:./lib/etl/include/etl/circular_buffer.h ****     {
 111:./lib/etl/include/etl/circular_buffer.h ****       size_t i = in;
 112:./lib/etl/include/etl/circular_buffer.h **** 
 113:./lib/etl/include/etl/circular_buffer.h ****       ++i;
 114:./lib/etl/include/etl/circular_buffer.h ****       if (i == buffer_size) ETL_UNLIKELY
 115:./lib/etl/include/etl/circular_buffer.h ****       {
 116:./lib/etl/include/etl/circular_buffer.h ****         i = 0U;
 117:./lib/etl/include/etl/circular_buffer.h ****       }
 118:./lib/etl/include/etl/circular_buffer.h **** 
 119:./lib/etl/include/etl/circular_buffer.h ****       return i == out;
 120:./lib/etl/include/etl/circular_buffer.h ****     }
 121:./lib/etl/include/etl/circular_buffer.h **** 
 122:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 123:./lib/etl/include/etl/circular_buffer.h ****     size_type available() const
 124:./lib/etl/include/etl/circular_buffer.h ****     {
 125:./lib/etl/include/etl/circular_buffer.h ****       return max_size() - size();
 126:./lib/etl/include/etl/circular_buffer.h ****     }
 127:./lib/etl/include/etl/circular_buffer.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 19


 128:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 129:./lib/etl/include/etl/circular_buffer.h ****     size_type max_size() const
 130:./lib/etl/include/etl/circular_buffer.h ****     {
 131:./lib/etl/include/etl/circular_buffer.h ****       return buffer_size - 1U;
 132:./lib/etl/include/etl/circular_buffer.h ****     }
 133:./lib/etl/include/etl/circular_buffer.h **** 
 134:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 135:./lib/etl/include/etl/circular_buffer.h ****     size_type capacity() const
 136:./lib/etl/include/etl/circular_buffer.h ****     {
 137:./lib/etl/include/etl/circular_buffer.h ****       return buffer_size - 1U;
 138:./lib/etl/include/etl/circular_buffer.h ****     }
 139:./lib/etl/include/etl/circular_buffer.h **** 
 140:./lib/etl/include/etl/circular_buffer.h ****   protected:
 141:./lib/etl/include/etl/circular_buffer.h **** 
 142:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 143:./lib/etl/include/etl/circular_buffer.h ****     circular_buffer_base(size_type buffer_size_)
 144:./lib/etl/include/etl/circular_buffer.h ****       : buffer_size(buffer_size_)
 145:./lib/etl/include/etl/circular_buffer.h ****       , in(0U)
 146:./lib/etl/include/etl/circular_buffer.h ****       , out(0U)
 147:./lib/etl/include/etl/circular_buffer.h ****     {
 148:./lib/etl/include/etl/circular_buffer.h ****     }
 149:./lib/etl/include/etl/circular_buffer.h **** 
 150:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 151:./lib/etl/include/etl/circular_buffer.h ****     void increment_in()
 152:./lib/etl/include/etl/circular_buffer.h ****     {
 153:./lib/etl/include/etl/circular_buffer.h ****       ++in;
 154:./lib/etl/include/etl/circular_buffer.h ****       if (in == buffer_size) ETL_UNLIKELY
 155:./lib/etl/include/etl/circular_buffer.h ****       {
 156:./lib/etl/include/etl/circular_buffer.h ****         in = 0U;
 157:./lib/etl/include/etl/circular_buffer.h ****       }
 158:./lib/etl/include/etl/circular_buffer.h ****     }
 159:./lib/etl/include/etl/circular_buffer.h **** 
 160:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 161:./lib/etl/include/etl/circular_buffer.h ****     void increment_out()
 162:./lib/etl/include/etl/circular_buffer.h ****     {
 163:./lib/etl/include/etl/circular_buffer.h ****       ++out;
 164:./lib/etl/include/etl/circular_buffer.h ****       if (out == buffer_size) ETL_UNLIKELY
 165:./lib/etl/include/etl/circular_buffer.h ****       {
 166:./lib/etl/include/etl/circular_buffer.h ****         out = 0U;
 167:./lib/etl/include/etl/circular_buffer.h ****       }
 168:./lib/etl/include/etl/circular_buffer.h ****     }
 169:./lib/etl/include/etl/circular_buffer.h **** 
 170:./lib/etl/include/etl/circular_buffer.h ****     size_type buffer_size;
 171:./lib/etl/include/etl/circular_buffer.h ****     size_type in;            ///< Index to the next write.
 172:./lib/etl/include/etl/circular_buffer.h ****     size_type out;           ///< Index to the next read.
 173:./lib/etl/include/etl/circular_buffer.h ****     ETL_DECLARE_DEBUG_COUNT;  ///< Internal debugging.
 174:./lib/etl/include/etl/circular_buffer.h ****   };
 175:./lib/etl/include/etl/circular_buffer.h **** 
 176:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
 177:./lib/etl/include/etl/circular_buffer.h ****   ///
 178:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
 179:./lib/etl/include/etl/circular_buffer.h ****   template <typename T>
 180:./lib/etl/include/etl/circular_buffer.h ****   class icircular_buffer : public circular_buffer_base
 181:./lib/etl/include/etl/circular_buffer.h ****   {
 182:./lib/etl/include/etl/circular_buffer.h ****   public:
 183:./lib/etl/include/etl/circular_buffer.h **** 
 184:./lib/etl/include/etl/circular_buffer.h ****     typedef T           value_type;
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 20


 185:./lib/etl/include/etl/circular_buffer.h ****     typedef T&          reference;
 186:./lib/etl/include/etl/circular_buffer.h ****     typedef const T&    const_reference;
 187:./lib/etl/include/etl/circular_buffer.h **** #if ETL_USING_CPP11
 188:./lib/etl/include/etl/circular_buffer.h ****     typedef T&&         rvalue_reference;
 189:./lib/etl/include/etl/circular_buffer.h **** #endif
 190:./lib/etl/include/etl/circular_buffer.h ****     typedef T*          pointer;
 191:./lib/etl/include/etl/circular_buffer.h ****     typedef const T*    const_pointer;
 192:./lib/etl/include/etl/circular_buffer.h **** 
 193:./lib/etl/include/etl/circular_buffer.h ****     typedef typename etl::iterator_traits<pointer>::difference_type difference_type;
 194:./lib/etl/include/etl/circular_buffer.h **** 
 195:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 196:./lib/etl/include/etl/circular_buffer.h ****     /// Iterator iterating through the circular buffer.
 197:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 198:./lib/etl/include/etl/circular_buffer.h ****     class iterator : public etl::iterator<ETL_OR_STD::random_access_iterator_tag, T>
 199:./lib/etl/include/etl/circular_buffer.h ****     {
 200:./lib/etl/include/etl/circular_buffer.h ****     public:
 201:./lib/etl/include/etl/circular_buffer.h **** 
 202:./lib/etl/include/etl/circular_buffer.h ****       friend class icircular_buffer;
 203:./lib/etl/include/etl/circular_buffer.h **** 
 204:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 205:./lib/etl/include/etl/circular_buffer.h ****       /// Constructor
 206:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 207:./lib/etl/include/etl/circular_buffer.h ****       iterator()
 208:./lib/etl/include/etl/circular_buffer.h ****         : picb(ETL_NULLPTR)
 209:./lib/etl/include/etl/circular_buffer.h ****         , current(0U)
 210:./lib/etl/include/etl/circular_buffer.h ****       {
 211:./lib/etl/include/etl/circular_buffer.h ****       }
 212:./lib/etl/include/etl/circular_buffer.h **** 
 213:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 214:./lib/etl/include/etl/circular_buffer.h ****       /// Copy Constructor
 215:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 216:./lib/etl/include/etl/circular_buffer.h ****       iterator(const iterator& other)
 217:./lib/etl/include/etl/circular_buffer.h ****         : picb(other.picb)
 218:./lib/etl/include/etl/circular_buffer.h ****         , current(other.current)
 219:./lib/etl/include/etl/circular_buffer.h ****       {
 220:./lib/etl/include/etl/circular_buffer.h ****       }
 221:./lib/etl/include/etl/circular_buffer.h **** 
 222:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 223:./lib/etl/include/etl/circular_buffer.h ****       /// Assignment operator.
 224:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 225:./lib/etl/include/etl/circular_buffer.h ****       iterator& operator =(const iterator& other)
 226:./lib/etl/include/etl/circular_buffer.h ****       {
 227:./lib/etl/include/etl/circular_buffer.h ****         picb    = other.picb;
 228:./lib/etl/include/etl/circular_buffer.h ****         current = other.current;
 229:./lib/etl/include/etl/circular_buffer.h **** 
 230:./lib/etl/include/etl/circular_buffer.h ****         return *this;
 231:./lib/etl/include/etl/circular_buffer.h ****       }
 232:./lib/etl/include/etl/circular_buffer.h **** 
 233:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 234:./lib/etl/include/etl/circular_buffer.h ****       /// * operator
 235:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 236:./lib/etl/include/etl/circular_buffer.h ****       reference operator *() const
 237:./lib/etl/include/etl/circular_buffer.h ****       {
 238:./lib/etl/include/etl/circular_buffer.h ****         return picb->pbuffer[current];
 239:./lib/etl/include/etl/circular_buffer.h ****       }
 240:./lib/etl/include/etl/circular_buffer.h **** 
 241:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 21


 242:./lib/etl/include/etl/circular_buffer.h ****       /// -> operator
 243:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 244:./lib/etl/include/etl/circular_buffer.h ****       pointer operator ->() const
 245:./lib/etl/include/etl/circular_buffer.h ****       {
 246:./lib/etl/include/etl/circular_buffer.h ****         return &picb->pbuffer[current];
 247:./lib/etl/include/etl/circular_buffer.h ****       }
 248:./lib/etl/include/etl/circular_buffer.h **** 
 249:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 250:./lib/etl/include/etl/circular_buffer.h ****       /// Pre-increment.
 251:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 252:./lib/etl/include/etl/circular_buffer.h ****       iterator& operator ++()
 253:./lib/etl/include/etl/circular_buffer.h ****       {
 254:./lib/etl/include/etl/circular_buffer.h ****         ++current;
 255:./lib/etl/include/etl/circular_buffer.h **** 
 256:./lib/etl/include/etl/circular_buffer.h ****         // Did we reach the end of the buffer?
 257:./lib/etl/include/etl/circular_buffer.h ****         if (current == picb->buffer_size)
 258:./lib/etl/include/etl/circular_buffer.h ****         {
 259:./lib/etl/include/etl/circular_buffer.h ****           current = 0U;
 260:./lib/etl/include/etl/circular_buffer.h ****         }
 261:./lib/etl/include/etl/circular_buffer.h **** 
 262:./lib/etl/include/etl/circular_buffer.h ****         return (*this);
 263:./lib/etl/include/etl/circular_buffer.h ****       }
 264:./lib/etl/include/etl/circular_buffer.h **** 
 265:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 266:./lib/etl/include/etl/circular_buffer.h ****       /// Post increment.
 267:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 268:./lib/etl/include/etl/circular_buffer.h ****       iterator operator ++(int)
 269:./lib/etl/include/etl/circular_buffer.h ****       {
 270:./lib/etl/include/etl/circular_buffer.h ****         iterator original(*this);
 271:./lib/etl/include/etl/circular_buffer.h **** 
 272:./lib/etl/include/etl/circular_buffer.h ****         ++(*this);
 273:./lib/etl/include/etl/circular_buffer.h **** 
 274:./lib/etl/include/etl/circular_buffer.h ****         return (original);
 275:./lib/etl/include/etl/circular_buffer.h ****       }
 276:./lib/etl/include/etl/circular_buffer.h **** 
 277:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 278:./lib/etl/include/etl/circular_buffer.h ****       /// Pre-decrement.
 279:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 280:./lib/etl/include/etl/circular_buffer.h ****       iterator& operator --()
 281:./lib/etl/include/etl/circular_buffer.h ****       {
 282:./lib/etl/include/etl/circular_buffer.h ****         // Are we at the end of the buffer?
 283:./lib/etl/include/etl/circular_buffer.h ****         if (current == 0U)
 284:./lib/etl/include/etl/circular_buffer.h ****         {
 285:./lib/etl/include/etl/circular_buffer.h ****           current = picb->buffer_size - 1;
 286:./lib/etl/include/etl/circular_buffer.h ****         }
 287:./lib/etl/include/etl/circular_buffer.h ****         else
 288:./lib/etl/include/etl/circular_buffer.h ****         {
 289:./lib/etl/include/etl/circular_buffer.h ****           --current;
 290:./lib/etl/include/etl/circular_buffer.h ****         }
 291:./lib/etl/include/etl/circular_buffer.h **** 
 292:./lib/etl/include/etl/circular_buffer.h ****         return (*this);
 293:./lib/etl/include/etl/circular_buffer.h ****       }
 294:./lib/etl/include/etl/circular_buffer.h **** 
 295:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 296:./lib/etl/include/etl/circular_buffer.h ****       /// Post increment.
 297:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 298:./lib/etl/include/etl/circular_buffer.h ****       iterator operator --(int)
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 22


 299:./lib/etl/include/etl/circular_buffer.h ****       {
 300:./lib/etl/include/etl/circular_buffer.h ****         iterator original(*this);
 301:./lib/etl/include/etl/circular_buffer.h **** 
 302:./lib/etl/include/etl/circular_buffer.h ****         --(*this);
 303:./lib/etl/include/etl/circular_buffer.h **** 
 304:./lib/etl/include/etl/circular_buffer.h ****         return (original);
 305:./lib/etl/include/etl/circular_buffer.h ****       }
 306:./lib/etl/include/etl/circular_buffer.h **** 
 307:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 308:./lib/etl/include/etl/circular_buffer.h ****       /// Add offset.
 309:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 310:./lib/etl/include/etl/circular_buffer.h ****       iterator& operator +=(int n)
 311:./lib/etl/include/etl/circular_buffer.h ****       {
 312:./lib/etl/include/etl/circular_buffer.h ****         current += size_type(picb->buffer_size + n);
 313:./lib/etl/include/etl/circular_buffer.h ****         current %= picb->buffer_size;
 314:./lib/etl/include/etl/circular_buffer.h **** 
 315:./lib/etl/include/etl/circular_buffer.h ****         return (*this);
 316:./lib/etl/include/etl/circular_buffer.h ****       }
 317:./lib/etl/include/etl/circular_buffer.h **** 
 318:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 319:./lib/etl/include/etl/circular_buffer.h ****       /// Subtract offset.
 320:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 321:./lib/etl/include/etl/circular_buffer.h ****       iterator& operator -=(int n)
 322:./lib/etl/include/etl/circular_buffer.h ****       {
 323:./lib/etl/include/etl/circular_buffer.h ****         return (this->operator+=(-n));
 324:./lib/etl/include/etl/circular_buffer.h ****       }
 325:./lib/etl/include/etl/circular_buffer.h **** 
 326:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 327:./lib/etl/include/etl/circular_buffer.h ****       /// Add offset.
 328:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 329:./lib/etl/include/etl/circular_buffer.h ****       friend iterator operator +(const iterator& lhs, int n)
 330:./lib/etl/include/etl/circular_buffer.h ****       {
 331:./lib/etl/include/etl/circular_buffer.h ****         iterator temp = lhs;
 332:./lib/etl/include/etl/circular_buffer.h **** 
 333:./lib/etl/include/etl/circular_buffer.h ****         temp += n;
 334:./lib/etl/include/etl/circular_buffer.h **** 
 335:./lib/etl/include/etl/circular_buffer.h ****         return temp;
 336:./lib/etl/include/etl/circular_buffer.h ****       }
 337:./lib/etl/include/etl/circular_buffer.h **** 
 338:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 339:./lib/etl/include/etl/circular_buffer.h ****       /// Subtract offset.
 340:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 341:./lib/etl/include/etl/circular_buffer.h ****       friend iterator operator -(const iterator& lhs, int n)
 342:./lib/etl/include/etl/circular_buffer.h ****       {
 343:./lib/etl/include/etl/circular_buffer.h ****         iterator temp = lhs;
 344:./lib/etl/include/etl/circular_buffer.h **** 
 345:./lib/etl/include/etl/circular_buffer.h ****         temp -= n;
 346:./lib/etl/include/etl/circular_buffer.h **** 
 347:./lib/etl/include/etl/circular_buffer.h ****         return temp;
 348:./lib/etl/include/etl/circular_buffer.h ****       }
 349:./lib/etl/include/etl/circular_buffer.h **** 
 350:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 351:./lib/etl/include/etl/circular_buffer.h ****       /// Equality operator
 352:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 353:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator == (const iterator& lhs, const iterator& rhs)
 354:./lib/etl/include/etl/circular_buffer.h ****       {
 355:./lib/etl/include/etl/circular_buffer.h ****         return (lhs.current == rhs.current);
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 23


 356:./lib/etl/include/etl/circular_buffer.h ****       }
 357:./lib/etl/include/etl/circular_buffer.h **** 
 358:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 359:./lib/etl/include/etl/circular_buffer.h ****       /// Inequality operator
 360:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 361:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator != (const iterator& lhs, const iterator& rhs)
 362:./lib/etl/include/etl/circular_buffer.h ****       {
 363:./lib/etl/include/etl/circular_buffer.h ****         return !(lhs == rhs);
 364:./lib/etl/include/etl/circular_buffer.h ****       }
 365:./lib/etl/include/etl/circular_buffer.h **** 
 366:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 367:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator < (const iterator& lhs, const iterator& rhs)
 368:./lib/etl/include/etl/circular_buffer.h ****       {
 369:./lib/etl/include/etl/circular_buffer.h ****         const difference_type lhs_index = lhs.get_index();
 370:./lib/etl/include/etl/circular_buffer.h ****         const difference_type rhs_index = rhs.get_index();
 371:./lib/etl/include/etl/circular_buffer.h ****         const difference_type reference_index = lhs.container().begin().get_index();
 372:./lib/etl/include/etl/circular_buffer.h ****         const size_t buffer_size = lhs.container().max_size() + 1UL;
 373:./lib/etl/include/etl/circular_buffer.h **** 
 374:./lib/etl/include/etl/circular_buffer.h ****         const difference_type lhs_distance = (lhs_index < reference_index) ? buffer_size + lhs_inde
 375:./lib/etl/include/etl/circular_buffer.h ****         const difference_type rhs_distance = (rhs_index < reference_index) ? buffer_size + rhs_inde
 376:./lib/etl/include/etl/circular_buffer.h **** 
 377:./lib/etl/include/etl/circular_buffer.h ****         return lhs_distance < rhs_distance;
 378:./lib/etl/include/etl/circular_buffer.h ****       }
 379:./lib/etl/include/etl/circular_buffer.h **** 
 380:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 381:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator <= (const iterator& lhs, const iterator& rhs)
 382:./lib/etl/include/etl/circular_buffer.h ****       {
 383:./lib/etl/include/etl/circular_buffer.h ****         return !(lhs > rhs);
 384:./lib/etl/include/etl/circular_buffer.h ****       }
 385:./lib/etl/include/etl/circular_buffer.h **** 
 386:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 387:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator > (const iterator& lhs, const iterator& rhs)
 388:./lib/etl/include/etl/circular_buffer.h ****       {
 389:./lib/etl/include/etl/circular_buffer.h ****         return (rhs < lhs);
 390:./lib/etl/include/etl/circular_buffer.h ****       }
 391:./lib/etl/include/etl/circular_buffer.h **** 
 392:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 393:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator >= (const iterator& lhs, const iterator& rhs)
 394:./lib/etl/include/etl/circular_buffer.h ****       {
 395:./lib/etl/include/etl/circular_buffer.h ****         return !(lhs < rhs);
 396:./lib/etl/include/etl/circular_buffer.h ****       }
 397:./lib/etl/include/etl/circular_buffer.h **** 
 398:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 399:./lib/etl/include/etl/circular_buffer.h ****       difference_type get_index() const
 400:./lib/etl/include/etl/circular_buffer.h ****       {
 401:./lib/etl/include/etl/circular_buffer.h ****         return current;
 402:./lib/etl/include/etl/circular_buffer.h ****       }
 403:./lib/etl/include/etl/circular_buffer.h **** 
 404:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 405:./lib/etl/include/etl/circular_buffer.h ****       const icircular_buffer& container() const
 406:./lib/etl/include/etl/circular_buffer.h ****       {
 407:./lib/etl/include/etl/circular_buffer.h ****         return *picb;
 408:./lib/etl/include/etl/circular_buffer.h ****       }
 409:./lib/etl/include/etl/circular_buffer.h **** 
 410:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 411:./lib/etl/include/etl/circular_buffer.h ****       pointer get_buffer() const
 412:./lib/etl/include/etl/circular_buffer.h ****       {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 24


 413:./lib/etl/include/etl/circular_buffer.h ****         return pbuffer;
 414:./lib/etl/include/etl/circular_buffer.h ****       }
 415:./lib/etl/include/etl/circular_buffer.h **** 
 416:./lib/etl/include/etl/circular_buffer.h ****     protected:
 417:./lib/etl/include/etl/circular_buffer.h **** 
 418:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 419:./lib/etl/include/etl/circular_buffer.h ****       difference_type distance(difference_type firstIndex, difference_type index) const
 420:./lib/etl/include/etl/circular_buffer.h ****       {
 421:./lib/etl/include/etl/circular_buffer.h ****         if (index < firstIndex)
 422:./lib/etl/include/etl/circular_buffer.h ****         {
 423:./lib/etl/include/etl/circular_buffer.h ****           return picb->buffer_size + current - firstIndex;
 424:./lib/etl/include/etl/circular_buffer.h ****         }
 425:./lib/etl/include/etl/circular_buffer.h ****         else
 426:./lib/etl/include/etl/circular_buffer.h ****         {
 427:./lib/etl/include/etl/circular_buffer.h ****           return index - firstIndex;
 428:./lib/etl/include/etl/circular_buffer.h ****         }
 429:./lib/etl/include/etl/circular_buffer.h ****       }
 430:./lib/etl/include/etl/circular_buffer.h **** 
 431:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 432:./lib/etl/include/etl/circular_buffer.h ****       /// Protected constructor. Only icircular_buffer can create one.
 433:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 434:./lib/etl/include/etl/circular_buffer.h ****       iterator(const icircular_buffer<T>* picb_, size_type current_)
 435:./lib/etl/include/etl/circular_buffer.h ****         : picb(picb_)
 436:./lib/etl/include/etl/circular_buffer.h ****         , current(current_)
 437:./lib/etl/include/etl/circular_buffer.h ****       {
 438:./lib/etl/include/etl/circular_buffer.h ****       }
 439:./lib/etl/include/etl/circular_buffer.h **** 
 440:./lib/etl/include/etl/circular_buffer.h ****     private:
 441:./lib/etl/include/etl/circular_buffer.h **** 
 442:./lib/etl/include/etl/circular_buffer.h ****       const icircular_buffer<T>* picb;
 443:./lib/etl/include/etl/circular_buffer.h ****       size_type current;
 444:./lib/etl/include/etl/circular_buffer.h ****     };
 445:./lib/etl/include/etl/circular_buffer.h **** 
 446:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 447:./lib/etl/include/etl/circular_buffer.h ****     /// Iterator iterating through the circular buffer.
 448:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 449:./lib/etl/include/etl/circular_buffer.h ****     class const_iterator : public etl::iterator<ETL_OR_STD::random_access_iterator_tag, const T>
 450:./lib/etl/include/etl/circular_buffer.h ****     {
 451:./lib/etl/include/etl/circular_buffer.h ****     public:
 452:./lib/etl/include/etl/circular_buffer.h **** 
 453:./lib/etl/include/etl/circular_buffer.h ****       friend class icircular_buffer;
 454:./lib/etl/include/etl/circular_buffer.h **** 
 455:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 456:./lib/etl/include/etl/circular_buffer.h ****       /// Constructor
 457:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 458:./lib/etl/include/etl/circular_buffer.h ****       const_iterator()
 459:./lib/etl/include/etl/circular_buffer.h ****         : picb(ETL_NULLPTR)
 460:./lib/etl/include/etl/circular_buffer.h ****         , current(0U)
 461:./lib/etl/include/etl/circular_buffer.h ****       {
 462:./lib/etl/include/etl/circular_buffer.h ****       }
 463:./lib/etl/include/etl/circular_buffer.h **** 
 464:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 465:./lib/etl/include/etl/circular_buffer.h ****       /// Copy Constructor from iterator
 466:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 467:./lib/etl/include/etl/circular_buffer.h ****       const_iterator(const typename icircular_buffer::iterator& other)
 468:./lib/etl/include/etl/circular_buffer.h ****         : picb(other.picb)
 469:./lib/etl/include/etl/circular_buffer.h ****         , current(other.current)
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 25


 470:./lib/etl/include/etl/circular_buffer.h ****       {
 471:./lib/etl/include/etl/circular_buffer.h ****       }
 472:./lib/etl/include/etl/circular_buffer.h **** 
 473:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 474:./lib/etl/include/etl/circular_buffer.h ****       /// Copy Constructor from const iterator
 475:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 476:./lib/etl/include/etl/circular_buffer.h ****       const_iterator(const const_iterator& other)
 477:./lib/etl/include/etl/circular_buffer.h ****         : picb(other.picb)
 478:./lib/etl/include/etl/circular_buffer.h ****         , current(other.current)
 479:./lib/etl/include/etl/circular_buffer.h ****       {
 480:./lib/etl/include/etl/circular_buffer.h ****       }
 481:./lib/etl/include/etl/circular_buffer.h **** 
 482:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 483:./lib/etl/include/etl/circular_buffer.h ****       /// Assignment operator.
 484:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 485:./lib/etl/include/etl/circular_buffer.h ****       const_iterator& operator =(const typename icircular_buffer::iterator& other)
 486:./lib/etl/include/etl/circular_buffer.h ****       {
 487:./lib/etl/include/etl/circular_buffer.h ****         picb    = other.picb;
 488:./lib/etl/include/etl/circular_buffer.h ****         current = other.current;
 489:./lib/etl/include/etl/circular_buffer.h **** 
 490:./lib/etl/include/etl/circular_buffer.h ****         return *this;
 491:./lib/etl/include/etl/circular_buffer.h ****       }
 492:./lib/etl/include/etl/circular_buffer.h **** 
 493:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 494:./lib/etl/include/etl/circular_buffer.h ****       /// Assignment operator.
 495:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 496:./lib/etl/include/etl/circular_buffer.h ****       const_iterator& operator =(const const_iterator& other)
 497:./lib/etl/include/etl/circular_buffer.h ****       {
 498:./lib/etl/include/etl/circular_buffer.h ****         picb    = other.picb;
 499:./lib/etl/include/etl/circular_buffer.h ****         current = other.current;
 500:./lib/etl/include/etl/circular_buffer.h **** 
 501:./lib/etl/include/etl/circular_buffer.h ****         return *this;
 502:./lib/etl/include/etl/circular_buffer.h ****       }
 503:./lib/etl/include/etl/circular_buffer.h **** 
 504:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 505:./lib/etl/include/etl/circular_buffer.h ****       /// * operator
 506:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 507:./lib/etl/include/etl/circular_buffer.h ****       const_reference operator *() const
 508:./lib/etl/include/etl/circular_buffer.h ****       {
 509:./lib/etl/include/etl/circular_buffer.h ****         return picb->pbuffer[current];
 510:./lib/etl/include/etl/circular_buffer.h ****       }
 511:./lib/etl/include/etl/circular_buffer.h **** 
 512:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 513:./lib/etl/include/etl/circular_buffer.h ****       /// -> operator
 514:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 515:./lib/etl/include/etl/circular_buffer.h ****       const_pointer operator ->() const
 516:./lib/etl/include/etl/circular_buffer.h ****       {
 517:./lib/etl/include/etl/circular_buffer.h ****         return &(picb->pbuffer[current]);
 518:./lib/etl/include/etl/circular_buffer.h ****       }
 519:./lib/etl/include/etl/circular_buffer.h **** 
 520:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 521:./lib/etl/include/etl/circular_buffer.h ****       /// Pre-increment.
 522:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 523:./lib/etl/include/etl/circular_buffer.h ****       const_iterator& operator ++()
 524:./lib/etl/include/etl/circular_buffer.h ****       {
 525:./lib/etl/include/etl/circular_buffer.h ****         ++current;
 526:./lib/etl/include/etl/circular_buffer.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 26


 527:./lib/etl/include/etl/circular_buffer.h ****         // Did we reach the end of the buffer?
 528:./lib/etl/include/etl/circular_buffer.h ****         if (current == picb->buffer_size)
 529:./lib/etl/include/etl/circular_buffer.h ****         {
 530:./lib/etl/include/etl/circular_buffer.h ****           current = 0U;
 531:./lib/etl/include/etl/circular_buffer.h ****         }
 532:./lib/etl/include/etl/circular_buffer.h **** 
 533:./lib/etl/include/etl/circular_buffer.h ****         return (*this);
 534:./lib/etl/include/etl/circular_buffer.h ****       }
 535:./lib/etl/include/etl/circular_buffer.h **** 
 536:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 537:./lib/etl/include/etl/circular_buffer.h ****       /// Post increment.
 538:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 539:./lib/etl/include/etl/circular_buffer.h ****       const_iterator operator ++(int)
 540:./lib/etl/include/etl/circular_buffer.h ****       {
 541:./lib/etl/include/etl/circular_buffer.h ****         const_iterator original(*this);
 542:./lib/etl/include/etl/circular_buffer.h **** 
 543:./lib/etl/include/etl/circular_buffer.h ****         ++(*this);
 544:./lib/etl/include/etl/circular_buffer.h **** 
 545:./lib/etl/include/etl/circular_buffer.h ****         return (original);
 546:./lib/etl/include/etl/circular_buffer.h ****       }
 547:./lib/etl/include/etl/circular_buffer.h **** 
 548:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 549:./lib/etl/include/etl/circular_buffer.h ****       /// Pre-decrement.
 550:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 551:./lib/etl/include/etl/circular_buffer.h ****       const_iterator& operator --()
 552:./lib/etl/include/etl/circular_buffer.h ****       {
 553:./lib/etl/include/etl/circular_buffer.h ****         // Are we at the end of the buffer?
 554:./lib/etl/include/etl/circular_buffer.h ****         if (current == 0U)
 555:./lib/etl/include/etl/circular_buffer.h ****         {
 556:./lib/etl/include/etl/circular_buffer.h ****           current = picb->buffer_size - 1;
 557:./lib/etl/include/etl/circular_buffer.h ****         }
 558:./lib/etl/include/etl/circular_buffer.h ****         else
 559:./lib/etl/include/etl/circular_buffer.h ****         {
 560:./lib/etl/include/etl/circular_buffer.h ****           --current;
 561:./lib/etl/include/etl/circular_buffer.h ****         }
 562:./lib/etl/include/etl/circular_buffer.h **** 
 563:./lib/etl/include/etl/circular_buffer.h ****         return (*this);
 564:./lib/etl/include/etl/circular_buffer.h ****       }
 565:./lib/etl/include/etl/circular_buffer.h **** 
 566:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 567:./lib/etl/include/etl/circular_buffer.h ****       /// Post increment.
 568:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 569:./lib/etl/include/etl/circular_buffer.h ****       const_iterator operator --(int)
 570:./lib/etl/include/etl/circular_buffer.h ****       {
 571:./lib/etl/include/etl/circular_buffer.h ****         const_iterator original(*this);
 572:./lib/etl/include/etl/circular_buffer.h **** 
 573:./lib/etl/include/etl/circular_buffer.h ****         --(*this);
 574:./lib/etl/include/etl/circular_buffer.h **** 
 575:./lib/etl/include/etl/circular_buffer.h ****         return (original);
 576:./lib/etl/include/etl/circular_buffer.h ****       }
 577:./lib/etl/include/etl/circular_buffer.h **** 
 578:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 579:./lib/etl/include/etl/circular_buffer.h ****       /// Add offset.
 580:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 581:./lib/etl/include/etl/circular_buffer.h ****       const_iterator& operator +=(int n)
 582:./lib/etl/include/etl/circular_buffer.h ****       {
 583:./lib/etl/include/etl/circular_buffer.h ****         current += size_type(picb->buffer_size + n);
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 27


 584:./lib/etl/include/etl/circular_buffer.h ****         current %= picb->buffer_size;
 585:./lib/etl/include/etl/circular_buffer.h **** 
 586:./lib/etl/include/etl/circular_buffer.h ****         return (*this);
 587:./lib/etl/include/etl/circular_buffer.h ****       }
 588:./lib/etl/include/etl/circular_buffer.h **** 
 589:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 590:./lib/etl/include/etl/circular_buffer.h ****       /// Subtract offset.
 591:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 592:./lib/etl/include/etl/circular_buffer.h ****       const_iterator& operator -=(int n)
 593:./lib/etl/include/etl/circular_buffer.h ****       {
 594:./lib/etl/include/etl/circular_buffer.h ****         return (this->operator+=(-n));
 595:./lib/etl/include/etl/circular_buffer.h ****       }
 596:./lib/etl/include/etl/circular_buffer.h **** 
 597:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 598:./lib/etl/include/etl/circular_buffer.h ****       /// Add offset.
 599:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 600:./lib/etl/include/etl/circular_buffer.h ****       friend const_iterator operator +(const const_iterator& lhs, int n)
 601:./lib/etl/include/etl/circular_buffer.h ****       {
 602:./lib/etl/include/etl/circular_buffer.h ****         const_iterator temp = lhs;
 603:./lib/etl/include/etl/circular_buffer.h **** 
 604:./lib/etl/include/etl/circular_buffer.h ****         temp += n;
 605:./lib/etl/include/etl/circular_buffer.h **** 
 606:./lib/etl/include/etl/circular_buffer.h ****         return temp;
 607:./lib/etl/include/etl/circular_buffer.h ****       }
 608:./lib/etl/include/etl/circular_buffer.h **** 
 609:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 610:./lib/etl/include/etl/circular_buffer.h ****       /// Subtract offset.
 611:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 612:./lib/etl/include/etl/circular_buffer.h ****       friend const_iterator operator -(const const_iterator& lhs, int n)
 613:./lib/etl/include/etl/circular_buffer.h ****       {
 614:./lib/etl/include/etl/circular_buffer.h ****         const_iterator temp = lhs;
 615:./lib/etl/include/etl/circular_buffer.h **** 
 616:./lib/etl/include/etl/circular_buffer.h ****         temp -= n;
 617:./lib/etl/include/etl/circular_buffer.h **** 
 618:./lib/etl/include/etl/circular_buffer.h ****         return temp;
 619:./lib/etl/include/etl/circular_buffer.h ****       }
 620:./lib/etl/include/etl/circular_buffer.h **** 
 621:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 622:./lib/etl/include/etl/circular_buffer.h ****       /// Equality operator
 623:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 624:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator == (const const_iterator& lhs, const const_iterator& rhs)
 625:./lib/etl/include/etl/circular_buffer.h ****       {
 626:./lib/etl/include/etl/circular_buffer.h ****         return (lhs.current == rhs.current);
 627:./lib/etl/include/etl/circular_buffer.h ****       }
 628:./lib/etl/include/etl/circular_buffer.h **** 
 629:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 630:./lib/etl/include/etl/circular_buffer.h ****       /// Inequality operator
 631:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 632:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator != (const const_iterator& lhs, const const_iterator& rhs)
 633:./lib/etl/include/etl/circular_buffer.h ****       {
 634:./lib/etl/include/etl/circular_buffer.h ****         return !(lhs == rhs);
 635:./lib/etl/include/etl/circular_buffer.h ****       }
 636:./lib/etl/include/etl/circular_buffer.h **** 
 637:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 638:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator < (const const_iterator& lhs, const const_iterator& rhs)
 639:./lib/etl/include/etl/circular_buffer.h ****       {
 640:./lib/etl/include/etl/circular_buffer.h ****         const difference_type lhs_index = lhs.get_index();
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 28


 641:./lib/etl/include/etl/circular_buffer.h ****         const difference_type rhs_index = rhs.get_index();
 642:./lib/etl/include/etl/circular_buffer.h ****         const difference_type reference_index = lhs.container().begin().get_index();
 643:./lib/etl/include/etl/circular_buffer.h ****         const size_t buffer_size = lhs.container().max_size() + 1UL;
 644:./lib/etl/include/etl/circular_buffer.h **** 
 645:./lib/etl/include/etl/circular_buffer.h ****         const difference_type lhs_distance = (lhs_index < reference_index) ? buffer_size + lhs_inde
 646:./lib/etl/include/etl/circular_buffer.h ****         const difference_type rhs_distance = (rhs_index < reference_index) ? buffer_size + rhs_inde
 647:./lib/etl/include/etl/circular_buffer.h **** 
 648:./lib/etl/include/etl/circular_buffer.h ****         return lhs_distance < rhs_distance;
 649:./lib/etl/include/etl/circular_buffer.h ****       }
 650:./lib/etl/include/etl/circular_buffer.h **** 
 651:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 652:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator <= (const const_iterator& lhs, const const_iterator& rhs)
 653:./lib/etl/include/etl/circular_buffer.h ****       {
 654:./lib/etl/include/etl/circular_buffer.h ****         return !(lhs > rhs);
 655:./lib/etl/include/etl/circular_buffer.h ****       }
 656:./lib/etl/include/etl/circular_buffer.h **** 
 657:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 658:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator > (const const_iterator& lhs, const const_iterator& rhs)
 659:./lib/etl/include/etl/circular_buffer.h ****       {
 660:./lib/etl/include/etl/circular_buffer.h ****         return (rhs < lhs);
 661:./lib/etl/include/etl/circular_buffer.h ****       }
 662:./lib/etl/include/etl/circular_buffer.h **** 
 663:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 664:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator >= (const const_iterator& lhs, const const_iterator& rhs)
 665:./lib/etl/include/etl/circular_buffer.h ****       {
 666:./lib/etl/include/etl/circular_buffer.h ****         return !(lhs < rhs);
 667:./lib/etl/include/etl/circular_buffer.h ****       }
 668:./lib/etl/include/etl/circular_buffer.h **** 
 669:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 670:./lib/etl/include/etl/circular_buffer.h ****       difference_type get_index() const
 671:./lib/etl/include/etl/circular_buffer.h ****       {
 672:./lib/etl/include/etl/circular_buffer.h ****         return current;
 673:./lib/etl/include/etl/circular_buffer.h ****       }
 674:./lib/etl/include/etl/circular_buffer.h **** 
 675:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 676:./lib/etl/include/etl/circular_buffer.h ****       const icircular_buffer& container() const
 677:./lib/etl/include/etl/circular_buffer.h ****       {
 678:./lib/etl/include/etl/circular_buffer.h ****         return *picb;
 679:./lib/etl/include/etl/circular_buffer.h ****       }
 680:./lib/etl/include/etl/circular_buffer.h **** 
 681:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 682:./lib/etl/include/etl/circular_buffer.h ****       pointer get_buffer() const
 683:./lib/etl/include/etl/circular_buffer.h ****       {
 684:./lib/etl/include/etl/circular_buffer.h ****         return pbuffer;
 685:./lib/etl/include/etl/circular_buffer.h ****       }
 686:./lib/etl/include/etl/circular_buffer.h **** 
 687:./lib/etl/include/etl/circular_buffer.h ****     protected:
 688:./lib/etl/include/etl/circular_buffer.h **** 
 689:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 690:./lib/etl/include/etl/circular_buffer.h ****       /// Protected constructor. Only icircular_buffer can create one.
 691:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 692:./lib/etl/include/etl/circular_buffer.h ****       const_iterator(const icircular_buffer<T>* picb_, size_type current_)
 693:./lib/etl/include/etl/circular_buffer.h ****         : picb(picb_)
 694:./lib/etl/include/etl/circular_buffer.h ****         , current(current_)
 695:./lib/etl/include/etl/circular_buffer.h ****       {
 696:./lib/etl/include/etl/circular_buffer.h ****       }
 697:./lib/etl/include/etl/circular_buffer.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 29


 698:./lib/etl/include/etl/circular_buffer.h ****     private:
 699:./lib/etl/include/etl/circular_buffer.h **** 
 700:./lib/etl/include/etl/circular_buffer.h ****       const icircular_buffer<T>* picb;
 701:./lib/etl/include/etl/circular_buffer.h ****       size_type current;
 702:./lib/etl/include/etl/circular_buffer.h ****     };
 703:./lib/etl/include/etl/circular_buffer.h **** 
 704:./lib/etl/include/etl/circular_buffer.h ****     friend class iterator;
 705:./lib/etl/include/etl/circular_buffer.h ****     friend class const_iterator;
 706:./lib/etl/include/etl/circular_buffer.h **** 
 707:./lib/etl/include/etl/circular_buffer.h ****     typedef etl::reverse_iterator<iterator>       reverse_iterator;
 708:./lib/etl/include/etl/circular_buffer.h ****     typedef etl::reverse_iterator<const_iterator> const_reverse_iterator;
 709:./lib/etl/include/etl/circular_buffer.h **** 
 710:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 711:./lib/etl/include/etl/circular_buffer.h ****     /// Gets an iterator to the start of the buffer.
 712:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 713:./lib/etl/include/etl/circular_buffer.h ****     iterator begin()
 714:./lib/etl/include/etl/circular_buffer.h ****     {
 715:./lib/etl/include/etl/circular_buffer.h ****       return iterator(this, out);
 716:./lib/etl/include/etl/circular_buffer.h ****     }
 717:./lib/etl/include/etl/circular_buffer.h **** 
 718:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 719:./lib/etl/include/etl/circular_buffer.h ****     /// Gets a const iterator to the start of the buffer.
 720:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 721:./lib/etl/include/etl/circular_buffer.h ****     const_iterator begin() const
 722:./lib/etl/include/etl/circular_buffer.h ****     {
 723:./lib/etl/include/etl/circular_buffer.h ****       return const_iterator(this, out);
 724:./lib/etl/include/etl/circular_buffer.h ****     }
 725:./lib/etl/include/etl/circular_buffer.h **** 
 726:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 727:./lib/etl/include/etl/circular_buffer.h ****     /// Gets a const iterator to the start of the buffer.
 728:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 729:./lib/etl/include/etl/circular_buffer.h ****     const_iterator cbegin() const
 730:./lib/etl/include/etl/circular_buffer.h ****     {
 731:./lib/etl/include/etl/circular_buffer.h ****       return const_iterator(this, out);
 732:./lib/etl/include/etl/circular_buffer.h ****     }
 733:./lib/etl/include/etl/circular_buffer.h **** 
 734:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 735:./lib/etl/include/etl/circular_buffer.h ****     /// Gets an iterator to the end of the buffer.
 736:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 737:./lib/etl/include/etl/circular_buffer.h ****     iterator end()
 738:./lib/etl/include/etl/circular_buffer.h ****     {
 739:./lib/etl/include/etl/circular_buffer.h ****       return iterator(this, in);
 740:./lib/etl/include/etl/circular_buffer.h ****     }
 741:./lib/etl/include/etl/circular_buffer.h **** 
 742:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 743:./lib/etl/include/etl/circular_buffer.h ****     /// Gets a const iterator to the end of the buffer.
 744:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 745:./lib/etl/include/etl/circular_buffer.h ****     const_iterator end() const
 746:./lib/etl/include/etl/circular_buffer.h ****     {
 747:./lib/etl/include/etl/circular_buffer.h ****       return const_iterator(this, in);
 748:./lib/etl/include/etl/circular_buffer.h ****     }
 749:./lib/etl/include/etl/circular_buffer.h **** 
 750:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 751:./lib/etl/include/etl/circular_buffer.h ****     /// Gets a const iterator to the end of the buffer.
 752:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 753:./lib/etl/include/etl/circular_buffer.h ****     const_iterator cend() const
 754:./lib/etl/include/etl/circular_buffer.h ****     {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 30


 755:./lib/etl/include/etl/circular_buffer.h ****       return const_iterator(this, in);
 756:./lib/etl/include/etl/circular_buffer.h ****     }
 757:./lib/etl/include/etl/circular_buffer.h **** 
 758:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 759:./lib/etl/include/etl/circular_buffer.h ****     /// Gets a reverse iterator to the start of the buffer.
 760:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 761:./lib/etl/include/etl/circular_buffer.h ****     reverse_iterator rbegin()
 762:./lib/etl/include/etl/circular_buffer.h ****     {
 763:./lib/etl/include/etl/circular_buffer.h ****       return reverse_iterator(end());
 764:./lib/etl/include/etl/circular_buffer.h ****     }
 765:./lib/etl/include/etl/circular_buffer.h **** 
 766:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 767:./lib/etl/include/etl/circular_buffer.h ****     /// Gets a const reverse iterator to the start of the buffer.
 768:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 769:./lib/etl/include/etl/circular_buffer.h ****     const_reverse_iterator rbegin() const
 770:./lib/etl/include/etl/circular_buffer.h ****     {
 771:./lib/etl/include/etl/circular_buffer.h ****       return const_reverse_iterator(end());
 772:./lib/etl/include/etl/circular_buffer.h ****     }
 773:./lib/etl/include/etl/circular_buffer.h **** 
 774:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 775:./lib/etl/include/etl/circular_buffer.h ****     /// Gets a const reverse iterator to the start of the buffer.
 776:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 777:./lib/etl/include/etl/circular_buffer.h ****     const_reverse_iterator crbegin() const
 778:./lib/etl/include/etl/circular_buffer.h ****     {
 779:./lib/etl/include/etl/circular_buffer.h ****       return const_reverse_iterator(end());
 780:./lib/etl/include/etl/circular_buffer.h ****     }
 781:./lib/etl/include/etl/circular_buffer.h **** 
 782:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 783:./lib/etl/include/etl/circular_buffer.h ****     /// Gets a reverse iterator to the end of the buffer.
 784:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 785:./lib/etl/include/etl/circular_buffer.h ****     reverse_iterator rend()
 786:./lib/etl/include/etl/circular_buffer.h ****     {
 787:./lib/etl/include/etl/circular_buffer.h ****       return reverse_iterator(begin());
 788:./lib/etl/include/etl/circular_buffer.h ****     }
 789:./lib/etl/include/etl/circular_buffer.h **** 
 790:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 791:./lib/etl/include/etl/circular_buffer.h ****     /// Gets a const reverse iterator to the end of the buffer.
 792:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 793:./lib/etl/include/etl/circular_buffer.h ****     const_reverse_iterator rend() const
 794:./lib/etl/include/etl/circular_buffer.h ****     {
 795:./lib/etl/include/etl/circular_buffer.h ****       return const_reverse_iterator(begin());
 796:./lib/etl/include/etl/circular_buffer.h ****     }
 797:./lib/etl/include/etl/circular_buffer.h **** 
 798:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 799:./lib/etl/include/etl/circular_buffer.h ****     /// Gets a const reverse iterator to the end of the buffer.
 800:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 801:./lib/etl/include/etl/circular_buffer.h ****     const_reverse_iterator crend() const
 802:./lib/etl/include/etl/circular_buffer.h ****     {
 803:./lib/etl/include/etl/circular_buffer.h ****       return const_reverse_iterator(begin());
 804:./lib/etl/include/etl/circular_buffer.h ****     }
 805:./lib/etl/include/etl/circular_buffer.h **** 
 806:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 807:./lib/etl/include/etl/circular_buffer.h ****     /// Get a const reference to the item at the front of the buffer.
 808:./lib/etl/include/etl/circular_buffer.h ****     /// Asserts an error if the buffer is empty.
 809:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 810:./lib/etl/include/etl/circular_buffer.h ****     reference front()
 811:./lib/etl/include/etl/circular_buffer.h ****     {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 31


 812:./lib/etl/include/etl/circular_buffer.h ****       ETL_ASSERT(!empty(), ETL_ERROR(circular_buffer_empty));
 813:./lib/etl/include/etl/circular_buffer.h **** 
 814:./lib/etl/include/etl/circular_buffer.h ****       return pbuffer[out];
 815:./lib/etl/include/etl/circular_buffer.h ****     }
 816:./lib/etl/include/etl/circular_buffer.h **** 
 817:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 818:./lib/etl/include/etl/circular_buffer.h ****     /// Get a const reference to the item at the front of the buffer.
 819:./lib/etl/include/etl/circular_buffer.h ****     /// Asserts an error if the buffer is empty.
 820:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 821:./lib/etl/include/etl/circular_buffer.h ****     const_reference front() const
 822:./lib/etl/include/etl/circular_buffer.h ****     {
 823:./lib/etl/include/etl/circular_buffer.h ****       ETL_ASSERT(!empty(), ETL_ERROR(circular_buffer_empty));
 824:./lib/etl/include/etl/circular_buffer.h **** 
 825:./lib/etl/include/etl/circular_buffer.h ****       return pbuffer[out];
 826:./lib/etl/include/etl/circular_buffer.h ****     }
 827:./lib/etl/include/etl/circular_buffer.h **** 
 828:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 829:./lib/etl/include/etl/circular_buffer.h ****     /// Get a reference to the item at the back of the buffer.
 830:./lib/etl/include/etl/circular_buffer.h ****     /// Asserts an error if the buffer is empty.
 831:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 832:./lib/etl/include/etl/circular_buffer.h ****     reference back()
 833:./lib/etl/include/etl/circular_buffer.h ****     {
 834:./lib/etl/include/etl/circular_buffer.h ****       ETL_ASSERT(!empty(), ETL_ERROR(circular_buffer_empty));
 835:./lib/etl/include/etl/circular_buffer.h **** 
 836:./lib/etl/include/etl/circular_buffer.h ****       return pbuffer[in == 0U ? buffer_size - 1 : in - 1U];
 837:./lib/etl/include/etl/circular_buffer.h ****     }
 838:./lib/etl/include/etl/circular_buffer.h **** 
 839:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 840:./lib/etl/include/etl/circular_buffer.h ****     /// Get a const reference to the item at the back of the buffer.
 841:./lib/etl/include/etl/circular_buffer.h ****     /// Asserts an error if the buffer is empty.
 842:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 843:./lib/etl/include/etl/circular_buffer.h ****     const_reference back() const
 844:./lib/etl/include/etl/circular_buffer.h ****     {
 845:./lib/etl/include/etl/circular_buffer.h ****       ETL_ASSERT(!empty(), ETL_ERROR(circular_buffer_empty));
 846:./lib/etl/include/etl/circular_buffer.h **** 
 847:./lib/etl/include/etl/circular_buffer.h ****       return pbuffer[in == 0U ? buffer_size - 1 : in - 1U];
 848:./lib/etl/include/etl/circular_buffer.h ****     }
 849:./lib/etl/include/etl/circular_buffer.h **** 
 850:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 851:./lib/etl/include/etl/circular_buffer.h ****     /// Get a reference to the item.
 852:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 853:./lib/etl/include/etl/circular_buffer.h ****     reference operator [](size_t index)
 854:./lib/etl/include/etl/circular_buffer.h ****     {
 855:./lib/etl/include/etl/circular_buffer.h ****       return pbuffer[(out + index) % buffer_size];
 856:./lib/etl/include/etl/circular_buffer.h ****     }
 857:./lib/etl/include/etl/circular_buffer.h **** 
 858:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 859:./lib/etl/include/etl/circular_buffer.h ****     /// Get a const reference to the item at the back of the buffer.
 860:./lib/etl/include/etl/circular_buffer.h ****     /// Asserts an error if the buffer is empty.
 861:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 862:./lib/etl/include/etl/circular_buffer.h ****     const_reference operator [](size_t index) const
 863:./lib/etl/include/etl/circular_buffer.h ****     {
 864:./lib/etl/include/etl/circular_buffer.h ****       return pbuffer[(out + index) % buffer_size];
 865:./lib/etl/include/etl/circular_buffer.h ****     }
 866:./lib/etl/include/etl/circular_buffer.h **** 
 867:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 868:./lib/etl/include/etl/circular_buffer.h ****     /// push.
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 32


 869:./lib/etl/include/etl/circular_buffer.h ****     /// Adds an item to the buffer.
 870:./lib/etl/include/etl/circular_buffer.h ****     /// If the buffer is filled then the oldest item is overwritten.
 871:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 872:./lib/etl/include/etl/circular_buffer.h ****     void push(const_reference item)
 873:./lib/etl/include/etl/circular_buffer.h ****     {
 874:./lib/etl/include/etl/circular_buffer.h ****       ::new (&pbuffer[in]) T(item);
 875:./lib/etl/include/etl/circular_buffer.h ****       increment_in();
 876:./lib/etl/include/etl/circular_buffer.h **** 
 877:./lib/etl/include/etl/circular_buffer.h ****       // Did we catch up with the 'out' index?
 878:./lib/etl/include/etl/circular_buffer.h ****       if (in == out)
 879:./lib/etl/include/etl/circular_buffer.h ****       {
 880:./lib/etl/include/etl/circular_buffer.h ****         // Forget about the oldest one.
 881:./lib/etl/include/etl/circular_buffer.h ****         pbuffer[out].~T();
 882:./lib/etl/include/etl/circular_buffer.h ****         this->increment_out();
 883:./lib/etl/include/etl/circular_buffer.h ****       }
 884:./lib/etl/include/etl/circular_buffer.h ****       else
 885:./lib/etl/include/etl/circular_buffer.h ****       {
 886:./lib/etl/include/etl/circular_buffer.h ****         ETL_INCREMENT_DEBUG_COUNT;
 887:./lib/etl/include/etl/circular_buffer.h ****       }
 888:./lib/etl/include/etl/circular_buffer.h ****     }
 889:./lib/etl/include/etl/circular_buffer.h **** 
 890:./lib/etl/include/etl/circular_buffer.h **** #if ETL_USING_CPP11
 891:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 892:./lib/etl/include/etl/circular_buffer.h ****     /// push.
 893:./lib/etl/include/etl/circular_buffer.h ****     /// Adds an item to the buffer.
 894:./lib/etl/include/etl/circular_buffer.h ****     /// If the buffer is filled then the oldest item is overwritten.
 895:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 896:./lib/etl/include/etl/circular_buffer.h ****     void push(rvalue_reference item)
 897:./lib/etl/include/etl/circular_buffer.h ****     {
 898:./lib/etl/include/etl/circular_buffer.h ****       ::new (&pbuffer[in]) T(etl::move(item));
 899:./lib/etl/include/etl/circular_buffer.h ****       increment_in();
 900:./lib/etl/include/etl/circular_buffer.h **** 
 901:./lib/etl/include/etl/circular_buffer.h ****       // Did we catch up with the 'out' index?
 902:./lib/etl/include/etl/circular_buffer.h ****       if (in == out)
 903:./lib/etl/include/etl/circular_buffer.h ****       {
 904:./lib/etl/include/etl/circular_buffer.h ****         // Forget about the oldest item.
 905:./lib/etl/include/etl/circular_buffer.h ****         pbuffer[out].~T();
 906:./lib/etl/include/etl/circular_buffer.h ****         increment_out();
 907:./lib/etl/include/etl/circular_buffer.h ****       }
 908:./lib/etl/include/etl/circular_buffer.h ****       else
 909:./lib/etl/include/etl/circular_buffer.h ****       {
 910:./lib/etl/include/etl/circular_buffer.h ****         ETL_INCREMENT_DEBUG_COUNT;
 911:./lib/etl/include/etl/circular_buffer.h ****       }
 912:./lib/etl/include/etl/circular_buffer.h ****     }
 913:./lib/etl/include/etl/circular_buffer.h **** #endif
 914:./lib/etl/include/etl/circular_buffer.h **** 
 915:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 916:./lib/etl/include/etl/circular_buffer.h ****     /// Push a buffer from an iterator range.
 917:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 918:./lib/etl/include/etl/circular_buffer.h ****     template <typename TIterator>
 919:./lib/etl/include/etl/circular_buffer.h ****     void push(TIterator first, const TIterator& last)
 920:./lib/etl/include/etl/circular_buffer.h ****     {
 921:./lib/etl/include/etl/circular_buffer.h ****       while (first != last)
 922:./lib/etl/include/etl/circular_buffer.h ****       {
 923:./lib/etl/include/etl/circular_buffer.h ****         push(*first);
 924:./lib/etl/include/etl/circular_buffer.h ****         ++first;
 925:./lib/etl/include/etl/circular_buffer.h ****       }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 33


 926:./lib/etl/include/etl/circular_buffer.h ****     }
 927:./lib/etl/include/etl/circular_buffer.h **** 
 928:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 929:./lib/etl/include/etl/circular_buffer.h ****     /// pop
 930:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 931:./lib/etl/include/etl/circular_buffer.h ****     void pop()
 932:./lib/etl/include/etl/circular_buffer.h ****     {
 933:./lib/etl/include/etl/circular_buffer.h ****       ETL_ASSERT(!empty(), ETL_ERROR(circular_buffer_empty));
 934:./lib/etl/include/etl/circular_buffer.h ****       pbuffer[out].~T();
 935:./lib/etl/include/etl/circular_buffer.h ****       increment_out();
 936:./lib/etl/include/etl/circular_buffer.h ****       ETL_DECREMENT_DEBUG_COUNT;
 937:./lib/etl/include/etl/circular_buffer.h ****     }
 938:./lib/etl/include/etl/circular_buffer.h **** 
 939:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 940:./lib/etl/include/etl/circular_buffer.h ****     /// pop(n)
 941:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 942:./lib/etl/include/etl/circular_buffer.h ****     void pop(size_type n)
 943:./lib/etl/include/etl/circular_buffer.h ****     {
 944:./lib/etl/include/etl/circular_buffer.h ****       while (n-- != 0U)
 945:./lib/etl/include/etl/circular_buffer.h ****       {
 946:./lib/etl/include/etl/circular_buffer.h ****         pop();
 947:./lib/etl/include/etl/circular_buffer.h ****       }
 948:./lib/etl/include/etl/circular_buffer.h ****     }
 949:./lib/etl/include/etl/circular_buffer.h **** 
 950:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 951:./lib/etl/include/etl/circular_buffer.h ****     /// Clears the buffer.
 952:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 953:./lib/etl/include/etl/circular_buffer.h ****     void clear()
 954:./lib/etl/include/etl/circular_buffer.h ****     {
 955:./lib/etl/include/etl/circular_buffer.h ****       if ETL_IF_CONSTEXPR(etl::is_trivially_destructible<T>::value)
 956:./lib/etl/include/etl/circular_buffer.h ****       {
 957:./lib/etl/include/etl/circular_buffer.h ****         in    = 0U;
 958:./lib/etl/include/etl/circular_buffer.h ****         out   = 0U;
 959:./lib/etl/include/etl/circular_buffer.h ****         ETL_RESET_DEBUG_COUNT;
 960:./lib/etl/include/etl/circular_buffer.h ****       }
 961:./lib/etl/include/etl/circular_buffer.h ****       else
 962:./lib/etl/include/etl/circular_buffer.h ****       {
 963:./lib/etl/include/etl/circular_buffer.h ****         while (!empty())
 964:./lib/etl/include/etl/circular_buffer.h ****         {
 965:./lib/etl/include/etl/circular_buffer.h ****           pop();
 966:./lib/etl/include/etl/circular_buffer.h ****         }
 967:./lib/etl/include/etl/circular_buffer.h ****       }
 968:./lib/etl/include/etl/circular_buffer.h ****     }
 969:./lib/etl/include/etl/circular_buffer.h **** 
 970:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 971:./lib/etl/include/etl/circular_buffer.h ****     /// Fills the buffer.
 972:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 973:./lib/etl/include/etl/circular_buffer.h ****     void fill(const T& value)
 974:./lib/etl/include/etl/circular_buffer.h ****     {
 975:./lib/etl/include/etl/circular_buffer.h ****       etl::fill(begin(), end(), value);
 976:./lib/etl/include/etl/circular_buffer.h ****     }
 977:./lib/etl/include/etl/circular_buffer.h **** 
 978:./lib/etl/include/etl/circular_buffer.h **** #ifdef ETL_ICIRCULAR_BUFFER_REPAIR_ENABLE
 979:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 980:./lib/etl/include/etl/circular_buffer.h ****     /// Fix the internal pointers after a low level memory copy.
 981:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 982:./lib/etl/include/etl/circular_buffer.h ****     virtual void repair() = 0;
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 34


 983:./lib/etl/include/etl/circular_buffer.h **** #endif
 984:./lib/etl/include/etl/circular_buffer.h **** 
 985:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 986:./lib/etl/include/etl/circular_buffer.h ****     /// - operator for iterator
 987:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 988:./lib/etl/include/etl/circular_buffer.h ****     friend difference_type operator -(const iterator& lhs, const iterator& rhs)
 989:./lib/etl/include/etl/circular_buffer.h ****     {
 990:./lib/etl/include/etl/circular_buffer.h ****       return distance(rhs, lhs);
 991:./lib/etl/include/etl/circular_buffer.h ****     }
 992:./lib/etl/include/etl/circular_buffer.h **** 
 993:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 994:./lib/etl/include/etl/circular_buffer.h ****     /// - operator for const_iterator
 995:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 996:./lib/etl/include/etl/circular_buffer.h ****     friend difference_type operator -(const const_iterator& lhs, const const_iterator& rhs)
 997:./lib/etl/include/etl/circular_buffer.h ****     {
 998:./lib/etl/include/etl/circular_buffer.h ****       return distance(rhs, lhs);
 999:./lib/etl/include/etl/circular_buffer.h ****     }
1000:./lib/etl/include/etl/circular_buffer.h **** 
1001:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1002:./lib/etl/include/etl/circular_buffer.h ****     /// - operator for reverse_iterator
1003:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1004:./lib/etl/include/etl/circular_buffer.h ****     friend difference_type operator -(const reverse_iterator& lhs, const reverse_iterator& rhs)
1005:./lib/etl/include/etl/circular_buffer.h ****     {
1006:./lib/etl/include/etl/circular_buffer.h ****       return distance(lhs.base(), rhs.base());
1007:./lib/etl/include/etl/circular_buffer.h ****     }
1008:./lib/etl/include/etl/circular_buffer.h **** 
1009:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1010:./lib/etl/include/etl/circular_buffer.h ****     /// - operator for const_reverse_iterator
1011:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1012:./lib/etl/include/etl/circular_buffer.h ****     friend difference_type operator -(const const_reverse_iterator& lhs, const const_reverse_iterat
1013:./lib/etl/include/etl/circular_buffer.h ****     {
1014:./lib/etl/include/etl/circular_buffer.h ****       return distance(lhs.base(), rhs.base());
1015:./lib/etl/include/etl/circular_buffer.h ****     }
1016:./lib/etl/include/etl/circular_buffer.h **** 
1017:./lib/etl/include/etl/circular_buffer.h ****   protected:
1018:./lib/etl/include/etl/circular_buffer.h **** 
1019:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1020:./lib/etl/include/etl/circular_buffer.h ****     /// Protected constructor.
1021:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1022:./lib/etl/include/etl/circular_buffer.h ****     icircular_buffer(pointer pbuffer_, size_type max_length)
1023:./lib/etl/include/etl/circular_buffer.h ****       : circular_buffer_base(max_length + 1U)
1024:./lib/etl/include/etl/circular_buffer.h ****       , pbuffer(pbuffer_)
1025:./lib/etl/include/etl/circular_buffer.h ****     {
1026:./lib/etl/include/etl/circular_buffer.h ****     }
1027:./lib/etl/include/etl/circular_buffer.h **** 
1028:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1029:./lib/etl/include/etl/circular_buffer.h ****     /// Measures the distance between two iterators.
1030:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1031:./lib/etl/include/etl/circular_buffer.h ****     template <typename TIterator1, typename TIterator2>
1032:./lib/etl/include/etl/circular_buffer.h ****     static difference_type distance(const TIterator1& range_begin, const TIterator2& range_end)
1033:./lib/etl/include/etl/circular_buffer.h ****     {
1034:./lib/etl/include/etl/circular_buffer.h ****       difference_type distance1 = distance(range_begin);
1035:./lib/etl/include/etl/circular_buffer.h ****       difference_type distance2 = distance(range_end);
1036:./lib/etl/include/etl/circular_buffer.h **** 
1037:./lib/etl/include/etl/circular_buffer.h ****       return distance2 - distance1;
1038:./lib/etl/include/etl/circular_buffer.h ****     }
1039:./lib/etl/include/etl/circular_buffer.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 35


1040:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1041:./lib/etl/include/etl/circular_buffer.h ****     /// Measures the distance from the _begin iterator to the specified iterator.
1042:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1043:./lib/etl/include/etl/circular_buffer.h ****     template <typename TIterator>
1044:./lib/etl/include/etl/circular_buffer.h ****     static difference_type distance(const TIterator& other)
1045:./lib/etl/include/etl/circular_buffer.h ****     {
1046:./lib/etl/include/etl/circular_buffer.h ****       const difference_type index = other.get_index();
1047:./lib/etl/include/etl/circular_buffer.h ****       const difference_type reference_index = other.container().out;
1048:./lib/etl/include/etl/circular_buffer.h ****       const size_t buffer_size = other.container().buffer_size;
1049:./lib/etl/include/etl/circular_buffer.h **** 
1050:./lib/etl/include/etl/circular_buffer.h ****       if (index < reference_index)
1051:./lib/etl/include/etl/circular_buffer.h ****       {
1052:./lib/etl/include/etl/circular_buffer.h ****         return buffer_size + index - reference_index;
1053:./lib/etl/include/etl/circular_buffer.h ****       }
1054:./lib/etl/include/etl/circular_buffer.h ****       else
1055:./lib/etl/include/etl/circular_buffer.h ****       {
1056:./lib/etl/include/etl/circular_buffer.h ****         return index - reference_index;
1057:./lib/etl/include/etl/circular_buffer.h ****       }
1058:./lib/etl/include/etl/circular_buffer.h ****     }
1059:./lib/etl/include/etl/circular_buffer.h **** 
1060:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1061:./lib/etl/include/etl/circular_buffer.h ****     /// Fix the internal pointers after a low level memory copy.
1062:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1063:./lib/etl/include/etl/circular_buffer.h ****     void repair_buffer(T* pbuffer_)
1064:./lib/etl/include/etl/circular_buffer.h ****     {
1065:./lib/etl/include/etl/circular_buffer.h ****       pbuffer = pbuffer_;
1066:./lib/etl/include/etl/circular_buffer.h ****     }
1067:./lib/etl/include/etl/circular_buffer.h **** 
1068:./lib/etl/include/etl/circular_buffer.h ****     pointer pbuffer;
1069:./lib/etl/include/etl/circular_buffer.h **** 
1070:./lib/etl/include/etl/circular_buffer.h ****   private:
1071:./lib/etl/include/etl/circular_buffer.h **** 
1072:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1073:./lib/etl/include/etl/circular_buffer.h ****     /// Destructor.
1074:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1075:./lib/etl/include/etl/circular_buffer.h **** #if defined(ETL_POLYMORPHIC_CIRCULAR_BUFFER) || defined(ETL_POLYMORPHIC_CONTAINERS)
1076:./lib/etl/include/etl/circular_buffer.h ****   public:
1077:./lib/etl/include/etl/circular_buffer.h ****     virtual ~icircular_buffer()
1078:./lib/etl/include/etl/circular_buffer.h ****     {
1079:./lib/etl/include/etl/circular_buffer.h ****     }
1080:./lib/etl/include/etl/circular_buffer.h **** #else
1081:./lib/etl/include/etl/circular_buffer.h ****   protected:
1082:./lib/etl/include/etl/circular_buffer.h ****     ~icircular_buffer()
1083:./lib/etl/include/etl/circular_buffer.h ****     {
1084:./lib/etl/include/etl/circular_buffer.h ****     }
1085:./lib/etl/include/etl/circular_buffer.h **** #endif
1086:./lib/etl/include/etl/circular_buffer.h ****   };
1087:./lib/etl/include/etl/circular_buffer.h **** 
1088:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
1089:./lib/etl/include/etl/circular_buffer.h ****   /// A fixed capacity circular buffer.
1090:./lib/etl/include/etl/circular_buffer.h ****   /// Internal buffer.
1091:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
1092:./lib/etl/include/etl/circular_buffer.h ****   template <typename T, size_t MAX_SIZE_>
1093:./lib/etl/include/etl/circular_buffer.h ****   class circular_buffer : public icircular_buffer<T>
1094:./lib/etl/include/etl/circular_buffer.h ****   {
1095:./lib/etl/include/etl/circular_buffer.h ****   public:
1096:./lib/etl/include/etl/circular_buffer.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 36


1097:./lib/etl/include/etl/circular_buffer.h ****     ETL_STATIC_ASSERT((MAX_SIZE_ > 0U), "Zero capacity etl::circular_buffer is not valid");
1098:./lib/etl/include/etl/circular_buffer.h **** 
1099:./lib/etl/include/etl/circular_buffer.h ****     static ETL_CONSTANT typename icircular_buffer<T>::size_type MAX_SIZE = typename icircular_buffe
1100:./lib/etl/include/etl/circular_buffer.h **** 
1101:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1102:./lib/etl/include/etl/circular_buffer.h ****     /// Constructor.
1103:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1104:./lib/etl/include/etl/circular_buffer.h ****     circular_buffer()
 347              		.loc 3 1104 5 is_stmt 1 view .LVU95
 348              	.LBB233:
 349              	.LBB234:
 350              	.LBI234:
1022:./lib/etl/include/etl/circular_buffer.h ****       : circular_buffer_base(max_length + 1U)
 351              		.loc 3 1022 5 view .LVU96
 352              	.LBB235:
 353              	.LBB236:
 354              	.LBI236:
 143:./lib/etl/include/etl/circular_buffer.h ****       : buffer_size(buffer_size_)
 355              		.loc 3 143 5 view .LVU97
 356              	.LBB237:
 146:./lib/etl/include/etl/circular_buffer.h ****     {
 357              		.loc 3 146 15 is_stmt 0 view .LVU98
 358 0004 0023     		movs	r3, #0
 359              	.LBE237:
 360              	.LBE236:
 361              	.LBE235:
 362              	.LBE234:
 363              	.LBE233:
 364              	.LBE232:
 365              	.LBB252:
 366              	.LBB253:
 367              	.LBB254:
 368              	.LBB255:
 369              	.LBB256:
 370              		.file 4 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_vector.
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Vector implementation -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 37


  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1996
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this  software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /** @file bits/stl_vector.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifndef _STL_VECTOR_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _STL_VECTOR_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/functexcept.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/concept_check.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <initializer_list>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201703L
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # include <compare>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <debug/assertions.h>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** extern "C" void
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  const void*, const void*);
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 38


  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc>
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     struct _Vector_base
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        	pointer;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl_data
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_start;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_finish;
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_end_of_storage;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 371              		.loc 4 98 47 view .LVU99
 372 0006 00F58050 		add	r0, r0, #4096
 373              	.LVL24:
 374              		.loc 4 98 47 view .LVU100
 375              	.LBE256:
 376              	.LBE255:
 377              	.LBE254:
 378              	.LBE253:
 379              	.LBE252:
   4:src/TTrack.cpp **** {
 380              		.loc 1 4 49 view .LVU101
 381 000a 0122     		movs	r2, #1
 382              	.LBB266:
 383              	.LBB250:
 384              	.LBB247:
 385              	.LBB244:
 386              	.LBB241:
 387              	.LBB238:
 146:./lib/etl/include/etl/circular_buffer.h ****     {
 388              		.loc 3 146 15 view .LVU102
 389 000c 40F20125 		movw	r5, #513
 390              	.LBE238:
 391              	.LBE241:
 392              	.LBE244:
 393              	.LBE247:
1105:./lib/etl/include/etl/circular_buffer.h ****       : icircular_buffer<T>(reinterpret_cast<T*>(buffer.raw), MAX_SIZE)
 394              		.loc 3 1105 57 view .LVU103
 395 0010 04F11406 		add	r6, r4, #20
 396              	.LVL25:
 397              	.LBB248:
 398              	.LBB245:
 399              	.LBB242:
 400              	.LBB239:
 146:./lib/etl/include/etl/circular_buffer.h ****     {
 401              		.loc 3 146 15 view .LVU104
 402 0014 A360     		str	r3, [r4, #8]
 403              	.LVL26:
 146:./lib/etl/include/etl/circular_buffer.h ****     {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 39


 404              		.loc 3 146 15 view .LVU105
 405              	.LBE239:
 406              	.LBE242:
 407              	.LBE245:
 408              	.LBE248:
 409              	.LBE250:
 410              	.LBE266:
 411              	.LBB267:
 412              	.LBI252:
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_start = __x._M_start;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // information used by TBAA.
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Vector_impl_data __tmp;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __tmp._M_copy_data(*this);
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_copy_data(__x);
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __x._M_copy_data(__tmp);
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type()
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 40


 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename = _Tp_alloc_type>
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type) { }
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename _Up>
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      if (__impl._M_start)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 41


 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Reinit
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_on_dealloc(_M_impl);
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Reinit()
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		if (_M_impl._M_start)
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    _M_impl._M_finish);
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    private:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      size_type _M_n;
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 42


 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc allocator_type;
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp_alloc_type&
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp_alloc_type&
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       allocator_type
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() = default;
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() { }
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n)
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl()
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(std::move(__a)) { }
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 43


 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__x.get_allocator() == __a)
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _M_create_storage(__n);
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_impl _M_impl;
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pointer
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_allocate(size_t __n)
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__p)
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_create_storage(size_t __n)
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     };
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /**
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  individual elements in any order.
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @ingroup sequences
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Tp  Type of element.
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 44


 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  elements in any order and saves the user from worrying about
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  also provided as with C-style arrays.
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   */
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Concept requirements.
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus < 201103L
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus > 201703L || defined __STRICT_ANSI__
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Tp					value_type;
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::pointer			pointer;
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator;
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef size_t					size_type;
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef ptrdiff_t					difference_type;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc					allocator_type;
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(true_type)
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 45


 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(false_type)
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return false; }
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_use_relocate()
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return __result; }
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // C++11
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_allocate;
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_deallocate;
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_impl;
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() = default;
 413              		.loc 4 487 7 is_stmt 1 view .LVU106
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 46


 414              	.LBB264:
 415              	.LBI253:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 416              		.loc 4 288 7 view .LVU107
 417              	.LBB262:
 418              	.LBI254:
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 419              		.loc 4 131 2 view .LVU108
 420              	.LBB258:
 421              	.LBI258:
 422              		.file 5 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\allocator.h
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Allocators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Copyright (c) 1996-1997
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * that both that copyright notice and this permission notice appear
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * representations about the suitability of this software for any
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /** @file bits/allocator.h
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  This is an internal header file, included by other library headers.
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #ifndef _ALLOCATOR_H
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define _ALLOCATOR_H 1
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 47


  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/memoryfwd.h>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <type_traits>
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** {
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @addtogroup allocators
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @{
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /// allocator<void> specialization.
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator<void>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void        value_type;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t      size_type;
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t   difference_type;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void*       pointer;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const void* const_pointer;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #else
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() = default;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	constexpr
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Up>&) { }
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // ! C++20
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L && __cplusplus <= 201703L
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up, typename... _Args>
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	destroy(_Up* __p)
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ __p->~_Up(); }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 48


 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // C++11 to C++17
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     };
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  for further details.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<typename _Tp>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator : public __allocator_base<_Tp>
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp        value_type;
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t     size_type;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t  difference_type;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp*       pointer;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp* const_pointer;
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp&       reference;
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp& const_reference;
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 423              		.loc 5 144 7 view .LVU109
 424              	.LBB259:
 425              	.LBI259:
 426              		.file 6 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\new_allocato
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 49


  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  */
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/c++config.h>
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <new>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/move.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <type_traits>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** {
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   /**
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @ingroup allocators
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all allocation calls operator new
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    */
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   template<typename _Tp>
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     class new_allocator
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     {
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     public:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp        value_type;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::size_t     size_type;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp*       pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp&       reference;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	struct rebind
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 50


  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 427              		.loc 6 79 7 view .LVU110
 428              		.loc 6 79 7 is_stmt 0 view .LVU111
 429              	.LBE259:
 430              	.LBE258:
 431              	.LBB260:
 432              	.LBI255:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 433              		.loc 4 97 2 is_stmt 1 view .LVU112
 434              	.LBE260:
 435              	.LBE262:
 436              	.LBE264:
 437              	.LBE267:
   4:src/TTrack.cpp **** {
 438              		.loc 1 4 49 is_stmt 0 view .LVU113
 439 0016 1146     		mov	r1, r2
 440              	.LBB268:
 441              	.LBB251:
 442              	.LBB249:
 443              	.LBB246:
1024:./lib/etl/include/etl/circular_buffer.h ****     {
 444              		.loc 3 1024 25 view .LVU114
 445 0018 2661     		str	r6, [r4, #16]
 446              	.LBB243:
 447              	.LBB240:
 146:./lib/etl/include/etl/circular_buffer.h ****     {
 448              		.loc 3 146 15 view .LVU115
 449 001a C4E90053 		strd	r5, r3, [r4]
 450              	.LBE240:
 451              	.LBE243:
 452              	.LBE246:
 453              	.LBE249:
 454              	.LBE251:
 455              	.LBE268:
 456              	.LBB269:
 457              	.LBB265:
 458              	.LBB263:
 459              	.LBB261:
 460              	.LBB257:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 461              		.loc 4 98 47 view .LVU116
 462 001e C0E90633 		strd	r3, r3, [r0, #24]
 463 0022 0362     		str	r3, [r0, #32]
 464              	.LVL27:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 465              		.loc 4 98 47 view .LVU117
 466              	.LBE257:
 467              	.LBE261:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 51


 468              	.LBE263:
 469              	.LBE265:
 470              	.LBE269:
 471              	.LBB270:
 472              	.LBI270:
 473              		.loc 4 487 7 is_stmt 1 view .LVU118
 474              	.LBB271:
 475              	.LBI271:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 476              		.loc 4 288 7 view .LVU119
 477              	.LBB272:
 478              	.LBI272:
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 479              		.loc 4 131 2 view .LVU120
 480              	.LBB273:
 481              	.LBI273:
 482              		.loc 5 144 7 view .LVU121
 483              	.LBB274:
 484              	.LBI274:
 485              		.loc 6 79 7 view .LVU122
 486              		.loc 6 79 7 is_stmt 0 view .LVU123
 487              	.LBE274:
 488              	.LBE273:
 489              	.LBB275:
 490              	.LBI275:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 491              		.loc 4 97 2 is_stmt 1 view .LVU124
 492              	.LBB276:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 493              		.loc 4 98 47 is_stmt 0 view .LVU125
 494 0024 C0F81034 		str	r3, [r0, #1040]
 495 0028 C0F81434 		str	r3, [r0, #1044]
 496 002c C0F81834 		str	r3, [r0, #1048]
 497              	.LVL28:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 498              		.loc 4 98 47 view .LVU126
 499              	.LBE276:
 500              	.LBE275:
 501              	.LBE272:
 502              	.LBE271:
 503              	.LBE270:
   4:src/TTrack.cpp **** {
 504              		.loc 1 4 49 view .LVU127
 505 0030 04F5A150 		add	r0, r4, #5152
 506 0034 FFF7FEFF 		bl	_ZN7OnsetDFC1Eii
 507              	.LVL29:
   6:src/TTrack.cpp **** }
 508              		.loc 1 6 5 is_stmt 1 view .LVU128
   6:src/TTrack.cpp **** }
 509              		.loc 1 6 15 is_stmt 0 view .LVU129
 510 0038 2046     		mov	r0, r4
 511 003a FFF7FEFF 		bl	_ZN6TTrack10initialiseEv
 512              	.LVL30:
 513              	.LBE231:
   7:src/TTrack.cpp **** //================================================
 514              		.loc 1 7 1 view .LVU130
 515 003e 2046     		mov	r0, r4
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 52


 516 0040 70BD     		pop	{r4, r5, r6, pc}
   7:src/TTrack.cpp **** //================================================
 517              		.loc 1 7 1 view .LVU131
 518              		.cfi_endproc
 519              	.LFE4736:
 521              		.global	_ZN6TTrackC1Ev
 522              		.thumb_set _ZN6TTrackC1Ev,_ZN6TTrackC2Ev
 523 0042 00BF     		.section	.text._ZN6TTrack8getTempoEv,"ax",%progbits
 524              		.align	1
 525              		.p2align 2,,3
 526              		.global	_ZN6TTrack8getTempoEv
 527              		.syntax unified
 528              		.thumb
 529              		.thumb_func
 530              		.fpu fpv5-d16
 532              	_ZN6TTrack8getTempoEv:
 533              	.LVL31:
 534              	.LFB4742:
  49:src/TTrack.cpp **** //================================================
  50:src/TTrack.cpp **** void TTrack::processAudioFrame(float* buffer)
  51:src/TTrack.cpp **** {
  52:src/TTrack.cpp ****     float sample = odf.calculateODFSample(buffer);
  53:src/TTrack.cpp ****     processODFSample(sample);
  54:src/TTrack.cpp **** }
  55:src/TTrack.cpp **** //================================================
  56:src/TTrack.cpp **** void TTrack::processODFSample(float sample)
  57:src/TTrack.cpp **** {
  58:src/TTrack.cpp ****     onsetDF.push(sample);
  59:src/TTrack.cpp **** 
  60:src/TTrack.cpp ****     if (framesUntilTempoDisplay == 0)
  61:src/TTrack.cpp ****     {
  62:src/TTrack.cpp ****         calculateTempo();
  63:src/TTrack.cpp ****         framesUntilTempoDisplay = 1024;
  64:src/TTrack.cpp ****     }
  65:src/TTrack.cpp ****     else
  66:src/TTrack.cpp ****     {
  67:src/TTrack.cpp ****         framesUntilTempoDisplay--;
  68:src/TTrack.cpp ****     }
  69:src/TTrack.cpp **** }
  70:src/TTrack.cpp **** //================================================
  71:src/TTrack.cpp **** void TTrack::calculateTempo()
  72:src/TTrack.cpp **** {
  73:src/TTrack.cpp ****     float tempoToLagFactor = 60.0f * 44100.0f / 512.0f;
  74:src/TTrack.cpp ****     for (int i = 0; i < 512; i++)
  75:src/TTrack.cpp ****     {
  76:src/TTrack.cpp ****         onsetDFResampled[i] = onsetDF[i];
  77:src/TTrack.cpp ****     }
  78:src/TTrack.cpp ****     
  79:src/TTrack.cpp ****     adaptiveThreshold(onsetDFResampled);
  80:src/TTrack.cpp ****     calculateBalancedACF(onsetDFResampled);
  81:src/TTrack.cpp ****     calculateCombFilterBankOutput();
  82:src/TTrack.cpp ****     adaptiveThreshold(combFilterBankOutput);
  83:src/TTrack.cpp **** 
  84:src/TTrack.cpp ****     for (int i = 0; i < 41; i++)
  85:src/TTrack.cpp ****     {
  86:src/TTrack.cpp ****         int tempoIndex1 = (int) round (tempoToLagFactor / ((float) ((2*i) + 80)));
  87:src/TTrack.cpp ****         int tempoIndex2 = (int) round (tempoToLagFactor / ((float) ((4*i) + 160)));
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 53


  88:src/TTrack.cpp ****         tempoObservationVector[i] = combFilterBankOutput[tempoIndex1 - 1] + combFilterBankOutput[te
  89:src/TTrack.cpp ****     }
  90:src/TTrack.cpp **** 
  91:src/TTrack.cpp ****     for (int j = 0; j < 41; j++)
  92:src/TTrack.cpp ****     {
  93:src/TTrack.cpp ****         float maxValue = -1.0f;
  94:src/TTrack.cpp **** 
  95:src/TTrack.cpp ****         for (int i = 0; i < 41; i++)
  96:src/TTrack.cpp ****         {
  97:src/TTrack.cpp ****             float currentValue = prevDelta[i] * tempoTransitionMatrix[i][j];
  98:src/TTrack.cpp ****             if (currentValue > maxValue)
  99:src/TTrack.cpp ****             {
 100:src/TTrack.cpp ****                 maxValue = currentValue;
 101:src/TTrack.cpp ****             }
 102:src/TTrack.cpp ****         }
 103:src/TTrack.cpp ****         delta[j] = tempoObservationVector[j] * maxValue;
 104:src/TTrack.cpp ****     }
 105:src/TTrack.cpp **** 
 106:src/TTrack.cpp ****     normaliseVector(delta);
 107:src/TTrack.cpp **** 
 108:src/TTrack.cpp ****     float maxIndex = -1;
 109:src/TTrack.cpp ****     float maxValue = -1;
 110:src/TTrack.cpp **** 
 111:src/TTrack.cpp ****     for (int j = 0; j < 41; j++)
 112:src/TTrack.cpp ****     {
 113:src/TTrack.cpp ****         if (delta[j] > maxValue)
 114:src/TTrack.cpp ****         {
 115:src/TTrack.cpp ****             maxValue = delta[j];
 116:src/TTrack.cpp ****             maxIndex = j;
 117:src/TTrack.cpp ****         }
 118:src/TTrack.cpp **** 
 119:src/TTrack.cpp ****         prevDelta[j] = delta[j];
 120:src/TTrack.cpp ****     }
 121:src/TTrack.cpp **** 
 122:src/TTrack.cpp ****     beatPeriod = ((60.0f * 44100.0f) / (((2*maxIndex) + 80)) * (float) hopSize);
 123:src/TTrack.cpp **** 
 124:src/TTrack.cpp ****     if (beatPeriod > 0) 
 125:src/TTrack.cpp ****     estimatedTempo = 60.0 / ((((float) hopSize) / 44100.0f) * beatPeriod);
 126:src/TTrack.cpp **** }
 127:src/TTrack.cpp **** //================================================
 128:src/TTrack.cpp **** float TTrack::getTempo()
 129:src/TTrack.cpp **** {
 535              		.loc 1 129 1 is_stmt 1 view -0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 0, uses_anonymous_args = 0
 539              		@ link register save eliminated.
 130:src/TTrack.cpp ****     return estimatedTempo;
 540              		.loc 1 130 5 view .LVU133
 541              		.loc 1 130 12 is_stmt 0 view .LVU134
 542 0000 44F69463 		movw	r3, #20116
 543 0004 0344     		add	r3, r3, r0
 131:src/TTrack.cpp **** }
 544              		.loc 1 131 1 view .LVU135
 545 0006 93ED000A 		vldr.32	s0, [r3]
 546 000a 7047     		bx	lr
 547              		.cfi_endproc
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 54


 548              	.LFE4742:
 550              		.section	.text._ZN6TTrack17adaptiveThresholdERSt6vectorIfSaIfEE,"ax",%progbits
 551              		.align	1
 552              		.p2align 2,,3
 553              		.global	_ZN6TTrack17adaptiveThresholdERSt6vectorIfSaIfEE
 554              		.syntax unified
 555              		.thumb
 556              		.thumb_func
 557              		.fpu fpv5-d16
 559              	_ZN6TTrack17adaptiveThresholdERSt6vectorIfSaIfEE:
 560              	.LVL32:
 561              	.LFB4743:
 132:src/TTrack.cpp **** //================================================
 133:src/TTrack.cpp **** void TTrack::adaptiveThreshold(std::vector<float> &buffer)
 134:src/TTrack.cpp **** {
 562              		.loc 1 134 1 is_stmt 1 view -0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 1, uses_anonymous_args = 0
 135:src/TTrack.cpp ****     int N = static_cast<int> (buffer.size());
 566              		.loc 1 135 5 view .LVU137
 567              	.LBB308:
 568              	.LBI308:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() { }
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator object.
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructed elements.
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_default_initialize(__n); }
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 55


 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value,
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector copy constructor.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x  will not be copied
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x)
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move constructor.
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  moved instance.
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector.
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&&) noexcept = default;
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Copy constructor with alternative allocator
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(), __a)
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 56


 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m, std::move(__rv))
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m)
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__rv.get_allocator() == __m)
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (!__rv.empty())
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish =
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  this->_M_impl._M_start,
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __rv.clear();
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Move constructor with alternative allocator
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       noexcept( noexcept(
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a __l.
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This will call the element type's copy constructor N times
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(initializer_list<value_type> __l,
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a)
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from a range.
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 57


 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  An input iterator.
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [first,last).
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  random-access, then this will call the elements' copy
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor, and logN memory reallocations.
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  responsibility.
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector assignment operator.
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x will not be copied.
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 58


 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(const vector& __x);
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move assignment operator.
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  if the allocators permit it).
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	constexpr bool __move_storage =
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector list assignment operator.
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(initializer_list<value_type> __l)
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __val  Value to be assigned.
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  value.  Note that the assignment completely changes the
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the number of elements assigned.
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(size_type __n, const value_type& __val)
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 59


 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_assign(__n, __val); }
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  range [__first,__last).
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(initializer_list<value_type> __l)
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Get a copy of the memory allocation object.
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::get_allocator;
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // iterators
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points to the first
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 60


 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(end()); }
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  in reverse element order.
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 61


 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(begin()); }
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cbegin() const noexcept
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cend() const noexcept
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crbegin() const noexcept
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crend() const noexcept
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.2] capacity
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 569              		.loc 4 918 7 view .LVU138
 570              	.LBE308:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 62


 134:src/TTrack.cpp ****     int N = static_cast<int> (buffer.size());
 571              		.loc 1 134 1 is_stmt 0 view .LVU139
 572 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 573              		.cfi_def_cfa_offset 32
 574              		.cfi_offset 3, -32
 575              		.cfi_offset 4, -28
 576              		.cfi_offset 5, -24
 577              		.cfi_offset 6, -20
 578              		.cfi_offset 7, -16
 579              		.cfi_offset 8, -12
 580              		.cfi_offset 9, -8
 581              		.cfi_offset 14, -4
 582              	.LBB313:
 583              	.LBB309:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 584              		.loc 4 919 50 view .LVU140
 585 0004 D1E90003 		ldrd	r0, r3, [r1]
 586              	.LVL33:
 587              		.loc 4 919 50 view .LVU141
 588              	.LBE309:
 589              	.LBE313:
 134:src/TTrack.cpp ****     int N = static_cast<int> (buffer.size());
 590              		.loc 1 134 1 view .LVU142
 591 0008 00AF     		add	r7, sp, #0
 592              		.cfi_def_cfa_register 7
 593              	.LBB314:
 594              	.LBB310:
 595              		.loc 4 919 50 view .LVU143
 596 000a A3EB000E 		sub	lr, r3, r0
 597              	.LBE310:
 598              	.LBE314:
 136:src/TTrack.cpp ****     float threshold[N];
 599              		.loc 1 136 11 view .LVU144
 600 000e 0EF10703 		add	r3, lr, #7
 601              	.LBB315:
 602              	.LBB316:
 603              		.file 7 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_algobas
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 63


  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <debug/debug.h>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <type_traits>
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus > 201703L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <compare>
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 64


  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** {
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /*
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    */
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline int
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return 0;
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       else
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _BoolType>
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    _ValueType1;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__a = *__b;
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__b = __tmp;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap<true>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  swap(*__a, *__b);
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 65


 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif // C++03
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   Nothing.
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  iterators themselves.
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType1;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType2;
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType2>)
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType1>)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType1;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType2;
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // 187. iter_swap underspecified
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       swap(*__a, *__b);
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 66


 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The ranges must not overlap.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _ForwardIterator2
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first2;
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__b < __a)
 604              		.loc 7 235 7 view .LVU145
 605 0012 BEF11C0F 		cmp	lr, #28
 606              	.LBE316:
 607              	.LBE315:
 608              	.LBB319:
 609              	.LBB311:
 610              		.loc 4 919 50 view .LVU146
 611 0016 4FEAAE01 		asr	r1, lr, #2
 612              	.LVL34:
 613              		.loc 4 919 50 view .LVU147
 614              	.LBE311:
 615              	.LBE319:
 616              		.loc 1 136 5 is_stmt 1 view .LVU148
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 67


 617              		.loc 1 136 11 is_stmt 0 view .LVU149
 618 001a 23F00703 		bic	r3, r3, #7
 619 001e ADEB030D 		sub	sp, sp, r3
 620 0022 EC46     		mov	ip, sp
 621              	.LVL35:
 137:src/TTrack.cpp ****     int p_post = 7;
 622              		.loc 1 137 5 is_stmt 1 view .LVU150
 138:src/TTrack.cpp ****     int p_pre = 8;
 623              		.loc 1 138 5 view .LVU151
 139:src/TTrack.cpp **** 
 140:src/TTrack.cpp ****     int t = std::min(N, p_post);
 624              		.loc 1 140 5 view .LVU152
 625              	.LBB320:
 626              	.LBI315:
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 627              		.loc 7 230 5 view .LVU153
 628              	.LBB317:
 629              		.loc 7 235 7 is_stmt 0 view .LVU154
 630 0024 00F39380 		bgt	.L43
 631              	.LVL36:
 632              		.loc 7 235 7 view .LVU155
 633              	.LBE317:
 634              	.LBE320:
 141:src/TTrack.cpp **** 
 142:src/TTrack.cpp ****     for (int i = 0; i <= t; i++)
 635              		.loc 1 142 5 is_stmt 1 view .LVU156
 636              	.LBB321:
 637              		.loc 1 142 23 view .LVU157
 638 0028 BEF1000F 		cmp	lr, #0
 639              	.LBE321:
 640              	.LBB335:
 143:src/TTrack.cpp ****     {
 144:src/TTrack.cpp ****         int k = std::min(N, i + p_pre);
 145:src/TTrack.cpp ****         threshold[i] = calculateMeanOfVector(buffer, 1, k);
 146:src/TTrack.cpp ****     }
 147:src/TTrack.cpp **** 
 148:src/TTrack.cpp ****     for (int i = t + 1; i < N - p_post; i++)
 641              		.loc 1 148 14 is_stmt 0 view .LVU158
 642 002c 01F10106 		add	r6, r1, #1
 643              	.LBE335:
 644              	.LBB342:
 142:src/TTrack.cpp ****     {
 645              		.loc 1 142 23 view .LVU159
 646 0030 23DB     		blt	.L28
 647              	.LBE342:
 648              	.LBB343:
 649              	.LBB312:
 650              		.loc 4 919 50 view .LVU160
 651 0032 8946     		mov	r9, r1
 652              	.LVL37:
 653              	.L23:
 654              		.loc 4 919 50 view .LVU161
 655 0034 E046     		mov	r8, ip
 656              	.LBE312:
 657              	.LBE343:
 658              	.LBB344:
 142:src/TTrack.cpp ****     {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 68


 659              		.loc 1 142 14 view .LVU162
 660 0036 0024     		movs	r4, #0
 661              	.L29:
 662              	.LVL38:
 663              	.LBB322:
 144:src/TTrack.cpp ****         threshold[i] = calculateMeanOfVector(buffer, 1, k);
 664              		.loc 1 144 9 is_stmt 1 discriminator 2 view .LVU163
 144:src/TTrack.cpp ****         threshold[i] = calculateMeanOfVector(buffer, 1, k);
 665              		.loc 1 144 9 is_stmt 0 discriminator 2 view .LVU164
 666 0038 04F10802 		add	r2, r4, #8
 667 003c 8A42     		cmp	r2, r1
 668 003e A8BF     		it	ge
 669 0040 0A46     		movge	r2, r1
 670              	.LVL39:
 145:src/TTrack.cpp ****     }
 671              		.loc 1 145 9 is_stmt 1 discriminator 2 view .LVU165
 672              	.LBB323:
 673              	.LBI323:
 149:src/TTrack.cpp ****     {
 150:src/TTrack.cpp ****         threshold[i] = calculateMeanOfVector(buffer, i - p_pre, i + p_post);
 151:src/TTrack.cpp ****     }
 152:src/TTrack.cpp **** 
 153:src/TTrack.cpp ****     for (int i = N - p_post; i < N; i++)
 154:src/TTrack.cpp ****     {
 155:src/TTrack.cpp ****         int k = std::max(i - p_post, 1);
 156:src/TTrack.cpp ****         threshold[i] = calculateMeanOfVector(buffer, k, N);
 157:src/TTrack.cpp ****     }
 158:src/TTrack.cpp **** 
 159:src/TTrack.cpp ****     for (int i = 0; i < N; i++)
 160:src/TTrack.cpp ****     {
 161:src/TTrack.cpp ****         buffer[i] -= threshold[i];
 162:src/TTrack.cpp ****         
 163:src/TTrack.cpp ****         if (buffer[i] < 0)
 164:src/TTrack.cpp ****         {
 165:src/TTrack.cpp ****             buffer[i] = 0;
 166:src/TTrack.cpp ****         } 
 167:src/TTrack.cpp ****     }
 168:src/TTrack.cpp **** 
 169:src/TTrack.cpp **** }
 170:src/TTrack.cpp **** //================================================
 171:src/TTrack.cpp **** void TTrack::normaliseVector(std::array<float, 41> &buffer)
 172:src/TTrack.cpp **** {
 173:src/TTrack.cpp ****     float sum = 0.0f;
 174:src/TTrack.cpp **** 
 175:src/TTrack.cpp ****     for (int i = 0; i < 41; i++)
 176:src/TTrack.cpp ****     {
 177:src/TTrack.cpp ****         sum += buffer[i];
 178:src/TTrack.cpp ****     }
 179:src/TTrack.cpp **** 
 180:src/TTrack.cpp ****     for (int i = 0; i < 41; i++)
 181:src/TTrack.cpp ****     {
 182:src/TTrack.cpp ****         buffer[i] /= sum;
 183:src/TTrack.cpp ****     }
 184:src/TTrack.cpp **** }
 185:src/TTrack.cpp **** //================================================
 186:src/TTrack.cpp **** float TTrack::calculateMeanOfVector(std::vector<float> &buffer, int in, int out)
 674              		.loc 1 186 7 discriminator 2 view .LVU166
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 69


 675              	.LBB324:
 187:src/TTrack.cpp **** {
 188:src/TTrack.cpp ****     int length = out - in;
 676              		.loc 1 188 5 discriminator 2 view .LVU167
 677              	.LBB325:
 189:src/TTrack.cpp ****     float sum = 0.0f;
 190:src/TTrack.cpp **** 
 191:src/TTrack.cpp ****     for (int i = in; i < out; i++)
 678              		.loc 1 191 24 is_stmt 0 discriminator 2 view .LVU168
 679 0042 012A     		cmp	r2, #1
 680              	.LBE325:
 188:src/TTrack.cpp ****     float sum = 0.0f;
 681              		.loc 1 188 9 discriminator 2 view .LVU169
 682 0044 02F1FF35 		add	r5, r2, #-1
 683              	.LVL40:
 189:src/TTrack.cpp ****     float sum = 0.0f;
 684              		.loc 1 189 5 is_stmt 1 discriminator 2 view .LVU170
 685              		.loc 1 191 5 discriminator 2 view .LVU171
 686              	.LBB326:
 687              		.loc 1 191 24 discriminator 2 view .LVU172
 688 0048 7BDD     		ble	.L44
 689 004a 031D     		adds	r3, r0, #4
 690 004c 00EB8202 		add	r2, r0, r2, lsl #2
 691              	.LBE326:
 189:src/TTrack.cpp ****     float sum = 0.0f;
 692              		.loc 1 189 11 is_stmt 0 view .LVU173
 693 0050 DFED427A 		vldr.32	s15, .L55
 694              	.LVL41:
 695              	.L26:
 696              	.LBB327:
 192:src/TTrack.cpp ****     {
 193:src/TTrack.cpp ****         sum += buffer[i];
 697              		.loc 1 193 9 is_stmt 1 view .LVU174
 698              		.loc 1 193 13 is_stmt 0 view .LVU175
 699 0054 B3EC017A 		vldmia.32	r3!, {s14}
 191:src/TTrack.cpp ****     {
 700              		.loc 1 191 24 view .LVU176
 701 0058 9342     		cmp	r3, r2
 702              		.loc 1 193 13 view .LVU177
 703 005a 77EE877A 		vadd.f32	s15, s15, s14
 704              	.LVL42:
 191:src/TTrack.cpp ****     {
 705              		.loc 1 191 5 is_stmt 1 view .LVU178
 191:src/TTrack.cpp ****     {
 706              		.loc 1 191 24 view .LVU179
 707 005e F9D1     		bne	.L26
 708              	.LVL43:
 709              	.L25:
 191:src/TTrack.cpp ****     {
 710              		.loc 1 191 24 is_stmt 0 view .LVU180
 711              	.LBE327:
 194:src/TTrack.cpp ****     }
 195:src/TTrack.cpp **** 
 196:src/TTrack.cpp ****     if (length > 0)
 712              		.loc 1 196 5 is_stmt 1 view .LVU181
 713 0060 002D     		cmp	r5, #0
 714 0062 68DD     		ble	.L45
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 70


 197:src/TTrack.cpp ****     {
 198:src/TTrack.cpp ****         return (float) sum / length;
 715              		.loc 1 198 9 view .LVU182
 716              		.loc 1 198 28 is_stmt 0 view .LVU183
 717 0064 07EE105A 		vmov	s14, r5	@ int
 718 0068 B8EEC77A 		vcvt.f32.s32	s14, s14
 719              		.loc 1 198 30 view .LVU184
 720 006c C7EE876A 		vdiv.f32	s13, s15, s14
 721              	.L27:
 722              	.LVL44:
 723              		.loc 1 198 30 view .LVU185
 724              	.LBE324:
 725              	.LBE323:
 726              	.LBE322:
 142:src/TTrack.cpp ****     {
 727              		.loc 1 142 5 view .LVU186
 728 0070 0134     		adds	r4, r4, #1
 729              	.LVL45:
 730              	.LBB332:
 145:src/TTrack.cpp ****     }
 731              		.loc 1 145 22 view .LVU187
 732 0072 E8EC016A 		vstmia.32	r8!, {s13}
 733              	.LBE332:
 142:src/TTrack.cpp ****     {
 734              		.loc 1 142 5 is_stmt 1 view .LVU188
 735              	.LVL46:
 142:src/TTrack.cpp ****     {
 736              		.loc 1 142 23 view .LVU189
 737 0076 4C45     		cmp	r4, r9
 738 0078 DEDD     		ble	.L29
 739              	.LVL47:
 740              	.L28:
 142:src/TTrack.cpp ****     {
 741              		.loc 1 142 23 is_stmt 0 view .LVU190
 742              	.LBE344:
 148:src/TTrack.cpp ****     {
 743              		.loc 1 148 5 is_stmt 1 view .LVU191
 744              	.LBB345:
 148:src/TTrack.cpp ****     {
 745              		.loc 1 148 27 view .LVU192
 148:src/TTrack.cpp ****     {
 746              		.loc 1 148 31 is_stmt 0 view .LVU193
 747 007a CD1F     		subs	r5, r1, #7
 148:src/TTrack.cpp ****     {
 748              		.loc 1 148 27 view .LVU194
 749 007c B542     		cmp	r5, r6
 750 007e 6ADD     		ble	.L54
 751 0080 00F11C02 		add	r2, r0, #28
 752 0084 AEF11C09 		sub	r9, lr, #28
 753 0088 02EB8602 		add	r2, r2, r6, lsl #2
 754 008c 0CEB0904 		add	r4, ip, r9
 755 0090 0CEB8606 		add	r6, ip, r6, lsl #2
 756              	.L34:
 150:src/TTrack.cpp ****     }
 757              		.loc 1 150 9 is_stmt 1 discriminator 2 view .LVU195
 758              	.LVL48:
 759              	.LBB336:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 71


 760              	.LBI336:
 186:src/TTrack.cpp **** {
 761              		.loc 1 186 7 discriminator 2 view .LVU196
 762              	.LBB337:
 188:src/TTrack.cpp ****     float sum = 0.0f;
 763              		.loc 1 188 5 discriminator 2 view .LVU197
 189:src/TTrack.cpp **** 
 764              		.loc 1 189 5 discriminator 2 view .LVU198
 191:src/TTrack.cpp ****     {
 765              		.loc 1 191 5 discriminator 2 view .LVU199
 766              	.LBB338:
 191:src/TTrack.cpp ****     {
 767              		.loc 1 191 24 discriminator 2 view .LVU200
 768 0094 A2F13C03 		sub	r3, r2, #60
 769              	.LBE338:
 189:src/TTrack.cpp **** 
 770              		.loc 1 189 11 is_stmt 0 discriminator 2 view .LVU201
 771 0098 DFED307A 		vldr.32	s15, .L55
 772              	.LVL49:
 773              	.L32:
 774              	.LBB339:
 193:src/TTrack.cpp ****     }
 775              		.loc 1 193 9 is_stmt 1 view .LVU202
 193:src/TTrack.cpp ****     }
 776              		.loc 1 193 13 is_stmt 0 view .LVU203
 777 009c B3EC017A 		vldmia.32	r3!, {s14}
 191:src/TTrack.cpp ****     {
 778              		.loc 1 191 24 view .LVU204
 779 00a0 9342     		cmp	r3, r2
 193:src/TTrack.cpp ****     }
 780              		.loc 1 193 13 view .LVU205
 781 00a2 77EE877A 		vadd.f32	s15, s15, s14
 782              	.LVL50:
 191:src/TTrack.cpp ****     {
 783              		.loc 1 191 5 is_stmt 1 view .LVU206
 191:src/TTrack.cpp ****     {
 784              		.loc 1 191 24 view .LVU207
 785 00a6 F9D1     		bne	.L32
 786              	.LBE339:
 196:src/TTrack.cpp ****     {
 787              		.loc 1 196 5 view .LVU208
 788              		.loc 1 198 9 view .LVU209
 789              	.LVL51:
 790              		.loc 1 198 30 is_stmt 0 view .LVU210
 791 00a8 F2EE0E6A 		vmov.f32	s13, #1.5e+1
 792              	.LBE337:
 793              	.LBE336:
 148:src/TTrack.cpp ****     {
 794              		.loc 1 148 27 view .LVU211
 795 00ac 0432     		adds	r2, r2, #4
 796              	.LBB341:
 797              	.LBB340:
 798              		.loc 1 198 30 view .LVU212
 799 00ae 87EEA67A 		vdiv.f32	s14, s15, s13
 800              	.LBE340:
 801              	.LBE341:
 150:src/TTrack.cpp ****     }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 72


 802              		.loc 1 150 22 view .LVU213
 803 00b2 A6EC017A 		vstmia.32	r6!, {s14}
 148:src/TTrack.cpp ****     {
 804              		.loc 1 148 5 is_stmt 1 view .LVU214
 148:src/TTrack.cpp ****     {
 805              		.loc 1 148 27 view .LVU215
 806 00b6 A642     		cmp	r6, r4
 807 00b8 ECD1     		bne	.L34
 808              	.L33:
 809              	.LVL52:
 148:src/TTrack.cpp ****     {
 810              		.loc 1 148 27 is_stmt 0 view .LVU216
 811              	.LBE345:
 812              	.LBB346:
 153:src/TTrack.cpp ****     {
 813              		.loc 1 153 32 is_stmt 1 view .LVU217
 814 00ba E144     		add	r9, r9, ip
 815 00bc A1F10E04 		sub	r4, r1, #14
 816 00c0 8046     		mov	r8, r0
 817 00c2 0EEB0002 		add	r2, lr, r0
 818              	.LVL53:
 819              	.L31:
 820              	.LBB347:
 155:src/TTrack.cpp ****         threshold[i] = calculateMeanOfVector(buffer, k, N);
 821              		.loc 1 155 9 discriminator 2 view .LVU218
 155:src/TTrack.cpp ****         threshold[i] = calculateMeanOfVector(buffer, k, N);
 822              		.loc 1 155 9 is_stmt 0 discriminator 2 view .LVU219
 823 00c6 012C     		cmp	r4, #1
 824 00c8 2346     		mov	r3, r4
 825 00ca B8BF     		it	lt
 826 00cc 0123     		movlt	r3, #1
 827              	.LVL54:
 156:src/TTrack.cpp ****     }
 828              		.loc 1 156 9 is_stmt 1 discriminator 2 view .LVU220
 829              	.LBB348:
 830              	.LBI348:
 186:src/TTrack.cpp **** {
 831              		.loc 1 186 7 discriminator 2 view .LVU221
 832              	.LBB349:
 188:src/TTrack.cpp ****     float sum = 0.0f;
 833              		.loc 1 188 5 discriminator 2 view .LVU222
 834              	.LBB350:
 191:src/TTrack.cpp ****     {
 835              		.loc 1 191 24 is_stmt 0 discriminator 2 view .LVU223
 836 00ce 9942     		cmp	r1, r3
 837              	.LBE350:
 188:src/TTrack.cpp ****     float sum = 0.0f;
 838              		.loc 1 188 9 discriminator 2 view .LVU224
 839 00d0 A1EB0306 		sub	r6, r1, r3
 840              	.LVL55:
 189:src/TTrack.cpp **** 
 841              		.loc 1 189 5 is_stmt 1 discriminator 2 view .LVU225
 191:src/TTrack.cpp ****     {
 842              		.loc 1 191 5 discriminator 2 view .LVU226
 843              	.LBB351:
 191:src/TTrack.cpp ****     {
 844              		.loc 1 191 24 discriminator 2 view .LVU227
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 73


 845 00d4 38DD     		ble	.L46
 846 00d6 00EB8303 		add	r3, r0, r3, lsl #2
 847              	.LVL56:
 191:src/TTrack.cpp ****     {
 848              		.loc 1 191 24 is_stmt 0 discriminator 2 view .LVU228
 849              	.LBE351:
 189:src/TTrack.cpp **** 
 850              		.loc 1 189 11 view .LVU229
 851 00da DFED207A 		vldr.32	s15, .L55
 852              	.LVL57:
 853              	.L37:
 854              	.LBB352:
 193:src/TTrack.cpp ****     }
 855              		.loc 1 193 9 is_stmt 1 view .LVU230
 193:src/TTrack.cpp ****     }
 856              		.loc 1 193 13 is_stmt 0 view .LVU231
 857 00de B3EC017A 		vldmia.32	r3!, {s14}
 191:src/TTrack.cpp ****     {
 858              		.loc 1 191 24 view .LVU232
 859 00e2 9A42     		cmp	r2, r3
 193:src/TTrack.cpp ****     }
 860              		.loc 1 193 13 view .LVU233
 861 00e4 77EE877A 		vadd.f32	s15, s15, s14
 862              	.LVL58:
 191:src/TTrack.cpp ****     {
 863              		.loc 1 191 5 is_stmt 1 view .LVU234
 191:src/TTrack.cpp ****     {
 864              		.loc 1 191 24 view .LVU235
 865 00e8 F9D1     		bne	.L37
 866              	.LVL59:
 867              	.L36:
 191:src/TTrack.cpp ****     {
 868              		.loc 1 191 24 is_stmt 0 view .LVU236
 869              	.LBE352:
 196:src/TTrack.cpp ****     {
 870              		.loc 1 196 5 is_stmt 1 view .LVU237
 871 00ea 002E     		cmp	r6, #0
 872 00ec 26DD     		ble	.L47
 873              		.loc 1 198 9 view .LVU238
 874              		.loc 1 198 28 is_stmt 0 view .LVU239
 875 00ee 07EE106A 		vmov	s14, r6	@ int
 876 00f2 B8EEC77A 		vcvt.f32.s32	s14, s14
 877              		.loc 1 198 30 view .LVU240
 878 00f6 C7EE876A 		vdiv.f32	s13, s15, s14
 879              	.L38:
 880              	.LVL60:
 881              		.loc 1 198 30 view .LVU241
 882              	.LBE349:
 883              	.LBE348:
 884              	.LBE347:
 153:src/TTrack.cpp ****     {
 885              		.loc 1 153 32 view .LVU242
 886 00fa 0134     		adds	r4, r4, #1
 887              	.LVL61:
 888              	.LBB357:
 156:src/TTrack.cpp ****     }
 889              		.loc 1 156 22 view .LVU243
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 74


 890 00fc E9EC016A 		vstmia.32	r9!, {s13}
 891              	.LBE357:
 153:src/TTrack.cpp ****     {
 892              		.loc 1 153 5 is_stmt 1 view .LVU244
 893              	.LVL62:
 153:src/TTrack.cpp ****     {
 894              		.loc 1 153 32 view .LVU245
 895 0100 A542     		cmp	r5, r4
 896 0102 E0D1     		bne	.L31
 897              	.LVL63:
 153:src/TTrack.cpp ****     {
 898              		.loc 1 153 32 is_stmt 0 view .LVU246
 899              	.LBE346:
 900              	.LBB360:
 159:src/TTrack.cpp ****     {
 901              		.loc 1 159 23 is_stmt 1 view .LVU247
 902 0104 BEF1000F 		cmp	lr, #0
 903 0108 12DD     		ble	.L22
 159:src/TTrack.cpp ****     {
 904              		.loc 1 159 14 is_stmt 0 view .LVU248
 905 010a 0023     		movs	r3, #0
 906              	.LVL64:
 907              	.L42:
 161:src/TTrack.cpp ****         
 908              		.loc 1 161 9 is_stmt 1 view .LVU249
 161:src/TTrack.cpp ****         
 909              		.loc 1 161 19 is_stmt 0 view .LVU250
 910 010c F8EC017A 		vldmia.32	r8!, {s15}
 159:src/TTrack.cpp ****     {
 911              		.loc 1 159 5 view .LVU251
 912 0110 0133     		adds	r3, r3, #1
 913              	.LVL65:
 161:src/TTrack.cpp ****         
 914              		.loc 1 161 33 view .LVU252
 915 0112 BCEC017A 		vldmia.32	ip!, {s14}
 161:src/TTrack.cpp ****         
 916              		.loc 1 161 19 view .LVU253
 917 0116 77EEC77A 		vsub.f32	s15, s15, s14
 163:src/TTrack.cpp ****         {
 918              		.loc 1 163 9 is_stmt 1 view .LVU254
 919 011a F5EEC07A 		vcmpe.f32	s15, #0
 920 011e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 165:src/TTrack.cpp ****         } 
 921              		.loc 1 165 23 is_stmt 0 view .LVU255
 922 0122 48BF     		it	mi
 923 0124 DFED0D7A 		vldrmi.32	s15, .L55
 159:src/TTrack.cpp ****     {
 924              		.loc 1 159 23 view .LVU256
 925 0128 9942     		cmp	r1, r3
 926 012a 48ED017A 		vstr.32	s15, [r8, #-4]
 159:src/TTrack.cpp ****     {
 927              		.loc 1 159 5 is_stmt 1 view .LVU257
 928              	.LVL66:
 159:src/TTrack.cpp ****     {
 929              		.loc 1 159 23 view .LVU258
 930 012e EDDC     		bgt	.L42
 931              	.LVL67:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 75


 932              	.L22:
 159:src/TTrack.cpp ****     {
 933              		.loc 1 159 23 is_stmt 0 view .LVU259
 934              	.LBE360:
 169:src/TTrack.cpp **** //================================================
 935              		.loc 1 169 1 view .LVU260
 936 0130 BD46     		mov	sp, r7
 937              		.cfi_remember_state
 938              		.cfi_def_cfa_register 13
 939              	.LVL68:
 169:src/TTrack.cpp **** //================================================
 940              		.loc 1 169 1 view .LVU261
 941              		@ sp needed
 942 0132 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 943              	.LVL69:
 944              	.L45:
 945              		.cfi_restore_state
 946              	.LBB361:
 947              	.LBB333:
 948              	.LBB330:
 949              	.LBB328:
 199:src/TTrack.cpp ****     }
 200:src/TTrack.cpp ****     else
 201:src/TTrack.cpp ****     {
 202:src/TTrack.cpp ****         return 0.0f;
 950              		.loc 1 202 16 view .LVU262
 951 0136 DFED096A 		vldr.32	s13, .L55
 952 013a 99E7     		b	.L27
 953              	.LVL70:
 954              	.L47:
 955              		.loc 1 202 16 view .LVU263
 956              	.LBE328:
 957              	.LBE330:
 958              	.LBE333:
 959              	.LBE361:
 960              	.LBB362:
 961              	.LBB358:
 962              	.LBB355:
 963              	.LBB353:
 964 013c DFED076A 		vldr.32	s13, .L55
 965 0140 DBE7     		b	.L38
 966              	.LVL71:
 967              	.L44:
 968              		.loc 1 202 16 view .LVU264
 969              	.LBE353:
 970              	.LBE355:
 971              	.LBE358:
 972              	.LBE362:
 973              	.LBB363:
 974              	.LBB334:
 975              	.LBB331:
 976              	.LBB329:
 189:src/TTrack.cpp **** 
 977              		.loc 1 189 11 view .LVU265
 978 0142 DFED067A 		vldr.32	s15, .L55
 979 0146 8BE7     		b	.L25
 980              	.LVL72:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 76


 981              	.L46:
 189:src/TTrack.cpp **** 
 982              		.loc 1 189 11 view .LVU266
 983              	.LBE329:
 984              	.LBE331:
 985              	.LBE334:
 986              	.LBE363:
 987              	.LBB364:
 988              	.LBB359:
 989              	.LBB356:
 990              	.LBB354:
 991 0148 DFED047A 		vldr.32	s15, .L55
 992 014c CDE7     		b	.L36
 993              	.LVL73:
 994              	.L43:
 189:src/TTrack.cpp **** 
 995              		.loc 1 189 11 view .LVU267
 996              	.LBE354:
 997              	.LBE356:
 998              	.LBE359:
 999              	.LBE364:
 1000              	.LBB365:
 1001              	.LBB318:
 1002 014e 0826     		movs	r6, #8
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 1003              		.loc 7 236 9 view .LVU268
 1004 0150 4FF00709 		mov	r9, #7
 1005 0154 6EE7     		b	.L23
 1006              	.LVL74:
 1007              	.L54:
 1008              		.loc 7 236 9 view .LVU269
 1009 0156 AEF11C09 		sub	r9, lr, #28
 1010 015a AEE7     		b	.L33
 1011              	.L56:
 1012              		.align	2
 1013              	.L55:
 1014 015c 00000000 		.word	0
 1015              	.LBE318:
 1016              	.LBE365:
 1017              		.cfi_endproc
 1018              	.LFE4743:
 1020              		.section	.text._ZN6TTrack15normaliseVectorERSt5arrayIfLj41EE,"ax",%progbits
 1021              		.align	1
 1022              		.p2align 2,,3
 1023              		.global	_ZN6TTrack15normaliseVectorERSt5arrayIfLj41EE
 1024              		.syntax unified
 1025              		.thumb
 1026              		.thumb_func
 1027              		.fpu fpv5-d16
 1029              	_ZN6TTrack15normaliseVectorERSt5arrayIfLj41EE:
 1030              	.LVL75:
 1031              	.LFB4745:
 172:src/TTrack.cpp ****     float sum = 0.0f;
 1032              		.loc 1 172 1 is_stmt 1 view -0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 0
 1035              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 77


 1036              		@ link register save eliminated.
 173:src/TTrack.cpp **** 
 1037              		.loc 1 173 5 view .LVU271
 175:src/TTrack.cpp ****     {
 1038              		.loc 1 175 5 view .LVU272
 1039              	.LBB372:
 175:src/TTrack.cpp ****     {
 1040              		.loc 1 175 23 view .LVU273
 1041              	.LBE372:
 173:src/TTrack.cpp **** 
 1042              		.loc 1 173 11 is_stmt 0 view .LVU274
 1043 0000 DFED097A 		vldr.32	s15, .L62
 1044 0004 01F1A402 		add	r2, r1, #164
 172:src/TTrack.cpp ****     float sum = 0.0f;
 1045              		.loc 1 172 1 view .LVU275
 1046 0008 0B46     		mov	r3, r1
 1047              	.LVL76:
 1048              	.L58:
 1049              	.LBB373:
 177:src/TTrack.cpp ****     }
 1050              		.loc 1 177 9 is_stmt 1 discriminator 2 view .LVU276
 177:src/TTrack.cpp ****     }
 1051              		.loc 1 177 13 is_stmt 0 discriminator 2 view .LVU277
 1052 000a B3EC017A 		vldmia.32	r3!, {s14}
 175:src/TTrack.cpp ****     {
 1053              		.loc 1 175 23 discriminator 2 view .LVU278
 1054 000e 9342     		cmp	r3, r2
 177:src/TTrack.cpp ****     }
 1055              		.loc 1 177 13 discriminator 2 view .LVU279
 1056 0010 77EE877A 		vadd.f32	s15, s15, s14
 1057              	.LVL77:
 175:src/TTrack.cpp ****     {
 1058              		.loc 1 175 5 is_stmt 1 discriminator 2 view .LVU280
 175:src/TTrack.cpp ****     {
 1059              		.loc 1 175 23 discriminator 2 view .LVU281
 1060 0014 F9D1     		bne	.L58
 1061              	.LVL78:
 1062              	.L59:
 175:src/TTrack.cpp ****     {
 1063              		.loc 1 175 23 is_stmt 0 discriminator 2 view .LVU282
 1064              	.LBE373:
 1065              	.LBB374:
 182:src/TTrack.cpp ****     }
 1066              		.loc 1 182 9 is_stmt 1 discriminator 2 view .LVU283
 182:src/TTrack.cpp ****     }
 1067              		.loc 1 182 19 is_stmt 0 discriminator 2 view .LVU284
 1068 0016 D1ED006A 		vldr.32	s13, [r1]
 1069 001a 86EEA77A 		vdiv.f32	s14, s13, s15
 1070 001e A1EC017A 		vstmia.32	r1!, {s14}
 180:src/TTrack.cpp ****     {
 1071              		.loc 1 180 5 is_stmt 1 discriminator 2 view .LVU285
 180:src/TTrack.cpp ****     {
 1072              		.loc 1 180 23 discriminator 2 view .LVU286
 1073 0022 9142     		cmp	r1, r2
 1074 0024 F7D1     		bne	.L59
 1075              	.LBE374:
 184:src/TTrack.cpp **** //================================================
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 78


 1076              		.loc 1 184 1 is_stmt 0 view .LVU287
 1077 0026 7047     		bx	lr
 1078              	.L63:
 1079              		.align	2
 1080              	.L62:
 1081 0028 00000000 		.word	0
 1082              		.cfi_endproc
 1083              	.LFE4745:
 1085              		.section	.text._ZN6TTrack21calculateMeanOfVectorERSt6vectorIfSaIfEEii,"ax",%progbits
 1086              		.align	1
 1087              		.p2align 2,,3
 1088              		.global	_ZN6TTrack21calculateMeanOfVectorERSt6vectorIfSaIfEEii
 1089              		.syntax unified
 1090              		.thumb
 1091              		.thumb_func
 1092              		.fpu fpv5-d16
 1094              	_ZN6TTrack21calculateMeanOfVectorERSt6vectorIfSaIfEEii:
 1095              	.LVL79:
 1096              	.LFB4746:
 187:src/TTrack.cpp ****     int length = out - in;
 1097              		.loc 1 187 1 is_stmt 1 view -0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 0
 1100              		@ frame_needed = 0, uses_anonymous_args = 0
 1101              		@ link register save eliminated.
 188:src/TTrack.cpp ****     float sum = 0.0f;
 1102              		.loc 1 188 5 view .LVU289
 1103              	.LBB375:
 191:src/TTrack.cpp ****     {
 1104              		.loc 1 191 24 is_stmt 0 view .LVU290
 1105 0000 9342     		cmp	r3, r2
 1106              	.LBE375:
 188:src/TTrack.cpp ****     float sum = 0.0f;
 1107              		.loc 1 188 9 view .LVU291
 1108 0002 A3EB0200 		sub	r0, r3, r2
 1109              	.LVL80:
 189:src/TTrack.cpp **** 
 1110              		.loc 1 189 5 is_stmt 1 view .LVU292
 191:src/TTrack.cpp ****     {
 1111              		.loc 1 191 5 view .LVU293
 1112              	.LBB379:
 191:src/TTrack.cpp ****     {
 1113              		.loc 1 191 24 view .LVU294
 1114 0006 18DD     		ble	.L68
 1115              	.LBB376:
 1116              	.LBB377:
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 79


 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  default constructed elements are appended.
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size)
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_default_append(__new_size - size());
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 80


 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       shrink_to_fit()
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_shrink_to_fit(); }
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns the total number of elements that the %vector can
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  hold before needing to allocate more memory.
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 - this->_M_impl._M_start); }
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  equal end().)
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _GLIBCXX_NODISCARD bool
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return begin() == end(); }
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *          elements.
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements required.
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function attempts to reserve enough memory for the
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number requested is more than max_size(), length_error is
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  thrown.
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The advantage of this function is that if optimal code is a
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  necessity and the user can determine the number of elements
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that will be required, the user can reserve the memory in
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and copying of %vector data.
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reserve(size_type __n);
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // element access
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 81


1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
 1117              		.loc 4 1046 25 is_stmt 0 view .LVU295
 1118 0008 0968     		ldr	r1, [r1]
 1119              	.LVL81:
 1120              		.loc 4 1046 25 view .LVU296
 1121              	.LBE377:
 1122              	.LBE376:
 1123              	.LBE379:
 189:src/TTrack.cpp **** 
 1124              		.loc 1 189 11 view .LVU297
 1125 000a DFED0D7A 		vldr.32	s15, .L71
 1126 000e 01EB8202 		add	r2, r1, r2, lsl #2
 1127              	.LVL82:
 189:src/TTrack.cpp **** 
 1128              		.loc 1 189 11 view .LVU298
 1129 0012 01EB8303 		add	r3, r1, r3, lsl #2
 1130              	.LVL83:
 1131              	.L66:
 1132              	.LBB380:
 193:src/TTrack.cpp ****     }
 1133              		.loc 1 193 9 is_stmt 1 discriminator 2 view .LVU299
 1134              	.LBB378:
 1135              	.LBI376:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1136              		.loc 4 1043 7 discriminator 2 view .LVU300
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1137              		.loc 4 1043 7 is_stmt 0 discriminator 2 view .LVU301
 1138              	.LBE378:
 193:src/TTrack.cpp ****     }
 1139              		.loc 1 193 13 discriminator 2 view .LVU302
 1140 0016 B2EC017A 		vldmia.32	r2!, {s14}
 191:src/TTrack.cpp ****     {
 1141              		.loc 1 191 24 discriminator 2 view .LVU303
 1142 001a 9A42     		cmp	r2, r3
 193:src/TTrack.cpp ****     }
 1143              		.loc 1 193 13 discriminator 2 view .LVU304
 1144 001c 77EE877A 		vadd.f32	s15, s15, s14
 1145              	.LVL84:
 191:src/TTrack.cpp ****     {
 1146              		.loc 1 191 5 is_stmt 1 discriminator 2 view .LVU305
 191:src/TTrack.cpp ****     {
 1147              		.loc 1 191 24 discriminator 2 view .LVU306
 1148 0020 F9D1     		bne	.L66
 1149              	.LVL85:
 1150              	.L65:
 191:src/TTrack.cpp ****     {
 1151              		.loc 1 191 24 is_stmt 0 discriminator 2 view .LVU307
 1152              	.LBE380:
 196:src/TTrack.cpp ****     {
 1153              		.loc 1 196 5 is_stmt 1 view .LVU308
 1154 0022 0028     		cmp	r0, #0
 1155 0024 06DD     		ble	.L69
 198:src/TTrack.cpp ****     }
 1156              		.loc 1 198 9 view .LVU309
 198:src/TTrack.cpp ****     }
 1157              		.loc 1 198 28 is_stmt 0 view .LVU310
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 82


 1158 0026 07EE100A 		vmov	s14, r0	@ int
 1159 002a B8EEC77A 		vcvt.f32.s32	s14, s14
 198:src/TTrack.cpp ****     }
 1160              		.loc 1 198 30 view .LVU311
 1161 002e 87EE870A 		vdiv.f32	s0, s15, s14
 1162 0032 7047     		bx	lr
 1163              	.L69:
 1164              		.loc 1 202 16 view .LVU312
 1165 0034 9FED020A 		vldr.32	s0, .L71
 203:src/TTrack.cpp ****     }
 204:src/TTrack.cpp **** }
 1166              		.loc 1 204 1 view .LVU313
 1167 0038 7047     		bx	lr
 1168              	.LVL86:
 1169              	.L68:
 189:src/TTrack.cpp **** 
 1170              		.loc 1 189 11 view .LVU314
 1171 003a DFED017A 		vldr.32	s15, .L71
 1172 003e F0E7     		b	.L65
 1173              	.L72:
 1174              		.align	2
 1175              	.L71:
 1176 0040 00000000 		.word	0
 1177              		.cfi_endproc
 1178              	.LFE4746:
 1180              		.section	.text._ZN6TTrack20calculateBalancedACFERSt6vectorIfSaIfEE,"ax",%progbits
 1181              		.align	1
 1182              		.p2align 2,,3
 1183              		.global	_ZN6TTrack20calculateBalancedACFERSt6vectorIfSaIfEE
 1184              		.syntax unified
 1185              		.thumb
 1186              		.thumb_func
 1187              		.fpu fpv5-d16
 1189              	_ZN6TTrack20calculateBalancedACFERSt6vectorIfSaIfEE:
 1190              	.LVL87:
 1191              	.LFB4747:
 205:src/TTrack.cpp **** //================================================
 206:src/TTrack.cpp **** void TTrack::calculateBalancedACF(std::vector<float> &odf)
 207:src/TTrack.cpp **** {
 1192              		.loc 1 207 1 is_stmt 1 view -0
 1193              		.cfi_startproc
 1194              		@ args = 0, pretend = 0, frame = 0
 1195              		@ frame_needed = 0, uses_anonymous_args = 0
 208:src/TTrack.cpp ****     int l, n = 0;
 1196              		.loc 1 208 5 view .LVU316
 209:src/TTrack.cpp ****     float sum, tmp;
 1197              		.loc 1 209 5 view .LVU317
 210:src/TTrack.cpp **** 
 211:src/TTrack.cpp ****     for (l = 0; l < 512; l++)
 1198              		.loc 1 211 5 view .LVU318
 1199              		.loc 1 211 19 view .LVU319
 207:src/TTrack.cpp ****     int l, n = 0;
 1200              		.loc 1 207 1 is_stmt 0 view .LVU320
 1201 0000 10B5     		push	{r4, lr}
 1202              		.cfi_def_cfa_offset 8
 1203              		.cfi_offset 4, -8
 1204              		.cfi_offset 14, -4
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 83


 1205 0002 0C68     		ldr	r4, [r1]
 1206              	.LBB381:
 1207              	.LBB382:
 1208              		.loc 4 1046 25 view .LVU321
 1209 0004 4FF4007C 		mov	ip, #512
 1210 0008 00F61800 		addw	r0, r0, #2072
 1211              	.LVL88:
 1212              		.loc 4 1046 25 view .LVU322
 1213 000c 4FEA440E 		lsl	lr, r4, #1
 1214 0010 04F50061 		add	r1, r4, #2048
 1215              	.LVL89:
 1216              		.loc 4 1046 25 view .LVU323
 1217 0014 0EF5006E 		add	lr, lr, #2048
 1218              	.LVL90:
 1219              	.L75:
 1220              		.loc 4 1046 25 view .LVU324
 1221              	.LBE382:
 1222              	.LBE381:
 212:src/TTrack.cpp ****     {
 213:src/TTrack.cpp ****         sum = 0.0f;
 214:src/TTrack.cpp **** 
 215:src/TTrack.cpp ****         for (n = 0; n < 512 - l; n++)
 1223              		.loc 1 215 23 is_stmt 1 view .LVU325
 1224 0018 AEEB0102 		sub	r2, lr, r1
 1225              		.loc 1 215 29 is_stmt 0 view .LVU326
 1226 001c 2346     		mov	r3, r4
 213:src/TTrack.cpp **** 
 1227              		.loc 1 213 13 view .LVU327
 1228 001e DFED0C7A 		vldr.32	s15, .L79
 1229              	.LVL91:
 1230              	.L74:
 216:src/TTrack.cpp ****         {
 217:src/TTrack.cpp ****             tmp = odf[n] * odf[n + l];
 1231              		.loc 1 217 13 is_stmt 1 discriminator 2 view .LVU328
 1232              	.LBB383:
 1233              	.LBI381:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1234              		.loc 4 1043 7 discriminator 2 view .LVU329
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1235              		.loc 4 1043 7 is_stmt 0 discriminator 2 view .LVU330
 1236              	.LBE383:
 1237              		.loc 1 217 26 discriminator 2 view .LVU331
 1238 0022 F3EC016A 		vldmia.32	r3!, {s13}
 1239 0026 B2EC017A 		vldmia.32	r2!, {s14}
 1240              	.LVL92:
 218:src/TTrack.cpp ****             sum += tmp;
 1241              		.loc 1 218 13 is_stmt 1 discriminator 2 view .LVU332
 215:src/TTrack.cpp ****         {
 1242              		.loc 1 215 23 is_stmt 0 discriminator 2 view .LVU333
 1243 002a 9942     		cmp	r1, r3
 1244              		.loc 1 218 17 discriminator 2 view .LVU334
 1245 002c E6EE877A 		vfma.f32	s15, s13, s14
 1246              	.LVL93:
 215:src/TTrack.cpp ****         {
 1247              		.loc 1 215 9 is_stmt 1 discriminator 2 view .LVU335
 215:src/TTrack.cpp ****         {
 1248              		.loc 1 215 23 discriminator 2 view .LVU336
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 84


 1249 0030 F7D1     		bne	.L74
 219:src/TTrack.cpp ****         }
 220:src/TTrack.cpp **** 
 221:src/TTrack.cpp ****         acf[l] = sum / (512 - l);
 1250              		.loc 1 221 9 discriminator 2 view .LVU337
 1251              		.loc 1 221 22 is_stmt 0 discriminator 2 view .LVU338
 1252 0032 07EE10CA 		vmov	s14, ip	@ int
 1253              	.LVL94:
 211:src/TTrack.cpp ****     {
 1254              		.loc 1 211 19 discriminator 2 view .LVU339
 1255 0036 BCF1010C 		subs	ip, ip, #1
 1256              	.LVL95:
 211:src/TTrack.cpp ****     {
 1257              		.loc 1 211 19 discriminator 2 view .LVU340
 1258 003a A1F10401 		sub	r1, r1, #4
 1259              		.loc 1 221 22 discriminator 2 view .LVU341
 1260 003e F8EEC76A 		vcvt.f32.s32	s13, s14
 1261              	.LVL96:
 1262              		.loc 1 221 22 discriminator 2 view .LVU342
 1263 0042 87EEA67A 		vdiv.f32	s14, s15, s13
 1264              	.LVL97:
 1265              		.loc 1 221 16 discriminator 2 view .LVU343
 1266 0046 A0EC017A 		vstmia.32	r0!, {s14}
 1267              	.LVL98:
 211:src/TTrack.cpp ****     {
 1268              		.loc 1 211 5 is_stmt 1 discriminator 2 view .LVU344
 211:src/TTrack.cpp ****     {
 1269              		.loc 1 211 19 discriminator 2 view .LVU345
 1270 004a E5D1     		bne	.L75
 222:src/TTrack.cpp ****     }
 223:src/TTrack.cpp **** }
 1271              		.loc 1 223 1 is_stmt 0 view .LVU346
 1272 004c 10BD     		pop	{r4, pc}
 1273              	.L80:
 1274 004e 00BF     		.align	2
 1275              	.L79:
 1276 0050 00000000 		.word	0
 1277              		.cfi_endproc
 1278              	.LFE4747:
 1280              		.section	.text._ZN6TTrack29calculateCombFilterBankOutputEv,"ax",%progbits
 1281              		.align	1
 1282              		.p2align 2,,3
 1283              		.global	_ZN6TTrack29calculateCombFilterBankOutputEv
 1284              		.syntax unified
 1285              		.thumb
 1286              		.thumb_func
 1287              		.fpu fpv5-d16
 1289              	_ZN6TTrack29calculateCombFilterBankOutputEv:
 1290              	.LVL99:
 1291              	.LFB4748:
 224:src/TTrack.cpp **** //================================================
 225:src/TTrack.cpp **** void TTrack::calculateCombFilterBankOutput()
 226:src/TTrack.cpp **** {
 1292              		.loc 1 226 1 is_stmt 1 view -0
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 0
 1295              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 85


 227:src/TTrack.cpp ****     int numCombElements = 4;
 1296              		.loc 1 227 5 view .LVU348
 228:src/TTrack.cpp **** 
 229:src/TTrack.cpp ****     for (int i = 2; i <= 127; i++)
 1297              		.loc 1 229 5 view .LVU349
 1298              	.LBB384:
 1299              		.loc 1 229 23 view .LVU350
 1300              	.LBB385:
 1301              	.LBB386:
 1302              	.LBB387:
 1303              	.LBB388:
 1304              		.loc 4 1046 25 is_stmt 0 view .LVU351
 1305 0000 00F58053 		add	r3, r0, #4096
 1306 0004 41F2280C 		movw	ip, #4136
 1307 0008 9B69     		ldr	r3, [r3, #24]
 1308 000a 8444     		add	ip, ip, r0
 1309              	.LBE388:
 1310              	.LBE387:
 1311              	.LBE386:
 1312              	.LBE385:
 1313              	.LBE384:
 226:src/TTrack.cpp ****     int numCombElements = 4;
 1314              		.loc 1 226 1 view .LVU352
 1315 000c 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1316              		.cfi_def_cfa_offset 28
 1317              		.cfi_offset 4, -28
 1318              		.cfi_offset 5, -24
 1319              		.cfi_offset 6, -20
 1320              		.cfi_offset 7, -16
 1321              		.cfi_offset 8, -12
 1322              		.cfi_offset 9, -8
 1323              		.cfi_offset 14, -4
 1324 0010 6FF00309 		mvn	r9, #3
 1325 0014 00F59157 		add	r7, r0, #4640
 1326 0018 C3F10408 		rsb	r8, r3, #4
 1327 001c 181D     		adds	r0, r3, #4
 1328              	.LVL100:
 226:src/TTrack.cpp ****     int numCombElements = 4;
 1329              		.loc 1 226 1 view .LVU353
 1330 001e A9EB0309 		sub	r9, r9, r3
 1331              	.LVL101:
 1332              	.L84:
 1333              	.LBB394:
 1334              	.LBB392:
 230:src/TTrack.cpp ****     {
 231:src/TTrack.cpp ****         for (int a = 1; a <= numCombElements; a++)
 1335              		.loc 1 231 27 is_stmt 1 view .LVU354
 1336              	.LBB390:
 232:src/TTrack.cpp ****         {
 233:src/TTrack.cpp ****             for (int b = 1 - a; b <= a - 1; b++)
 234:src/TTrack.cpp ****             {
 235:src/TTrack.cpp ****                 combFilterBankOutput[i - 1] += (acf[(a * i + b) - 1] * weightingVector[i - 1]) / (2
 1337              		.loc 1 235 45 is_stmt 0 view .LVU355
 1338 0022 B0EC017A 		vldmia.32	r0!, {s14}
 1339 0026 ACF60C04 		subw	r4, ip, #2060
 1340 002a ACF60801 		subw	r1, ip, #2056
 1341 002e 4FF0000E 		mov	lr, #0
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 86


 1342 0032 09EB0006 		add	r6, r9, r0
 1343 0036 08EB0005 		add	r5, r8, r0
 1344              	.LVL102:
 1345              	.L83:
 1346              		.loc 1 235 45 view .LVU356
 1347              	.LBE390:
 1348              	.LBE392:
 1349              	.LBE394:
 233:src/TTrack.cpp ****             {
 1350              		.loc 1 233 13 is_stmt 1 view .LVU357
 1351              	.LBB395:
 1352              	.LBB393:
 1353              	.LBB391:
 233:src/TTrack.cpp ****             {
 1354              		.loc 1 233 35 view .LVU358
 1355              		.loc 1 235 96 is_stmt 0 view .LVU359
 1356 003a CEEBCE72 		rsb	r2, lr, lr, lsl #31
 1357 003e 2346     		mov	r3, r4
 1358 0040 5200     		lsls	r2, r2, #1
 1359 0042 0132     		adds	r2, r2, #1
 1360 0044 07EE902A 		vmov	s15, r2	@ int
 1361 0048 F8EEE76A 		vcvt.f32.s32	s13, s15
 1362              	.LVL103:
 1363              	.L82:
 1364              		.loc 1 235 17 is_stmt 1 discriminator 2 view .LVU360
 1365              		.loc 1 235 70 is_stmt 0 discriminator 2 view .LVU361
 1366 004c F3EC017A 		vldmia.32	r3!, {s15}
 1367              	.LVL104:
 1368              	.LBB389:
 1369              	.LBI387:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1370              		.loc 4 1043 7 is_stmt 1 discriminator 2 view .LVU362
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1371              		.loc 4 1043 7 is_stmt 0 discriminator 2 view .LVU363
 1372              	.LBE389:
 1373              		.loc 1 235 70 discriminator 2 view .LVU364
 1374 0050 9CED006A 		vldr.32	s12, [ip]
 233:src/TTrack.cpp ****             {
 1375              		.loc 1 233 35 discriminator 2 view .LVU365
 1376 0054 9942     		cmp	r1, r3
 1377              		.loc 1 235 70 discriminator 2 view .LVU366
 1378 0056 67EE867A 		vmul.f32	s15, s15, s12
 1379              		.loc 1 235 96 discriminator 2 view .LVU367
 1380 005a 87EEA66A 		vdiv.f32	s12, s15, s13
 1381              		.loc 1 235 45 discriminator 2 view .LVU368
 1382 005e 37EE067A 		vadd.f32	s14, s14, s12
 1383 0062 00ED017A 		vstr.32	s14, [r0, #-4]
 233:src/TTrack.cpp ****             {
 1384              		.loc 1 233 13 is_stmt 1 discriminator 2 view .LVU369
 233:src/TTrack.cpp ****             {
 1385              		.loc 1 233 35 discriminator 2 view .LVU370
 1386 0066 F1D1     		bne	.L82
 1387              	.LBE391:
 231:src/TTrack.cpp ****         {
 1388              		.loc 1 231 9 discriminator 2 view .LVU371
 1389              	.LVL105:
 231:src/TTrack.cpp ****         {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 87


 1390              		.loc 1 231 27 discriminator 2 view .LVU372
 1391 0068 0EF1FF3E 		add	lr, lr, #-1
 1392              	.LVL106:
 231:src/TTrack.cpp ****         {
 1393              		.loc 1 231 27 is_stmt 0 discriminator 2 view .LVU373
 1394 006c 3444     		add	r4, r4, r6
 1395 006e 2944     		add	r1, r1, r5
 1396 0070 1EF1040F 		cmn	lr, #4
 1397 0074 E1D1     		bne	.L83
 1398              	.LBE393:
 229:src/TTrack.cpp ****     {
 1399              		.loc 1 229 5 is_stmt 1 discriminator 2 view .LVU374
 229:src/TTrack.cpp ****     {
 1400              		.loc 1 229 23 discriminator 2 view .LVU375
 1401 0076 0CF1040C 		add	ip, ip, #4
 1402 007a BC45     		cmp	ip, r7
 1403 007c D1D1     		bne	.L84
 1404              	.LBE395:
 236:src/TTrack.cpp ****             }
 237:src/TTrack.cpp ****         }
 238:src/TTrack.cpp ****     }
 239:src/TTrack.cpp **** }
 1405              		.loc 1 239 1 is_stmt 0 view .LVU376
 1406 007e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1407              		.loc 1 239 1 view .LVU377
 1408              		.cfi_endproc
 1409              	.LFE4748:
 1411 0082 00BF     		.section	.text._ZN6TTrack14calculateTempoEv,"ax",%progbits
 1412              		.align	1
 1413              		.p2align 2,,3
 1414              		.global	_ZN6TTrack14calculateTempoEv
 1415              		.syntax unified
 1416              		.thumb
 1417              		.thumb_func
 1418              		.fpu fpv5-d16
 1420              	_ZN6TTrack14calculateTempoEv:
 1421              	.LVL107:
 1422              	.LFB4741:
  72:src/TTrack.cpp ****     float tempoToLagFactor = 60.0f * 44100.0f / 512.0f;
 1423              		.loc 1 72 1 is_stmt 1 view -0
 1424              		.cfi_startproc
 1425              		@ args = 0, pretend = 0, frame = 0
 1426              		@ frame_needed = 0, uses_anonymous_args = 0
  73:src/TTrack.cpp ****     for (int i = 0; i < 512; i++)
 1427              		.loc 1 73 5 view .LVU379
  74:src/TTrack.cpp ****     {
 1428              		.loc 1 74 5 view .LVU380
 1429              	.LBB436:
  74:src/TTrack.cpp ****     {
 1430              		.loc 1 74 23 view .LVU381
 1431              	.LBE436:
  72:src/TTrack.cpp ****     float tempoToLagFactor = 60.0f * 44100.0f / 512.0f;
 1432              		.loc 1 72 1 is_stmt 0 view .LVU382
 1433 0000 70B5     		push	{r4, r5, r6, lr}
 1434              		.cfi_def_cfa_offset 16
 1435              		.cfi_offset 4, -16
 1436              		.cfi_offset 5, -12
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 88


 1437              		.cfi_offset 6, -8
 1438              		.cfi_offset 14, -4
 1439              	.LBB445:
 1440              	.LBB437:
 1441              	.LBB438:
 1442              		.loc 4 1046 25 view .LVU383
 1443 0002 00F58055 		add	r5, r0, #4096
 1444              	.LBE438:
 1445              	.LBE437:
 1446              	.LBE445:
  72:src/TTrack.cpp ****     float tempoToLagFactor = 60.0f * 44100.0f / 512.0f;
 1447              		.loc 1 72 1 view .LVU384
 1448 0006 0446     		mov	r4, r0
 1449              	.LBB446:
 1450              	.LBB439:
 1451              	.LBB440:
 855:./lib/etl/include/etl/circular_buffer.h ****     }
 1452              		.loc 3 855 14 view .LVU385
 1453 0008 0669     		ldr	r6, [r0, #16]
 1454 000a D5F81014 		ldr	r1, [r5, #1040]
 855:./lib/etl/include/etl/circular_buffer.h ****     }
 1455              		.loc 3 855 23 view .LVU386
 1456 000e 8268     		ldr	r2, [r0, #8]
 1457 0010 01F5006C 		add	ip, r1, #2048
 855:./lib/etl/include/etl/circular_buffer.h ****     }
 1458              		.loc 3 855 38 view .LVU387
 1459 0014 0068     		ldr	r0, [r0]
 1460              	.LVL108:
 1461              	.L90:
 855:./lib/etl/include/etl/circular_buffer.h ****     }
 1462              		.loc 3 855 38 view .LVU388
 1463              	.LBE440:
 1464              	.LBE439:
  76:src/TTrack.cpp ****     }
 1465              		.loc 1 76 9 is_stmt 1 discriminator 2 view .LVU389
 1466              	.LBB442:
 1467              	.LBI439:
 853:./lib/etl/include/etl/circular_buffer.h ****     {
 1468              		.loc 3 853 15 discriminator 2 view .LVU390
 853:./lib/etl/include/etl/circular_buffer.h ****     {
 1469              		.loc 3 853 15 is_stmt 0 discriminator 2 view .LVU391
 1470              	.LBE442:
 1471              	.LBB443:
 1472              	.LBI437:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1473              		.loc 4 1043 7 is_stmt 1 discriminator 2 view .LVU392
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1474              		.loc 4 1043 7 is_stmt 0 discriminator 2 view .LVU393
 1475              	.LBE443:
 1476              	.LBB444:
 1477              	.LBB441:
 855:./lib/etl/include/etl/circular_buffer.h ****     }
 1478              		.loc 3 855 36 discriminator 2 view .LVU394
 1479 0016 B2FBF0F3 		udiv	r3, r2, r0
 1480 001a 00FB1323 		mls	r3, r0, r3, r2
 1481              	.LBE441:
 1482              	.LBE444:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 89


  76:src/TTrack.cpp ****     }
 1483              		.loc 1 76 29 discriminator 2 view .LVU395
 1484 001e 0132     		adds	r2, r2, #1
 1485 0020 06EB8303 		add	r3, r6, r3, lsl #2
 1486 0024 1B68     		ldr	r3, [r3]	@ float
 1487 0026 41F8043B 		str	r3, [r1], #4	@ float
  74:src/TTrack.cpp ****     {
 1488              		.loc 1 74 5 is_stmt 1 discriminator 2 view .LVU396
 1489              	.LVL109:
  74:src/TTrack.cpp ****     {
 1490              		.loc 1 74 23 discriminator 2 view .LVU397
 1491 002a 8C45     		cmp	ip, r1
 1492 002c F3D1     		bne	.L90
 1493              	.LBE446:
  79:src/TTrack.cpp ****     calculateBalancedACF(onsetDFResampled);
 1494              		.loc 1 79 5 view .LVU398
  79:src/TTrack.cpp ****     calculateBalancedACF(onsetDFResampled);
 1495              		.loc 1 79 23 is_stmt 0 view .LVU399
 1496 002e 41F21046 		movw	r6, #5136
  79:src/TTrack.cpp ****     calculateBalancedACF(onsetDFResampled);
 1497              		.loc 1 79 22 view .LVU400
 1498 0032 2046     		mov	r0, r4
  79:src/TTrack.cpp ****     calculateBalancedACF(onsetDFResampled);
 1499              		.loc 1 79 23 view .LVU401
 1500 0034 2644     		add	r6, r6, r4
  79:src/TTrack.cpp ****     calculateBalancedACF(onsetDFResampled);
 1501              		.loc 1 79 22 view .LVU402
 1502 0036 3146     		mov	r1, r6
 1503 0038 FFF7FEFF 		bl	_ZN6TTrack17adaptiveThresholdERSt6vectorIfSaIfEE
 1504              	.LVL110:
  80:src/TTrack.cpp ****     calculateCombFilterBankOutput();
 1505              		.loc 1 80 5 is_stmt 1 view .LVU403
  80:src/TTrack.cpp ****     calculateCombFilterBankOutput();
 1506              		.loc 1 80 25 is_stmt 0 view .LVU404
 1507 003c 3146     		mov	r1, r6
 1508 003e 2046     		mov	r0, r4
 1509 0040 FFF7FEFF 		bl	_ZN6TTrack20calculateBalancedACFERSt6vectorIfSaIfEE
 1510              	.LVL111:
  81:src/TTrack.cpp ****     adaptiveThreshold(combFilterBankOutput);
 1511              		.loc 1 81 5 is_stmt 1 view .LVU405
  81:src/TTrack.cpp ****     adaptiveThreshold(combFilterBankOutput);
 1512              		.loc 1 81 34 is_stmt 0 view .LVU406
 1513 0044 2046     		mov	r0, r4
 1514 0046 FFF7FEFF 		bl	_ZN6TTrack29calculateCombFilterBankOutputEv
 1515              	.LVL112:
  82:src/TTrack.cpp **** 
 1516              		.loc 1 82 5 is_stmt 1 view .LVU407
  82:src/TTrack.cpp **** 
 1517              		.loc 1 82 22 is_stmt 0 view .LVU408
 1518 004a 41F21801 		movw	r1, #4120
 1519 004e 2046     		mov	r0, r4
 1520 0050 2144     		add	r1, r1, r4
 1521 0052 FFF7FEFF 		bl	_ZN6TTrack17adaptiveThresholdERSt6vectorIfSaIfEE
 1522              	.LVL113:
  84:src/TTrack.cpp ****     {
 1523              		.loc 1 84 5 is_stmt 1 view .LVU409
 1524              	.LBB447:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 90


  84:src/TTrack.cpp ****     {
 1525              		.loc 1 84 23 view .LVU410
 1526 0056 41F26C31 		movw	r1, #4972
 1527              	.LBB448:
 1528              	.LBB449:
 1529              	.LBB450:
 1530              		.loc 4 1046 25 is_stmt 0 view .LVU411
 1531 005a AE69     		ldr	r6, [r5, #24]
 1532 005c 5220     		movs	r0, #82
 1533 005e 2144     		add	r1, r1, r4
 1534 0060 9FED567A 		vldr.32	s14, .L116
 1535 0064 DFED567A 		vldr.32	s15, .L116+4
 1536 0068 8C46     		mov	ip, r1
 1537 006a 10E0     		b	.L92
 1538              	.LVL114:
 1539              	.L115:
 1540              		.loc 4 1046 25 view .LVU412
 1541              	.LBE450:
 1542              	.LBE449:
  86:src/TTrack.cpp ****         int tempoIndex2 = (int) round (tempoToLagFactor / ((float) ((4*i) + 160)));
 1543              		.loc 1 86 60 view .LVU413
 1544 006c 07EE900A 		vmov	s15, r0	@ int
 1545 0070 0230     		adds	r0, r0, #2
 1546 0072 B8EEE76A 		vcvt.f32.s32	s12, s15
  87:src/TTrack.cpp ****         tempoObservationVector[i] = combFilterBankOutput[tempoIndex1 - 1] + combFilterBankOutput[te
 1547              		.loc 1 87 60 view .LVU414
 1548 0076 07EE905A 		vmov	s15, r5	@ int
 1549 007a B8EEE77A 		vcvt.f32.s32	s14, s15
  87:src/TTrack.cpp ****         tempoObservationVector[i] = combFilterBankOutput[tempoIndex1 - 1] + combFilterBankOutput[te
 1550              		.loc 1 87 39 view .LVU415
 1551 007e C6EE877A 		vdiv.f32	s15, s13, s14
  86:src/TTrack.cpp ****         int tempoIndex2 = (int) round (tempoToLagFactor / ((float) ((4*i) + 160)));
 1552              		.loc 1 86 39 view .LVU416
 1553 0082 86EE867A 		vdiv.f32	s14, s13, s12
 1554              	.LBB451:
 1555              	.LBB452:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sqrt(long double __x)
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sqrtl(__x); }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     sqrt(_Tp __x)
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_sqrt(__x); }
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::tan;
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   tan(float __x)
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_tanf(__x); }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 91


 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   tan(long double __x)
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_tanl(__x); }
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     tan(_Tp __x)
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_tan(__x); }
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::tanh;
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   tanh(float __x)
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_tanhf(__x); }
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   tanh(long double __x)
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_tanhl(__x); }
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     tanh(_Tp __x)
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_tanh(__x); }
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if _GLIBCXX_USE_C99_MATH
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // These are possible macros imported from C99-land.
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fpclassify
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isfinite
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isinf
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isnan
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isnormal
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef signbit
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isgreater
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isgreaterequal
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isless
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef islessequal
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef islessgreater
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef isunordered
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if __cplusplus >= 201103L
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr int
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fpclassify(float __x)
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr int
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fpclassify(double __x)
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 92


 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr int
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fpclassify(long double __x)
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               int>::__type
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fpclassify(_Tp __x)
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isfinite(float __x)
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isfinite(__x); }
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isfinite(double __x)
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isfinite(__x); }
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isfinite(long double __x)
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isfinite(__x); }
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               bool>::__type
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isfinite(_Tp __x)
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return true; }
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isinf(float __x)
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isinf(__x); }
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::isinf;
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #else
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isinf(double __x)
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isinf(__x); }
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isinf(long double __x)
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isinf(__x); }
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 93


 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               bool>::__type
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isinf(_Tp __x)
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return false; }
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnan(float __x)
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnan(__x); }
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::isnan;
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #else
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnan(double __x)
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnan(__x); }
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnan(long double __x)
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnan(__x); }
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               bool>::__type
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isnan(_Tp __x)
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return false; }
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnormal(float __x)
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnormal(__x); }
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnormal(double __x)
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnormal(__x); }
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isnormal(long double __x)
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isnormal(__x); }
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               bool>::__type
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isnormal(_Tp __x)
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __x != 0 ? true : false; }
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 94


 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   signbit(float __x)
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_signbit(__x); }
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   signbit(double __x)
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_signbit(__x); }
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   signbit(long double __x)
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_signbit(__x); }
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               bool>::__type
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     signbit(_Tp __x)
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __x < 0 ? true : false; }
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreater(float __x, float __y)
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreater(double __x, double __y)
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreater(long double __x, long double __y)
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreater(__x, __y); }
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isgreater(_Tp __x, _Up __y)
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreaterequal(float __x, float __y)
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreaterequal(double __x, double __y)
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 95


 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isgreaterequal(long double __x, long double __y)
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isless(float __x, float __y)
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isless(__x, __y); }
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isless(double __x, double __y)
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isless(__x, __y); }
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isless(long double __x, long double __y)
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isless(__x, __y); }
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isless(_Tp __x, _Up __y)
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessequal(float __x, float __y)
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessequal(__x, __y); }
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessequal(double __x, double __y)
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessequal(__x, __y); }
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessequal(long double __x, long double __y)
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessequal(__x, __y); }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 96


 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     islessequal(_Tp __x, _Up __y)
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessgreater(float __x, float __y)
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessgreater(double __x, double __y)
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   islessgreater(long double __x, long double __y)
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     islessgreater(_Tp __x, _Up __y)
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isunordered(float __x, float __y)
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isunordered(double __x, double __y)
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr bool
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   isunordered(long double __x, long double __y)
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_isunordered(__x, __y); }
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 97


 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isunordered(_Tp __x, _Up __y)
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #else
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fpclassify(_Tp __f)
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isfinite(_Tp __f)
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isfinite(__type(__f));
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isinf(_Tp __f)
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isinf(__type(__f));
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isnan(_Tp __f)
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isnan(__type(__f));
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isnormal(_Tp __f)
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isnormal(__type(__f));
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 98


 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     signbit(_Tp __f)
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_signbit(__type(__f));
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isless(_Tp __f1, _Tp __f2)
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 					   int>::__type
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 99


 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif // C++11
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if __cplusplus >= 201103L
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acosh
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acoshf
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acoshl
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asinh
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asinhf
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asinhl
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atanh
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atanhf
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atanhl
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cbrt
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cbrtf
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cbrtl
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef copysign
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef copysignf
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef copysignl
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erf
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erff
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erfl
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erfc
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erfcf
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef erfcl
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp2
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp2f
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp2l
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef expm1
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef expm1f
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef expm1l
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fdim
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fdimf
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fdiml
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fma
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmaf
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmal
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmax
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmaxf
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmaxl
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmin
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fminf
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fminl
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef hypot
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef hypotf
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef hypotl
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ilogb
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 100


 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ilogbf
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ilogbl
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lgamma
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lgammaf
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lgammal
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llrint
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llrintf
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llrintl
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llround
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llroundf
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef llroundl
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log1p
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log1pf
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log1pl
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log2
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log2f
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log2l
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef logb
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef logbf
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef logbl
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lrint
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lrintf
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lrintl
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lround
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lroundf
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef lroundl
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nan
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nanf
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nanl
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nearbyint
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nearbyintf
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nearbyintl
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nextafter
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nextafterf
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nextafterl
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nexttoward
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nexttowardf
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef nexttowardl
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remainder
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remainderf
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remainderl
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remquo
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remquof
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef remquol
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef rint
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef rintf
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef rintl
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef round
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef roundf
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef roundl
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalbln
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalblnf
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalblnl
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalbn
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalbnf
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 101


1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef scalbnl
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tgamma
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tgammaf
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tgammal
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef trunc
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef truncf
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef truncl
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // types
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::double_t;
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::float_t;
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // functions
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acosh;
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acoshf;
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acoshl;
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asinh;
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asinhf;
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asinhl;
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atanh;
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atanhf;
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atanhl;
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cbrt;
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cbrtf;
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cbrtl;
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::copysign;
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::copysignf;
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::copysignl;
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erf;
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erff;
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erfl;
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erfc;
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erfcf;
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::erfcl;
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp2;
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp2f;
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp2l;
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::expm1;
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::expm1f;
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::expm1l;
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fdim;
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fdimf;
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fdiml;
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fma;
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmaf;
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmal;
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 102


1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmax;
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmaxf;
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmaxl;
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmin;
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fminf;
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fminl;
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::hypot;
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::hypotf;
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::hypotl;
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ilogb;
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ilogbf;
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ilogbl;
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lgamma;
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lgammaf;
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lgammal;
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llrint;
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llrintf;
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llrintl;
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llround;
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llroundf;
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::llroundl;
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log1p;
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log1pf;
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log1pl;
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log2;
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log2f;
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log2l;
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::logb;
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::logbf;
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::logbl;
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lrint;
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lrintf;
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lrintl;
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lround;
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lroundf;
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::lroundl;
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nan;
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nanf;
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nanl;
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nearbyint;
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nearbyintf;
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nearbyintl;
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 103


1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nextafter;
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nextafterf;
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nextafterl;
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nexttoward;
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nexttowardf;
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::nexttowardl;
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remainder;
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remainderf;
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remainderl;
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remquo;
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remquof;
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::remquol;
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::rint;
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::rintf;
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::rintl;
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::round;
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::roundf;
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::roundl;
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalbln;
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalblnf;
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalblnl;
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalbn;
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalbnf;
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::scalbnl;
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::tgamma;
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::tgammaf;
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::tgammal;
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::trunc;
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::truncf;
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::truncl;
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   /// Additional overloads.
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acosh(float __x)
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acoshf(__x); }
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acosh(long double __x)
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acoshl(__x); }
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     acosh(_Tp __x)
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 104


1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_acosh(__x); }
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asinh(float __x)
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinhf(__x); }
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asinh(long double __x)
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinhl(__x); }
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     asinh(_Tp __x)
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_asinh(__x); }
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atanh(float __x)
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanhf(__x); }
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atanh(long double __x)
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanhl(__x); }
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     atanh(_Tp __x)
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_atanh(__x); }
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cbrt(float __x)
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cbrtf(__x); }
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cbrt(long double __x)
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cbrtl(__x); }
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     cbrt(_Tp __x)
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cbrt(__x); }
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 105


1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   copysign(float __x, float __y)
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_copysignf(__x, __y); }
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   copysign(long double __x, long double __y)
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_copysignl(__x, __y); }
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     copysign(_Tp __x, _Up __y)
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return copysign(__type(__x), __type(__y));
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   erf(float __x)
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_erff(__x); }
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   erf(long double __x)
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_erfl(__x); }
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     erf(_Tp __x)
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_erf(__x); }
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   erfc(float __x)
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_erfcf(__x); }
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   erfc(long double __x)
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_erfcl(__x); }
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     erfc(_Tp __x)
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_erfc(__x); }
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 106


1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp2(float __x)
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_exp2f(__x); }
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp2(long double __x)
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_exp2l(__x); }
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     exp2(_Tp __x)
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_exp2(__x); }
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   expm1(float __x)
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expm1f(__x); }
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   expm1(long double __x)
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expm1l(__x); }
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     expm1(_Tp __x)
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_expm1(__x); }
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fdim(float __x, float __y)
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fdimf(__x, __y); }
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fdim(long double __x, long double __y)
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fdiml(__x, __y); }
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fdim(_Tp __x, _Up __y)
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fdim(__type(__x), __type(__y));
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 107


1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fma(float __x, float __y, float __z)
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fma(long double __x, long double __y, long double __z)
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmax(float __x, float __y)
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmax(long double __x, long double __y)
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fmax(_Tp __x, _Up __y)
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fmax(__type(__x), __type(__y));
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmin(float __x, float __y)
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fminf(__x, __y); }
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmin(long double __x, long double __y)
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fminl(__x, __y); }
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fmin(_Tp __x, _Up __y)
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fmin(__type(__x), __type(__y));
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 108


1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   hypot(float __x, float __y)
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_hypotf(__x, __y); }
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   hypot(long double __x, long double __y)
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_hypotl(__x, __y); }
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     hypot(_Tp __x, _Up __y)
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return hypot(__type(__x), __type(__y));
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr int
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ilogb(float __x)
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ilogbf(__x); }
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr int
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ilogb(long double __x)
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ilogbl(__x); }
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     int>::__type
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     ilogb(_Tp __x)
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ilogb(__x); }
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   lgamma(float __x)
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_lgammaf(__x); }
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   lgamma(long double __x)
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_lgammal(__x); }
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     lgamma(_Tp __x)
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_lgamma(__x); }
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 109


1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long long
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   llrint(float __x)
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_llrintf(__x); }
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long long
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   llrint(long double __x)
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_llrintl(__x); }
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               long long>::__type
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     llrint(_Tp __x)
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_llrint(__x); }
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long long
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   llround(float __x)
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_llroundf(__x); }
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long long
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   llround(long double __x)
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_llroundl(__x); }
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               long long>::__type
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     llround(_Tp __x)
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_llround(__x); }
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log1p(float __x)
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log1pf(__x); }
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log1p(long double __x)
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log1pl(__x); }
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log1p(_Tp __x)
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log1p(__x); }
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // DR 568.
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 110


1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log2(float __x)
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log2f(__x); }
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log2(long double __x)
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log2l(__x); }
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log2(_Tp __x)
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log2(__x); }
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   logb(float __x)
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logbf(__x); }
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   logb(long double __x)
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logbl(__x); }
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     logb(_Tp __x)
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_logb(__x); }
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   lrint(float __x)
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_lrintf(__x); }
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   lrint(long double __x)
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_lrintl(__x); }
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               long>::__type
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     lrint(_Tp __x)
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_lrint(__x); }
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   lround(float __x)
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_lroundf(__x); }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 111


1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   lround(long double __x)
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_lroundl(__x); }
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               long>::__type
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     lround(_Tp __x)
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_lround(__x); }
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   nearbyint(float __x)
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_nearbyintf(__x); }
1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   nearbyint(long double __x)
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_nearbyintl(__x); }
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     nearbyint(_Tp __x)
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_nearbyint(__x); }
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   nextafter(float __x, float __y)
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   nextafter(long double __x, long double __y)
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     nextafter(_Tp __x, _Up __y)
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return nextafter(__type(__x), __type(__y));
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   nexttoward(float __x, long double __y)
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 112


1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   nexttoward(long double __x, long double __y)
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     nexttoward(_Tp __x, long double __y)
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   remainder(float __x, float __y)
1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_remainderf(__x, __y); }
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   remainder(long double __x, long double __y)
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_remainderl(__x, __y); }
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     remainder(_Tp __x, _Up __y)
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return remainder(__type(__x), __type(__y));
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   remquo(float __x, float __y, int* __pquo)
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   rint(float __x)
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_rintf(__x); }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 113


1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr long double
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   rint(long double __x)
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_rintl(__x); }
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                               double>::__type
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     rint(_Tp __x)
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_rint(__x); }
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   constexpr float
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   round(float __x)
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_roundf(__x); }
 1556              		.loc 2 1757 28 view .LVU417
 1557 0086 F8FE677A 		vrinta.f32	s15, s15
 1558              	.LBE452:
 1559              	.LBE451:
 1560              	.LBB454:
 1561              	.LBB455:
 1562 008a B8FE477A 		vrinta.f32	s14, s14
 1563              	.L92:
 1564              		.loc 2 1757 28 view .LVU418
 1565              	.LBE455:
 1566              	.LBE454:
  86:src/TTrack.cpp ****         int tempoIndex2 = (int) round (tempoToLagFactor / ((float) ((4*i) + 160)));
 1567              		.loc 1 86 9 is_stmt 1 discriminator 2 view .LVU419
 1568              	.LVL115:
 1569              	.LBB457:
 1570              	.LBI454:
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_roundf(__x); }
 1571              		.loc 2 1756 3 discriminator 2 view .LVU420
 1572              	.LBB456:
 1573              		.loc 2 1757 5 discriminator 2 view .LVU421
 1574              		.loc 2 1757 5 is_stmt 0 discriminator 2 view .LVU422
 1575              	.LBE456:
 1576              	.LBE457:
  87:src/TTrack.cpp ****         tempoObservationVector[i] = combFilterBankOutput[tempoIndex1 - 1] + combFilterBankOutput[te
 1577              		.loc 1 87 9 is_stmt 1 discriminator 2 view .LVU423
 1578              	.LBB458:
 1579              	.LBI451:
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_roundf(__x); }
 1580              		.loc 2 1756 3 discriminator 2 view .LVU424
 1581              	.LBB453:
 1582              		.loc 2 1757 5 discriminator 2 view .LVU425
 1583              		.loc 2 1757 5 is_stmt 0 discriminator 2 view .LVU426
 1584              	.LBE453:
 1585              	.LBE458:
  88:src/TTrack.cpp ****     }
 1586              		.loc 1 88 9 is_stmt 1 discriminator 2 view .LVU427
 1587              	.LBB459:
 1588              	.LBI449:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 114


 1589              		.loc 4 1043 7 discriminator 2 view .LVU428
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1590              		.loc 4 1043 7 is_stmt 0 discriminator 2 view .LVU429
 1591              	.LBE459:
 1592              	.LBB460:
 1593              	.LBI460:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1594              		.loc 4 1043 7 is_stmt 1 discriminator 2 view .LVU430
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1595              		.loc 4 1043 7 is_stmt 0 discriminator 2 view .LVU431
 1596              	.LBE460:
  86:src/TTrack.cpp ****         int tempoIndex2 = (int) round (tempoToLagFactor / ((float) ((4*i) + 160)));
 1597              		.loc 1 86 81 discriminator 2 view .LVU432
 1598 008e BDEEC77A 		vcvt.s32.f32	s14, s14
 1599              	.LVL116:
  86:src/TTrack.cpp ****         int tempoIndex2 = (int) round (tempoToLagFactor / ((float) ((4*i) + 160)));
 1600              		.loc 1 86 81 discriminator 2 view .LVU433
 1601              	.LBE448:
  84:src/TTrack.cpp ****     {
 1602              		.loc 1 84 23 discriminator 2 view .LVU434
 1603 0092 A228     		cmp	r0, #162
 1604              	.LBB461:
  87:src/TTrack.cpp ****         tempoObservationVector[i] = combFilterBankOutput[tempoIndex1 - 1] + combFilterBankOutput[te
 1605              		.loc 1 87 82 discriminator 2 view .LVU435
 1606 0094 FDEEE77A 		vcvt.s32.f32	s15, s15
 1607              	.LVL117:
  87:src/TTrack.cpp ****         tempoObservationVector[i] = combFilterBankOutput[tempoIndex1 - 1] + combFilterBankOutput[te
 1608              		.loc 1 87 75 discriminator 2 view .LVU436
 1609 0098 4FEA4005 		lsl	r5, r0, #1
  87:src/TTrack.cpp ****         tempoObservationVector[i] = combFilterBankOutput[tempoIndex1 - 1] + combFilterBankOutput[te
 1610              		.loc 1 87 39 discriminator 2 view .LVU437
 1611 009c DFED496A 		vldr.32	s13, .L116+8
  86:src/TTrack.cpp ****         int tempoIndex2 = (int) round (tempoToLagFactor / ((float) ((4*i) + 160)));
 1612              		.loc 1 86 81 discriminator 2 view .LVU438
 1613 00a0 17EE102A 		vmov	r2, s14	@ int
  87:src/TTrack.cpp ****         tempoObservationVector[i] = combFilterBankOutput[tempoIndex1 - 1] + combFilterBankOutput[te
 1614              		.loc 1 87 82 discriminator 2 view .LVU439
 1615 00a4 17EE903A 		vmov	r3, s15	@ int
  88:src/TTrack.cpp ****     }
 1616              		.loc 1 88 75 discriminator 2 view .LVU440
 1617 00a8 06EB8202 		add	r2, r6, r2, lsl #2
 1618 00ac 06EB8303 		add	r3, r6, r3, lsl #2
 1619 00b0 52ED017A 		vldr.32	s15, [r2, #-4]
 1620 00b4 13ED017A 		vldr.32	s14, [r3, #-4]
 1621 00b8 77EE877A 		vadd.f32	s15, s15, s14
  88:src/TTrack.cpp ****     }
 1622              		.loc 1 88 35 discriminator 2 view .LVU441
 1623 00bc ECEC017A 		vstmia.32	ip!, {s15}
 1624              	.LBE461:
  84:src/TTrack.cpp ****     {
 1625              		.loc 1 84 5 is_stmt 1 discriminator 2 view .LVU442
  84:src/TTrack.cpp ****     {
 1626              		.loc 1 84 23 discriminator 2 view .LVU443
 1627 00c0 D4D1     		bne	.L115
 1628 00c2 41F2242E 		movw	lr, #4644
 1629 00c6 41F2C820 		movw	r0, #4808
 1630 00ca A644     		add	lr, lr, r4
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 115


 1631 00cc 2044     		add	r0, r0, r4
  84:src/TTrack.cpp ****     {
 1632              		.loc 1 84 23 is_stmt 0 view .LVU444
 1633 00ce F446     		mov	ip, lr
 1634              	.L96:
 1635              	.LVL118:
  84:src/TTrack.cpp ****     {
 1636              		.loc 1 84 23 view .LVU445
 1637              	.LBE447:
 1638              	.LBB462:
 1639              	.LBB463:
 1640              	.LBB464:
  95:src/TTrack.cpp ****         {
 1641              		.loc 1 95 27 is_stmt 1 view .LVU446
 1642 00d0 42F22822 		movw	r2, #8744
 1643              	.LBE464:
  93:src/TTrack.cpp **** 
 1644              		.loc 1 93 15 is_stmt 0 view .LVU447
 1645 00d4 BFEE007A 		vmov.f32	s14, #-1.0e+0
 1646 00d8 0546     		mov	r5, r0
 1647              	.LBE463:
 1648              	.LBE462:
 1649              	.LBB468:
  84:src/TTrack.cpp ****     {
 1650              		.loc 1 84 23 view .LVU448
 1651 00da 0346     		mov	r3, r0
 1652 00dc 6244     		add	r2, r2, ip
 1653              	.LVL119:
 1654              	.L95:
  84:src/TTrack.cpp ****     {
 1655              		.loc 1 84 23 view .LVU449
 1656              	.LBE468:
 1657              	.LBB469:
 1658              	.LBB467:
 1659              	.LBB466:
 1660              	.LBB465:
  97:src/TTrack.cpp ****             if (currentValue > maxValue)
 1661              		.loc 1 97 13 is_stmt 1 view .LVU450
  97:src/TTrack.cpp ****             if (currentValue > maxValue)
 1662              		.loc 1 97 75 is_stmt 0 view .LVU451
 1663 00de 1646     		mov	r6, r2
  97:src/TTrack.cpp ****             if (currentValue > maxValue)
 1664              		.loc 1 97 47 view .LVU452
 1665 00e0 F3EC017A 		vldmia.32	r3!, {s15}
  97:src/TTrack.cpp ****             if (currentValue > maxValue)
 1666              		.loc 1 97 75 view .LVU453
 1667 00e4 A432     		adds	r2, r2, #164
 1668 00e6 D6ED006A 		vldr.32	s13, [r6]
 1669 00ea 67EEA67A 		vmul.f32	s15, s15, s13
 1670              	.LVL120:
  98:src/TTrack.cpp ****             {
 1671              		.loc 1 98 13 is_stmt 1 view .LVU454
 100:src/TTrack.cpp ****             }
 1672              		.loc 1 100 26 is_stmt 0 view .LVU455
 1673 00ee F4EE477A 		vcmp.f32	s15, s14
 1674 00f2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1675 00f6 37FE877A 		vselgt.f32	s14, s15, s14
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 116


 1676              	.LVL121:
 100:src/TTrack.cpp ****             }
 1677              		.loc 1 100 26 view .LVU456
 1678              	.LBE465:
  95:src/TTrack.cpp ****         {
 1679              		.loc 1 95 9 is_stmt 1 view .LVU457
  95:src/TTrack.cpp ****         {
 1680              		.loc 1 95 27 view .LVU458
 1681 00fa 9942     		cmp	r1, r3
 1682 00fc EFD1     		bne	.L95
 1683              	.LBE466:
 103:src/TTrack.cpp ****     }
 1684              		.loc 1 103 9 discriminator 2 view .LVU459
 103:src/TTrack.cpp ****     }
 1685              		.loc 1 103 46 is_stmt 0 discriminator 2 view .LVU460
 1686 00fe DCED527A 		vldr.32	s15, [ip, #328]
 1687              	.LVL122:
 103:src/TTrack.cpp ****     }
 1688              		.loc 1 103 46 discriminator 2 view .LVU461
 1689 0102 27EE877A 		vmul.f32	s14, s15, s14
 1690              	.LVL123:
 103:src/TTrack.cpp ****     }
 1691              		.loc 1 103 18 discriminator 2 view .LVU462
 1692 0106 ACEC017A 		vstmia.32	ip!, {s14}
 1693              	.LVL124:
 103:src/TTrack.cpp ****     }
 1694              		.loc 1 103 18 discriminator 2 view .LVU463
 1695              	.LBE467:
  91:src/TTrack.cpp ****     {
 1696              		.loc 1 91 5 is_stmt 1 discriminator 2 view .LVU464
  91:src/TTrack.cpp ****     {
 1697              		.loc 1 91 23 discriminator 2 view .LVU465
 1698 010a 6045     		cmp	r0, ip
 1699 010c E0D1     		bne	.L96
 1700 010e 7346     		mov	r3, lr
 1701              	.LBE469:
 1702              	.LBB470:
 1703              	.LBB471:
 173:src/TTrack.cpp **** 
 1704              		.loc 1 173 11 is_stmt 0 view .LVU466
 1705 0110 DFED2D7A 		vldr.32	s15, .L116+12
 1706              	.L97:
 1707              	.LVL125:
 1708              	.LBB472:
 177:src/TTrack.cpp ****     }
 1709              		.loc 1 177 9 is_stmt 1 view .LVU467
 177:src/TTrack.cpp ****     }
 1710              		.loc 1 177 13 is_stmt 0 view .LVU468
 1711 0114 B3EC017A 		vldmia.32	r3!, {s14}
 175:src/TTrack.cpp ****     {
 1712              		.loc 1 175 23 view .LVU469
 1713 0118 9842     		cmp	r0, r3
 177:src/TTrack.cpp ****     }
 1714              		.loc 1 177 13 view .LVU470
 1715 011a 77EE877A 		vadd.f32	s15, s15, s14
 1716              	.LVL126:
 175:src/TTrack.cpp ****     {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 117


 1717              		.loc 1 175 5 is_stmt 1 view .LVU471
 175:src/TTrack.cpp ****     {
 1718              		.loc 1 175 23 view .LVU472
 1719 011e F9D1     		bne	.L97
 1720              	.L98:
 1721              	.LBE472:
 1722              	.LBB473:
 182:src/TTrack.cpp ****     }
 1723              		.loc 1 182 9 view .LVU473
 182:src/TTrack.cpp ****     }
 1724              		.loc 1 182 19 is_stmt 0 view .LVU474
 1725 0120 DEED006A 		vldr.32	s13, [lr]
 1726 0124 86EEA77A 		vdiv.f32	s14, s13, s15
 1727 0128 AEEC017A 		vstmia.32	lr!, {s14}
 180:src/TTrack.cpp ****     {
 1728              		.loc 1 180 5 is_stmt 1 view .LVU475
 180:src/TTrack.cpp ****     {
 1729              		.loc 1 180 23 view .LVU476
 1730 012c 7045     		cmp	r0, lr
 1731 012e F7D1     		bne	.L98
 1732              	.LBE473:
 1733              	.LBE471:
 1734              	.LBE470:
 109:src/TTrack.cpp **** 
 1735              		.loc 1 109 11 is_stmt 0 view .LVU477
 1736 0130 BFEE007A 		vmov.f32	s14, #-1.0e+0
 1737              	.LBB474:
 111:src/TTrack.cpp ****     {
 1738              		.loc 1 111 14 view .LVU478
 1739 0134 0023     		movs	r3, #0
 1740              	.LBE474:
 108:src/TTrack.cpp ****     float maxValue = -1;
 1741              		.loc 1 108 11 view .LVU479
 1742 0136 F0EE476A 		vmov.f32	s13, s14
 1743              	.LVL127:
 1744              	.L101:
 1745              	.LBB475:
 113:src/TTrack.cpp ****         {
 1746              		.loc 1 113 9 is_stmt 1 view .LVU480
 115:src/TTrack.cpp ****             maxIndex = j;
 1747              		.loc 1 115 13 view .LVU481
 113:src/TTrack.cpp ****         {
 1748              		.loc 1 113 22 is_stmt 0 view .LVU482
 1749 013a 55ED297A 		vldr.32	s15, [r5, #-164]
 1750              	.LVL128:
 116:src/TTrack.cpp ****         }
 1751              		.loc 1 116 13 is_stmt 1 view .LVU483
 113:src/TTrack.cpp ****         {
 1752              		.loc 1 113 9 is_stmt 0 view .LVU484
 1753 013e F4EEC77A 		vcmpe.f32	s15, s14
 1754 0142 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1755 0146 05DD     		ble	.L99
 116:src/TTrack.cpp ****         }
 1756              		.loc 1 116 22 view .LVU485
 1757 0148 07EE103A 		vmov	s14, r3	@ int
 1758 014c F8EEC76A 		vcvt.f32.s32	s13, s14
 1759              	.LVL129:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 118


 115:src/TTrack.cpp ****             maxIndex = j;
 1760              		.loc 1 115 22 view .LVU486
 1761 0150 B0EE677A 		vmov.f32	s14, s15
 1762              	.LVL130:
 1763              	.L99:
 119:src/TTrack.cpp ****     }
 1764              		.loc 1 119 9 is_stmt 1 discriminator 2 view .LVU487
 111:src/TTrack.cpp ****     {
 1765              		.loc 1 111 5 is_stmt 0 discriminator 2 view .LVU488
 1766 0154 0133     		adds	r3, r3, #1
 1767              	.LVL131:
 119:src/TTrack.cpp ****     }
 1768              		.loc 1 119 22 discriminator 2 view .LVU489
 1769 0156 E5EC017A 		vstmia.32	r5!, {s15}
 111:src/TTrack.cpp ****     {
 1770              		.loc 1 111 5 is_stmt 1 discriminator 2 view .LVU490
 1771              	.LVL132:
 111:src/TTrack.cpp ****     {
 1772              		.loc 1 111 23 discriminator 2 view .LVU491
 1773 015a 292B     		cmp	r3, #41
 1774 015c EDD1     		bne	.L101
 1775              	.LBE475:
 122:src/TTrack.cpp **** 
 1776              		.loc 1 122 5 view .LVU492
 122:src/TTrack.cpp **** 
 1777              		.loc 1 122 55 is_stmt 0 view .LVU493
 1778 015e F0EE007A 		vmov.f32	s15, #2.0e+0
 1779 0162 9FED1A6A 		vldr.32	s12, .L116+16
 122:src/TTrack.cpp **** 
 1780              		.loc 1 122 38 view .LVU494
 1781 0166 DFED1A5A 		vldr.32	s11, .L116+20
 122:src/TTrack.cpp **** 
 1782              		.loc 1 122 72 view .LVU495
 1783 016a 04F54053 		add	r3, r4, #12288
 1784              	.LVL133:
 122:src/TTrack.cpp **** 
 1785              		.loc 1 122 16 view .LVU496
 1786 016e 04F58044 		add	r4, r4, #16384
 1787              	.LVL134:
 122:src/TTrack.cpp **** 
 1788              		.loc 1 122 55 view .LVU497
 1789 0172 A6EEA76A 		vfma.f32	s12, s13, s15
 122:src/TTrack.cpp **** 
 1790              		.loc 1 122 64 view .LVU498
 1791 0176 03F58863 		add	r3, r3, #1088
 1792 017a 93ED007A 		vldr.32	s14, [r3]	@ int
 1793              	.LVL135:
 122:src/TTrack.cpp **** 
 1794              		.loc 1 122 16 view .LVU499
 1795 017e 04F56963 		add	r3, r4, #3728
 122:src/TTrack.cpp **** 
 1796              		.loc 1 122 64 view .LVU500
 1797 0182 B8EEC77A 		vcvt.f32.s32	s14, s14
 122:src/TTrack.cpp **** 
 1798              		.loc 1 122 38 view .LVU501
 1799 0186 C5EE867A 		vdiv.f32	s15, s11, s12
 122:src/TTrack.cpp **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 119


 1800              		.loc 1 122 62 view .LVU502
 1801 018a 67EE877A 		vmul.f32	s15, s15, s14
 124:src/TTrack.cpp ****     estimatedTempo = 60.0 / ((((float) hopSize) / 44100.0f) * beatPeriod);
 1802              		.loc 1 124 5 view .LVU503
 1803 018e F5EEC07A 		vcmpe.f32	s15, #0
 122:src/TTrack.cpp **** 
 1804              		.loc 1 122 16 view .LVU504
 1805 0192 C3ED007A 		vstr.32	s15, [r3]
 124:src/TTrack.cpp ****     estimatedTempo = 60.0 / ((((float) hopSize) / 44100.0f) * beatPeriod);
 1806              		.loc 1 124 5 is_stmt 1 view .LVU505
 1807 0196 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1808 019a 0DDD     		ble	.L89
 125:src/TTrack.cpp **** }
 1809              		.loc 1 125 5 view .LVU506
 125:src/TTrack.cpp **** }
 1810              		.loc 1 125 49 is_stmt 0 view .LVU507
 1811 019c DFED0D5A 		vldr.32	s11, .L116+24
 125:src/TTrack.cpp **** }
 1812              		.loc 1 125 20 view .LVU508
 1813 01a0 04F69464 		addw	r4, r4, #3732
 1814              	.LVL136:
 125:src/TTrack.cpp **** }
 1815              		.loc 1 125 27 view .LVU509
 1816 01a4 9FED0C6A 		vldr.32	s12, .L116+28
 125:src/TTrack.cpp **** }
 1817              		.loc 1 125 49 view .LVU510
 1818 01a8 C7EE256A 		vdiv.f32	s13, s14, s11
 125:src/TTrack.cpp **** }
 1819              		.loc 1 125 61 view .LVU511
 1820 01ac 66EEA77A 		vmul.f32	s15, s13, s15
 125:src/TTrack.cpp **** }
 1821              		.loc 1 125 27 view .LVU512
 1822 01b0 86EE277A 		vdiv.f32	s14, s12, s15
 125:src/TTrack.cpp **** }
 1823              		.loc 1 125 20 view .LVU513
 1824 01b4 84ED007A 		vstr.32	s14, [r4]
 1825              	.LVL137:
 1826              	.L89:
 126:src/TTrack.cpp **** //================================================
 1827              		.loc 1 126 1 view .LVU514
 1828 01b8 70BD     		pop	{r4, r5, r6, pc}
 1829              	.L117:
 1830 01ba 00BF     		.align	2
 1831              	.L116:
 1832 01bc 00008242 		.word	1115815936
 1833 01c0 00000042 		.word	1107296256
 1834 01c4 C07FA145 		.word	1168211904
 1835 01c8 00000000 		.word	0
 1836 01cc 0000A042 		.word	1117782016
 1837 01d0 C07F214A 		.word	1243709376
 1838 01d4 00442C47 		.word	1194083328
 1839 01d8 00007042 		.word	1114636288
 1840              		.cfi_endproc
 1841              	.LFE4741:
 1843              		.section	.text._ZN6TTrack16processODFSampleEf,"ax",%progbits
 1844              		.align	1
 1845              		.p2align 2,,3
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 120


 1846              		.global	_ZN6TTrack16processODFSampleEf
 1847              		.syntax unified
 1848              		.thumb
 1849              		.thumb_func
 1850              		.fpu fpv5-d16
 1852              	_ZN6TTrack16processODFSampleEf:
 1853              	.LVL138:
 1854              	.LFB4740:
  57:src/TTrack.cpp ****     onsetDF.push(sample);
 1855              		.loc 1 57 1 is_stmt 1 view -0
 1856              		.cfi_startproc
 1857              		@ args = 0, pretend = 0, frame = 0
 1858              		@ frame_needed = 0, uses_anonymous_args = 0
  58:src/TTrack.cpp **** 
 1859              		.loc 1 58 5 view .LVU516
 1860              	.LBB482:
 1861              	.LBI482:
 872:./lib/etl/include/etl/circular_buffer.h ****     {
 1862              		.loc 3 872 10 view .LVU517
 1863              	.LBB483:
 874:./lib/etl/include/etl/circular_buffer.h ****       increment_in();
 1864              		.loc 3 874 23 is_stmt 0 view .LVU518
 1865 0000 4368     		ldr	r3, [r0, #4]
 1866              	.LVL139:
 874:./lib/etl/include/etl/circular_buffer.h ****       increment_in();
 1867              		.loc 3 874 23 view .LVU519
 1868              	.LBE483:
 1869              	.LBE482:
 1870              		.file 8 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\new"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // The -*- C++ -*- dynamic memory management header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Copyright (C) 1994-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // This file is part of GCC.
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** //
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GCC is free software; you can redistribute it and/or modify
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // it under the terms of the GNU General Public License as published by
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // the Free Software Foundation; either version 3, or (at your option)
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // any later version.
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GCC is distributed in the hope that it will be useful,
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GNU General Public License for more details.
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Under Section 7 of GPL version 3, you are granted additional
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // permissions described in the GCC Runtime Library Exception, version
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 3.1, as published by the Free Software Foundation.
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // You should have received a copy of the GNU General Public License and
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // <http://www.gnu.org/licenses/>.
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** /** @file new
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  This is a Standard C++ Library header.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 121


  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  The header @c new defines several functions to manage dynamic memory and
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  handling memory allocation errors; see
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/dynamic_memory.html
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  for more.
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  */
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #ifndef _NEW
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #define _NEW
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC system_header
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #include <bits/c++config.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #include <exception>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC visibility push(default)
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** extern "C++" {
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** namespace std 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** {
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /**
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @brief  Exception possibly thrown by @c new.
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @ingroup exceptions
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  errors from the throwing forms of @c new.  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   class bad_alloc : public exception 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   public:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc() throw() { }
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc(const bad_alloc&) = default;
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc& operator=(const bad_alloc&) = default;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_alloc() throw();
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   class bad_array_new_length : public bad_alloc
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   public:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_array_new_length() throw() { }
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_array_new_length() throw();
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 122


  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   enum class align_val_t: size_t {};
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   struct nothrow_t
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     explicit nothrow_t() = default;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   extern const nothrow_t nothrow;
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /** If you write your own error handler to be called by @c new, it must
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  be of this type.  */
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   typedef void (*new_handler)();
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// Takes a replacement handler as the argument, returns the
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// previous handler.
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   new_handler set_new_handler(new_handler) throw();
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// Return the current new handler.
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   new_handler get_new_handler() noexcept;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** } // namespace std
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** //@{
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** /** These are replaceable signatures:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal array new and delete (same)
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *    @c NULL on error)
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow array new and delete (same)
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  Placement new and delete signatures (take a memory address argument,
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  does nothing) may not be replaced by a user's program.
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** */
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 123


 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t)
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t, const std::nothrow_t&)
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t)
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t, const std::nothrow_t&)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t)
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t, const std::nothrow_t&)
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t)
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t, const std::nothrow_t&)
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t, std::align_val_t)
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t, std::align_val_t)
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_sized_deallocation
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_aligned_new
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Default placement versions of operator new.
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** { return __p; }
 1871              		.loc 8 175 3 is_stmt 1 view .LVU520
 1872              	.LBB494:
 1873              	.LBB492:
 874:./lib/etl/include/etl/circular_buffer.h ****       increment_in();
 1874              		.loc 3 874 7 is_stmt 0 view .LVU521
 1875 0002 0269     		ldr	r2, [r0, #16]
 1876              	.LBB484:
 1877              	.LBB485:
 154:./lib/etl/include/etl/circular_buffer.h ****       {
 1878              		.loc 3 154 17 view .LVU522
 1879 0004 0168     		ldr	r1, [r0]
 1880              	.LBE485:
 1881              	.LBE484:
 874:./lib/etl/include/etl/circular_buffer.h ****       increment_in();
 1882              		.loc 3 874 7 view .LVU523
 1883 0006 02EB8302 		add	r2, r2, r3, lsl #2
 1884              	.LBB488:
 1885              	.LBB486:
 153:./lib/etl/include/etl/circular_buffer.h ****       if (in == buffer_size) ETL_UNLIKELY
 1886              		.loc 3 153 7 view .LVU524
 1887 000a 0133     		adds	r3, r3, #1
 154:./lib/etl/include/etl/circular_buffer.h ****       {
 1888              		.loc 3 154 7 view .LVU525
 1889 000c 8B42     		cmp	r3, r1
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 124


 1890              	.LBE486:
 1891              	.LBE488:
 1892              	.LBE492:
 1893              	.LBE494:
  57:src/TTrack.cpp ****     onsetDF.push(sample);
 1894              		.loc 1 57 1 view .LVU526
 1895 000e 10B5     		push	{r4, lr}
 1896              		.cfi_def_cfa_offset 8
 1897              		.cfi_offset 4, -8
 1898              		.cfi_offset 14, -4
 1899              	.LBB495:
 1900              	.LBB493:
 874:./lib/etl/include/etl/circular_buffer.h ****       increment_in();
 1901              		.loc 3 874 7 view .LVU527
 1902 0010 82ED000A 		vstr.32	s0, [r2]
 1903              	.LVL140:
 1904              	.LBB489:
 1905              	.LBI484:
 151:./lib/etl/include/etl/circular_buffer.h ****     {
 1906              		.loc 3 151 10 is_stmt 1 view .LVU528
 1907              	.LBB487:
 153:./lib/etl/include/etl/circular_buffer.h ****       if (in == buffer_size) ETL_UNLIKELY
 1908              		.loc 3 153 7 view .LVU529
 1909 0014 4360     		str	r3, [r0, #4]
 154:./lib/etl/include/etl/circular_buffer.h ****       {
 1910              		.loc 3 154 7 view .LVU530
 1911 0016 02D1     		bne	.L119
 156:./lib/etl/include/etl/circular_buffer.h ****       }
 1912              		.loc 3 156 9 view .LVU531
 156:./lib/etl/include/etl/circular_buffer.h ****       }
 1913              		.loc 3 156 12 is_stmt 0 view .LVU532
 1914 0018 0022     		movs	r2, #0
 1915 001a 1346     		mov	r3, r2
 1916 001c 4260     		str	r2, [r0, #4]
 1917              	.L119:
 1918              	.LVL141:
 156:./lib/etl/include/etl/circular_buffer.h ****       }
 1919              		.loc 3 156 12 view .LVU533
 1920              	.LBE487:
 1921              	.LBE489:
 878:./lib/etl/include/etl/circular_buffer.h ****       {
 1922              		.loc 3 878 17 view .LVU534
 1923 001e 8268     		ldr	r2, [r0, #8]
 878:./lib/etl/include/etl/circular_buffer.h ****       {
 1924              		.loc 3 878 7 view .LVU535
 1925 0020 9342     		cmp	r3, r2
 1926 0022 04D1     		bne	.L121
 1927              	.LVL142:
 1928              	.LBB490:
 1929              	.LBI490:
 161:./lib/etl/include/etl/circular_buffer.h ****     {
 1930              		.loc 3 161 10 is_stmt 1 view .LVU536
 1931              	.LBB491:
 163:./lib/etl/include/etl/circular_buffer.h ****       if (out == buffer_size) ETL_UNLIKELY
 1932              		.loc 3 163 7 view .LVU537
 1933 0024 0133     		adds	r3, r3, #1
 164:./lib/etl/include/etl/circular_buffer.h ****       {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 125


 1934              		.loc 3 164 7 view .LVU538
 1935 0026 9942     		cmp	r1, r3
 166:./lib/etl/include/etl/circular_buffer.h ****       }
 1936              		.loc 3 166 9 view .LVU539
 166:./lib/etl/include/etl/circular_buffer.h ****       }
 1937              		.loc 3 166 13 is_stmt 0 view .LVU540
 1938 0028 08BF     		it	eq
 1939 002a 0023     		moveq	r3, #0
 1940 002c 8360     		str	r3, [r0, #8]
 1941              	.LVL143:
 1942              	.L121:
 166:./lib/etl/include/etl/circular_buffer.h ****       }
 1943              		.loc 3 166 13 view .LVU541
 1944              	.LBE491:
 1945              	.LBE490:
 1946              	.LBE493:
 1947              	.LBE495:
  60:src/TTrack.cpp ****     {
 1948              		.loc 1 60 5 is_stmt 1 view .LVU542
  60:src/TTrack.cpp ****     {
 1949              		.loc 1 60 9 is_stmt 0 view .LVU543
 1950 002e 00F58044 		add	r4, r0, #16384
 1951 0032 D4F8983E 		ldr	r3, [r4, #3736]
  60:src/TTrack.cpp ****     {
 1952              		.loc 1 60 5 view .LVU544
 1953 0036 1BB1     		cbz	r3, .L128
  67:src/TTrack.cpp ****     }
 1954              		.loc 1 67 9 is_stmt 1 view .LVU545
  67:src/TTrack.cpp ****     }
 1955              		.loc 1 67 32 is_stmt 0 view .LVU546
 1956 0038 013B     		subs	r3, r3, #1
 1957 003a C4F8983E 		str	r3, [r4, #3736]
  69:src/TTrack.cpp **** //================================================
 1958              		.loc 1 69 1 view .LVU547
 1959 003e 10BD     		pop	{r4, pc}
 1960              	.L128:
  62:src/TTrack.cpp ****         framesUntilTempoDisplay = 1024;
 1961              		.loc 1 62 9 is_stmt 1 view .LVU548
  62:src/TTrack.cpp ****         framesUntilTempoDisplay = 1024;
 1962              		.loc 1 62 23 is_stmt 0 view .LVU549
 1963 0040 FFF7FEFF 		bl	_ZN6TTrack14calculateTempoEv
 1964              	.LVL144:
  63:src/TTrack.cpp ****     }
 1965              		.loc 1 63 9 is_stmt 1 view .LVU550
  63:src/TTrack.cpp ****     }
 1966              		.loc 1 63 33 is_stmt 0 view .LVU551
 1967 0044 4FF48063 		mov	r3, #1024
 1968 0048 C4F8983E 		str	r3, [r4, #3736]
  69:src/TTrack.cpp **** //================================================
 1969              		.loc 1 69 1 view .LVU552
 1970 004c 10BD     		pop	{r4, pc}
  69:src/TTrack.cpp **** //================================================
 1971              		.loc 1 69 1 view .LVU553
 1972              		.cfi_endproc
 1973              	.LFE4740:
 1975 004e 00BF     		.section	.text._ZN6TTrack17processAudioFrameEPf,"ax",%progbits
 1976              		.align	1
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 126


 1977              		.p2align 2,,3
 1978              		.global	_ZN6TTrack17processAudioFrameEPf
 1979              		.syntax unified
 1980              		.thumb
 1981              		.thumb_func
 1982              		.fpu fpv5-d16
 1984              	_ZN6TTrack17processAudioFrameEPf:
 1985              	.LVL145:
 1986              	.LFB4739:
  51:src/TTrack.cpp ****     float sample = odf.calculateODFSample(buffer);
 1987              		.loc 1 51 1 is_stmt 1 view -0
 1988              		.cfi_startproc
 1989              		@ args = 0, pretend = 0, frame = 0
 1990              		@ frame_needed = 0, uses_anonymous_args = 0
  52:src/TTrack.cpp ****     processODFSample(sample);
 1991              		.loc 1 52 5 view .LVU555
  51:src/TTrack.cpp ****     float sample = odf.calculateODFSample(buffer);
 1992              		.loc 1 51 1 is_stmt 0 view .LVU556
 1993 0000 38B5     		push	{r3, r4, r5, lr}
 1994              		.cfi_def_cfa_offset 16
 1995              		.cfi_offset 3, -16
 1996              		.cfi_offset 4, -12
 1997              		.cfi_offset 5, -8
 1998              		.cfi_offset 14, -4
  51:src/TTrack.cpp ****     float sample = odf.calculateODFSample(buffer);
 1999              		.loc 1 51 1 view .LVU557
 2000 0002 0446     		mov	r4, r0
  52:src/TTrack.cpp ****     processODFSample(sample);
 2001              		.loc 1 52 42 view .LVU558
 2002 0004 00F5A150 		add	r0, r0, #5152
 2003              	.LVL146:
  52:src/TTrack.cpp ****     processODFSample(sample);
 2004              		.loc 1 52 42 view .LVU559
 2005 0008 FFF7FEFF 		bl	_ZN7OnsetDF18calculateODFSampleEPf
 2006              	.LVL147:
  53:src/TTrack.cpp **** }
 2007              		.loc 1 53 5 is_stmt 1 view .LVU560
 2008              	.LBB504:
 2009              	.LBI504:
  56:src/TTrack.cpp **** {
 2010              		.loc 1 56 6 view .LVU561
 2011              	.LBB505:
  58:src/TTrack.cpp **** 
 2012              		.loc 1 58 5 view .LVU562
 2013              	.LBB506:
 2014              	.LBI506:
 872:./lib/etl/include/etl/circular_buffer.h ****     {
 2015              		.loc 3 872 10 view .LVU563
 2016              	.LBB507:
 874:./lib/etl/include/etl/circular_buffer.h ****       increment_in();
 2017              		.loc 3 874 23 is_stmt 0 view .LVU564
 2018 000c 6368     		ldr	r3, [r4, #4]
 2019              	.LVL148:
 874:./lib/etl/include/etl/circular_buffer.h ****       increment_in();
 2020              		.loc 3 874 23 view .LVU565
 2021              	.LBE507:
 2022              	.LBE506:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 127


 2023              	.LBE505:
 2024              	.LBE504:
 2025              		.loc 8 175 3 is_stmt 1 view .LVU566
 2026              	.LBB520:
 2027              	.LBB518:
 2028              	.LBB517:
 2029              	.LBB516:
 874:./lib/etl/include/etl/circular_buffer.h ****       increment_in();
 2030              		.loc 3 874 7 is_stmt 0 view .LVU567
 2031 000e 2269     		ldr	r2, [r4, #16]
 2032              	.LBB508:
 2033              	.LBB509:
 154:./lib/etl/include/etl/circular_buffer.h ****       {
 2034              		.loc 3 154 17 view .LVU568
 2035 0010 2168     		ldr	r1, [r4]
 2036              	.LBE509:
 2037              	.LBE508:
 874:./lib/etl/include/etl/circular_buffer.h ****       increment_in();
 2038              		.loc 3 874 7 view .LVU569
 2039 0012 02EB8302 		add	r2, r2, r3, lsl #2
 2040              	.LBB512:
 2041              	.LBB510:
 153:./lib/etl/include/etl/circular_buffer.h ****       if (in == buffer_size) ETL_UNLIKELY
 2042              		.loc 3 153 7 view .LVU570
 2043 0016 0133     		adds	r3, r3, #1
 154:./lib/etl/include/etl/circular_buffer.h ****       {
 2044              		.loc 3 154 7 view .LVU571
 2045 0018 8B42     		cmp	r3, r1
 2046              	.LBE510:
 2047              	.LBE512:
 874:./lib/etl/include/etl/circular_buffer.h ****       increment_in();
 2048              		.loc 3 874 7 view .LVU572
 2049 001a 82ED000A 		vstr.32	s0, [r2]
 2050              	.LVL149:
 2051              	.LBB513:
 2052              	.LBI508:
 151:./lib/etl/include/etl/circular_buffer.h ****     {
 2053              		.loc 3 151 10 is_stmt 1 view .LVU573
 2054              	.LBB511:
 153:./lib/etl/include/etl/circular_buffer.h ****       if (in == buffer_size) ETL_UNLIKELY
 2055              		.loc 3 153 7 view .LVU574
 2056 001e 6360     		str	r3, [r4, #4]
 154:./lib/etl/include/etl/circular_buffer.h ****       {
 2057              		.loc 3 154 7 view .LVU575
 2058 0020 02D1     		bne	.L130
 156:./lib/etl/include/etl/circular_buffer.h ****       }
 2059              		.loc 3 156 9 view .LVU576
 156:./lib/etl/include/etl/circular_buffer.h ****       }
 2060              		.loc 3 156 12 is_stmt 0 view .LVU577
 2061 0022 0022     		movs	r2, #0
 2062 0024 1346     		mov	r3, r2
 2063 0026 6260     		str	r2, [r4, #4]
 2064              	.L130:
 2065              	.LVL150:
 156:./lib/etl/include/etl/circular_buffer.h ****       }
 2066              		.loc 3 156 12 view .LVU578
 2067              	.LBE511:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 128


 2068              	.LBE513:
 878:./lib/etl/include/etl/circular_buffer.h ****       {
 2069              		.loc 3 878 17 view .LVU579
 2070 0028 A268     		ldr	r2, [r4, #8]
 878:./lib/etl/include/etl/circular_buffer.h ****       {
 2071              		.loc 3 878 7 view .LVU580
 2072 002a 9342     		cmp	r3, r2
 2073 002c 04D1     		bne	.L132
 2074              	.LVL151:
 2075              	.LBB514:
 2076              	.LBI514:
 161:./lib/etl/include/etl/circular_buffer.h ****     {
 2077              		.loc 3 161 10 is_stmt 1 view .LVU581
 2078              	.LBB515:
 163:./lib/etl/include/etl/circular_buffer.h ****       if (out == buffer_size) ETL_UNLIKELY
 2079              		.loc 3 163 7 view .LVU582
 2080 002e 0133     		adds	r3, r3, #1
 164:./lib/etl/include/etl/circular_buffer.h ****       {
 2081              		.loc 3 164 7 view .LVU583
 2082 0030 9942     		cmp	r1, r3
 166:./lib/etl/include/etl/circular_buffer.h ****       }
 2083              		.loc 3 166 9 view .LVU584
 166:./lib/etl/include/etl/circular_buffer.h ****       }
 2084              		.loc 3 166 13 is_stmt 0 view .LVU585
 2085 0032 08BF     		it	eq
 2086 0034 0023     		moveq	r3, #0
 2087 0036 A360     		str	r3, [r4, #8]
 2088              	.LVL152:
 2089              	.L132:
 166:./lib/etl/include/etl/circular_buffer.h ****       }
 2090              		.loc 3 166 13 view .LVU586
 2091              	.LBE515:
 2092              	.LBE514:
 2093              	.LBE516:
 2094              	.LBE517:
  60:src/TTrack.cpp ****     {
 2095              		.loc 1 60 5 is_stmt 1 view .LVU587
  60:src/TTrack.cpp ****     {
 2096              		.loc 1 60 9 is_stmt 0 view .LVU588
 2097 0038 04F58045 		add	r5, r4, #16384
 2098 003c D5F8983E 		ldr	r3, [r5, #3736]
  60:src/TTrack.cpp ****     {
 2099              		.loc 1 60 5 view .LVU589
 2100 0040 1BB1     		cbz	r3, .L139
  67:src/TTrack.cpp ****     }
 2101              		.loc 1 67 9 is_stmt 1 view .LVU590
  67:src/TTrack.cpp ****     }
 2102              		.loc 1 67 32 is_stmt 0 view .LVU591
 2103 0042 013B     		subs	r3, r3, #1
 2104 0044 C5F8983E 		str	r3, [r5, #3736]
 2105              	.LVL153:
  67:src/TTrack.cpp ****     }
 2106              		.loc 1 67 32 view .LVU592
 2107              	.LBE518:
 2108              	.LBE520:
  54:src/TTrack.cpp **** //================================================
 2109              		.loc 1 54 1 view .LVU593
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 129


 2110 0048 38BD     		pop	{r3, r4, r5, pc}
 2111              	.LVL154:
 2112              	.L139:
 2113              	.LBB521:
 2114              	.LBB519:
  62:src/TTrack.cpp ****         framesUntilTempoDisplay = 1024;
 2115              		.loc 1 62 9 is_stmt 1 view .LVU594
  62:src/TTrack.cpp ****         framesUntilTempoDisplay = 1024;
 2116              		.loc 1 62 23 is_stmt 0 view .LVU595
 2117 004a 2046     		mov	r0, r4
 2118 004c FFF7FEFF 		bl	_ZN6TTrack14calculateTempoEv
 2119              	.LVL155:
  63:src/TTrack.cpp ****     }
 2120              		.loc 1 63 9 is_stmt 1 view .LVU596
  63:src/TTrack.cpp ****     }
 2121              		.loc 1 63 33 is_stmt 0 view .LVU597
 2122 0050 4FF48063 		mov	r3, #1024
 2123 0054 C5F8983E 		str	r3, [r5, #3736]
 2124              	.LBE519:
 2125              	.LBE521:
  54:src/TTrack.cpp **** //================================================
 2126              		.loc 1 54 1 view .LVU598
 2127 0058 38BD     		pop	{r3, r4, r5, pc}
  54:src/TTrack.cpp **** //================================================
 2128              		.loc 1 54 1 view .LVU599
 2129              		.cfi_endproc
 2130              	.LFE4739:
 2132 005a 00BF     		.text
 2133              	.Letext0:
 2134              		.file 9 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 2135              		.file 10 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 2136              		.file 11 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 2137              		.file 12 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 2138              		.file 13 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 2139              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 2140              		.file 15 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 2141              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 2142              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 2143              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\array"
 2144              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 2145              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 2146              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\uses_alloc
 2147              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\tuple"
 2148              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\shared_ptr
 2149              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\atomic_bas
 2150              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 2151              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 2152              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 2153              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 2154              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 2155              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\system_error"
 2156              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\functional"
 2157              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\alloc_trai
 2158              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\vector.tcc
 2159              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 2160              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\concurrence
 2161              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\alloc_trait
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 130


 2162              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\type_traits
 2163              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 2164              		.file 39 "<built-in>"
 2165              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 2166              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 2167              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 2168              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 2169              		.file 44 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 2170              		.file 45 "src/OnsetDF.h"
 2171              		.file 46 "./lib/etl/include/etl/profiles/determine_builtin_support.h"
 2172              		.file 47 "./lib/etl/include/etl/platform.h"
 2173              		.file 48 "./lib/etl/include/etl/atomic/atomic_std.h"
 2174              		.file 49 "./lib/etl/include/etl/integral_limits.h"
 2175              		.file 50 "./lib/etl/include/etl/memory.h"
 2176              		.file 51 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 2177              		.file 52 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 2178              		.file 53 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 2179              		.file 54 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 2180              		.file 55 "src/TTrack.h"
 2181              		.file 56 "./lib/etl/include/etl/debug_count.h"
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s 			page 131


DEFINED SYMBOLS
                            *ABS*:00000000 TTrack.cpp
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:17     .text._ZN6TTrack10initialiseEv:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:26     .text._ZN6TTrack10initialiseEv:00000000 _ZN6TTrack10initialiseEv
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:302    .text._ZN6TTrack10initialiseEv:00000140 $d
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:318    .text._ZN6TTrackC2Ev:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:326    .text._ZN6TTrackC2Ev:00000000 _ZN6TTrackC2Ev
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:326    .text._ZN6TTrackC2Ev:00000000 _ZN6TTrackC1Ev
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:524    .text._ZN6TTrack8getTempoEv:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:532    .text._ZN6TTrack8getTempoEv:00000000 _ZN6TTrack8getTempoEv
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:551    .text._ZN6TTrack17adaptiveThresholdERSt6vectorIfSaIfEE:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:559    .text._ZN6TTrack17adaptiveThresholdERSt6vectorIfSaIfEE:00000000 _ZN6TTrack17adaptiveThresholdERSt6vectorIfSaIfEE
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:1014   .text._ZN6TTrack17adaptiveThresholdERSt6vectorIfSaIfEE:0000015c $d
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:1021   .text._ZN6TTrack15normaliseVectorERSt5arrayIfLj41EE:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:1029   .text._ZN6TTrack15normaliseVectorERSt5arrayIfLj41EE:00000000 _ZN6TTrack15normaliseVectorERSt5arrayIfLj41EE
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:1081   .text._ZN6TTrack15normaliseVectorERSt5arrayIfLj41EE:00000028 $d
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:1086   .text._ZN6TTrack21calculateMeanOfVectorERSt6vectorIfSaIfEEii:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:1094   .text._ZN6TTrack21calculateMeanOfVectorERSt6vectorIfSaIfEEii:00000000 _ZN6TTrack21calculateMeanOfVectorERSt6vectorIfSaIfEEii
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:1176   .text._ZN6TTrack21calculateMeanOfVectorERSt6vectorIfSaIfEEii:00000040 $d
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:1181   .text._ZN6TTrack20calculateBalancedACFERSt6vectorIfSaIfEE:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:1189   .text._ZN6TTrack20calculateBalancedACFERSt6vectorIfSaIfEE:00000000 _ZN6TTrack20calculateBalancedACFERSt6vectorIfSaIfEE
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:1276   .text._ZN6TTrack20calculateBalancedACFERSt6vectorIfSaIfEE:00000050 $d
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:1281   .text._ZN6TTrack29calculateCombFilterBankOutputEv:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:1289   .text._ZN6TTrack29calculateCombFilterBankOutputEv:00000000 _ZN6TTrack29calculateCombFilterBankOutputEv
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:1412   .text._ZN6TTrack14calculateTempoEv:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:1420   .text._ZN6TTrack14calculateTempoEv:00000000 _ZN6TTrack14calculateTempoEv
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:1832   .text._ZN6TTrack14calculateTempoEv:000001bc $d
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:1844   .text._ZN6TTrack16processODFSampleEf:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:1852   .text._ZN6TTrack16processODFSampleEf:00000000 _ZN6TTrack16processODFSampleEf
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:1976   .text._ZN6TTrack17processAudioFrameEPf:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccgnIlRK.s:1984   .text._ZN6TTrack17processAudioFrameEPf:00000000 _ZN6TTrack17processAudioFrameEPf

UNDEFINED SYMBOLS
exp
sqrtf
_ZN7OnsetDFC1Eii
_ZN7OnsetDF18calculateODFSampleEPf
