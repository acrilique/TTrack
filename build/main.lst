ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN7daisysp3SvfD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN7daisysp3SvfD2Ev:
  27              	.LVL0:
  28              	.LFB2847:
  29              		.file 1 "../DaisyExamples/DaisySP//Source/Filters/svf.h"
   1:../DaisyExamples/DaisySP//Source/Filters/svf.h **** #pragma once
   2:../DaisyExamples/DaisySP//Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisyExamples/DaisySP//Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisyExamples/DaisySP//Source/Filters/svf.h **** 
   5:../DaisyExamples/DaisySP//Source/Filters/svf.h **** namespace daisysp
   6:../DaisyExamples/DaisySP//Source/Filters/svf.h **** {
   7:../DaisyExamples/DaisySP//Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisyExamples/DaisySP//Source/Filters/svf.h **** 
   9:../DaisyExamples/DaisySP//Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisyExamples/DaisySP//Source/Filters/svf.h **** 
  11:../DaisyExamples/DaisySP//Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisyExamples/DaisySP//Source/Filters/svf.h **** 
  13:../DaisyExamples/DaisySP//Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisyExamples/DaisySP//Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisyExamples/DaisySP//Source/Filters/svf.h **** 
  16:../DaisyExamples/DaisySP//Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisyExamples/DaisySP//Source/Filters/svf.h **** */
  18:../DaisyExamples/DaisySP//Source/Filters/svf.h **** class Svf
  19:../DaisyExamples/DaisySP//Source/Filters/svf.h **** {
  20:../DaisyExamples/DaisySP//Source/Filters/svf.h ****   public:
  21:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     Svf() {}
  22:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     ~Svf() {}
  30              		.loc 1 22 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 22 13 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 2


  37              		.cfi_endproc
  38              	.LFE2847:
  40              		.weak	_ZN7daisysp3SvfD1Ev
  41              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
  42 0002 00BF     		.section	.text._ZN7daisysp8ReverbScD2Ev,"axG",%progbits,_ZN7daisysp8ReverbScD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN7daisysp8ReverbScD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN7daisysp8ReverbScD2Ev:
  52              	.LVL1:
  53              	.LFB3034:
  54              		.file 2 "../DaisyExamples/DaisySP//Source/Effects/reverbsc.h"
   1:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** #pragma once
   2:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** #ifndef DSYSP_REVERBSC_H
   3:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** #define DSYSP_REVERBSC_H
   4:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** 
   5:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** #define DSY_REVERBSC_MAX_SIZE 98936
   6:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** 
   7:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** namespace daisysp
   8:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** {
   9:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** /**Delay line for internal reverb use
  10:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** */
  11:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** typedef struct
  12:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** {
  13:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     int    write_pos;         /**< write position */
  14:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     int    buffer_size;       /**< buffer size */
  15:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     int    read_pos;          /**< read position */
  16:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     int    read_pos_frac;     /**< fractional component of read pos */
  17:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     int    read_pos_frac_inc; /**< increment for fractional */
  18:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     int    dummy;             /**<  dummy var */
  19:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     int    seed_val;          /**< randseed */
  20:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     int    rand_line_cnt;     /**< number of random lines */
  21:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     float  filter_state;      /**< state of filter */
  22:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     float *buf;               /**< buffer ptr */
  23:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** } ReverbScDl;
  24:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** 
  25:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** /** Stereo Reverb
  26:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** 
  27:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** Reverb SC:               Ported from csound/soundpipe
  28:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** 
  29:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** Original author(s):        Sean Costello, Istvan Varga
  30:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** 
  31:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** Year:                    1999, 2005
  32:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** 
  33:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** Ported to soundpipe by:  Paul Batchelor
  34:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** 
  35:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** Ported by:                Stephen Hensley
  36:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** */
  37:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** class ReverbSc
  38:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** {
  39:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****   public:
  40:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     ReverbSc() {}
  41:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     ~ReverbSc() {}
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 3


  55              		.loc 2 41 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              		.loc 2 41 18 is_stmt 0 view .LVU3
  61 0000 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE3034:
  65              		.weak	_ZN7daisysp8ReverbScD1Ev
  66              		.thumb_set _ZN7daisysp8ReverbScD1Ev,_ZN7daisysp8ReverbScD2Ev
  67              		.section	.text._ZN7daisysp4ToneD2Ev,"axG",%progbits,_ZN7daisysp4ToneD5Ev,comdat
  68              		.align	1
  69              		.p2align 2,,3
  70              		.weak	_ZN7daisysp4ToneD2Ev
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv5-d16
  76              	_ZN7daisysp4ToneD2Ev:
  77              	.LVL2:
  78              	.LFB3147:
  79              		.file 3 "../DaisyExamples/DaisySP//Source/Filters/tone.h"
   1:../DaisyExamples/DaisySP//Source/Filters/tone.h **** #pragma once
   2:../DaisyExamples/DaisySP//Source/Filters/tone.h **** #ifndef DSY_TONE_H
   3:../DaisyExamples/DaisySP//Source/Filters/tone.h **** #define DSY_TONE_H
   4:../DaisyExamples/DaisySP//Source/Filters/tone.h **** 
   5:../DaisyExamples/DaisySP//Source/Filters/tone.h **** #include <stdint.h>
   6:../DaisyExamples/DaisySP//Source/Filters/tone.h **** #ifdef __cplusplus
   7:../DaisyExamples/DaisySP//Source/Filters/tone.h **** 
   8:../DaisyExamples/DaisySP//Source/Filters/tone.h **** namespace daisysp
   9:../DaisyExamples/DaisySP//Source/Filters/tone.h **** {
  10:../DaisyExamples/DaisySP//Source/Filters/tone.h **** /** A first-order recursive low-pass filter with variable frequency response.
  11:../DaisyExamples/DaisySP//Source/Filters/tone.h **** */
  12:../DaisyExamples/DaisySP//Source/Filters/tone.h **** class Tone
  13:../DaisyExamples/DaisySP//Source/Filters/tone.h **** {
  14:../DaisyExamples/DaisySP//Source/Filters/tone.h ****   public:
  15:../DaisyExamples/DaisySP//Source/Filters/tone.h ****     Tone() {}
  16:../DaisyExamples/DaisySP//Source/Filters/tone.h ****     ~Tone() {}
  80              		.loc 3 16 5 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              		.loc 3 16 14 is_stmt 0 view .LVU5
  86 0000 7047     		bx	lr
  87              		.cfi_endproc
  88              	.LFE3147:
  90              		.weak	_ZN7daisysp4ToneD1Ev
  91              		.thumb_set _ZN7daisysp4ToneD1Ev,_ZN7daisysp4ToneD2Ev
  92              		.section	.text._ZN5daisy9ParameterD2Ev,"axG",%progbits,_ZN5daisy9ParameterD5Ev,comdat
  93              		.align	1
  94              		.p2align 2,,3
  95              		.weak	_ZN5daisy9ParameterD2Ev
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 4


  99              		.fpu fpv5-d16
 101              	_ZN5daisy9ParameterD2Ev:
 102              	.LVL3:
 103              	.LFB3915:
 104              		.file 4 "../DaisyExamples/libDaisy//src/hid/parameter.h"
   1:../DaisyExamples/libDaisy//src/hid/parameter.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/hid/parameter.h **** #include <stdint.h>
   3:../DaisyExamples/libDaisy//src/hid/parameter.h **** #include "hid/ctrl.h"
   4:../DaisyExamples/libDaisy//src/hid/parameter.h **** 
   5:../DaisyExamples/libDaisy//src/hid/parameter.h **** namespace daisy
   6:../DaisyExamples/libDaisy//src/hid/parameter.h **** {
   7:../DaisyExamples/libDaisy//src/hid/parameter.h **** /** @addtogroup controls
   8:../DaisyExamples/libDaisy//src/hid/parameter.h ****     @{
   9:../DaisyExamples/libDaisy//src/hid/parameter.h **** */
  10:../DaisyExamples/libDaisy//src/hid/parameter.h **** 
  11:../DaisyExamples/libDaisy//src/hid/parameter.h **** /**      Simple parameter mapping tool that takes a 0-1 input from an hid_ctrl. */
  12:../DaisyExamples/libDaisy//src/hid/parameter.h **** class Parameter
  13:../DaisyExamples/libDaisy//src/hid/parameter.h **** {
  14:../DaisyExamples/libDaisy//src/hid/parameter.h ****   public:
  15:../DaisyExamples/libDaisy//src/hid/parameter.h ****     /** Curves are applied to the output signal */
  16:../DaisyExamples/libDaisy//src/hid/parameter.h ****     enum Curve
  17:../DaisyExamples/libDaisy//src/hid/parameter.h ****     {
  18:../DaisyExamples/libDaisy//src/hid/parameter.h ****         LINEAR,      /**< Linear curve */
  19:../DaisyExamples/libDaisy//src/hid/parameter.h ****         EXPONENTIAL, /**< Exponential curve */
  20:../DaisyExamples/libDaisy//src/hid/parameter.h ****         LOGARITHMIC, /**<  Logarithmic curve */
  21:../DaisyExamples/libDaisy//src/hid/parameter.h ****         CUBE,        /**< Cubic curve */
  22:../DaisyExamples/libDaisy//src/hid/parameter.h ****         LAST,        /**< Final enum element. */
  23:../DaisyExamples/libDaisy//src/hid/parameter.h ****     };
  24:../DaisyExamples/libDaisy//src/hid/parameter.h ****     /** Constructor */
  25:../DaisyExamples/libDaisy//src/hid/parameter.h ****     Parameter() {}
  26:../DaisyExamples/libDaisy//src/hid/parameter.h ****     /** Destructor */
  27:../DaisyExamples/libDaisy//src/hid/parameter.h ****     ~Parameter() {}
 105              		.loc 4 27 5 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              	.LBB603:
 111              	.LBI603:
 112              		.file 5 "../DaisyExamples/libDaisy//src/hid/ctrl.h"
   1:../DaisyExamples/libDaisy//src/hid/ctrl.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../DaisyExamples/libDaisy//src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../DaisyExamples/libDaisy//src/hid/ctrl.h **** #include <stdint.h>
   5:../DaisyExamples/libDaisy//src/hid/ctrl.h **** 
   6:../DaisyExamples/libDaisy//src/hid/ctrl.h **** #ifdef __cplusplus
   7:../DaisyExamples/libDaisy//src/hid/ctrl.h **** namespace daisy
   8:../DaisyExamples/libDaisy//src/hid/ctrl.h **** {
   9:../DaisyExamples/libDaisy//src/hid/ctrl.h **** /**
  10:../DaisyExamples/libDaisy//src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../DaisyExamples/libDaisy//src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../DaisyExamples/libDaisy//src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../DaisyExamples/libDaisy//src/hid/ctrl.h ****     @author Stephen Hensley
  14:../DaisyExamples/libDaisy//src/hid/ctrl.h ****     @date November 2019
  15:../DaisyExamples/libDaisy//src/hid/ctrl.h ****     @ingroup controls
  16:../DaisyExamples/libDaisy//src/hid/ctrl.h **** */
  17:../DaisyExamples/libDaisy//src/hid/ctrl.h **** class AnalogControl
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 5


  18:../DaisyExamples/libDaisy//src/hid/ctrl.h **** {
  19:../DaisyExamples/libDaisy//src/hid/ctrl.h ****   public:
  20:../DaisyExamples/libDaisy//src/hid/ctrl.h ****     /** Constructor */
  21:../DaisyExamples/libDaisy//src/hid/ctrl.h ****     AnalogControl() {}
  22:../DaisyExamples/libDaisy//src/hid/ctrl.h ****     /** destructor */
  23:../DaisyExamples/libDaisy//src/hid/ctrl.h ****     ~AnalogControl() {}
 113              		.loc 5 23 5 view .LVU7
 114              		.loc 5 23 5 is_stmt 0 view .LVU8
 115              	.LBE603:
 116              		.loc 4 27 19 view .LVU9
 117 0000 7047     		bx	lr
 118              		.cfi_endproc
 119              	.LFE3915:
 121              		.weak	_ZN5daisy9ParameterD1Ev
 122              		.thumb_set _ZN5daisy9ParameterD1Ev,_ZN5daisy9ParameterD2Ev
 123 0002 00BF     		.section	.text._ZN5daisy8DaisyPodD2Ev,"axG",%progbits,_ZN5daisy8DaisyPodD5Ev,comdat
 124              		.align	1
 125              		.p2align 2,,3
 126              		.weak	_ZN5daisy8DaisyPodD2Ev
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu fpv5-d16
 132              	_ZN5daisy8DaisyPodD2Ev:
 133              	.LVL4:
 134              	.LFB4792:
 135              		.file 6 "../DaisyExamples/libDaisy//src/daisy_pod.h"
   1:../DaisyExamples/libDaisy//src/daisy_pod.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/daisy_pod.h **** #ifndef DSY_POD_BSP_H
   3:../DaisyExamples/libDaisy//src/daisy_pod.h **** #define DSY_POD_BSP_H
   4:../DaisyExamples/libDaisy//src/daisy_pod.h **** 
   5:../DaisyExamples/libDaisy//src/daisy_pod.h **** #include "daisy_seed.h"
   6:../DaisyExamples/libDaisy//src/daisy_pod.h **** 
   7:../DaisyExamples/libDaisy//src/daisy_pod.h **** namespace daisy
   8:../DaisyExamples/libDaisy//src/daisy_pod.h **** {
   9:../DaisyExamples/libDaisy//src/daisy_pod.h **** /**
  10:../DaisyExamples/libDaisy//src/daisy_pod.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../DaisyExamples/libDaisy//src/daisy_pod.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../DaisyExamples/libDaisy//src/daisy_pod.h ****     @author Stephen Hensley
  13:../DaisyExamples/libDaisy//src/daisy_pod.h ****     @date November 2019
  14:../DaisyExamples/libDaisy//src/daisy_pod.h ****     @ingroup boards
  15:../DaisyExamples/libDaisy//src/daisy_pod.h **** */
  16:../DaisyExamples/libDaisy//src/daisy_pod.h **** class DaisyPod
  17:../DaisyExamples/libDaisy//src/daisy_pod.h **** {
  18:../DaisyExamples/libDaisy//src/daisy_pod.h ****   public:
  19:../DaisyExamples/libDaisy//src/daisy_pod.h ****     /** Switches */
  20:../DaisyExamples/libDaisy//src/daisy_pod.h ****     enum Sw
  21:../DaisyExamples/libDaisy//src/daisy_pod.h ****     {
  22:../DaisyExamples/libDaisy//src/daisy_pod.h ****         BUTTON_1,    /** & */
  23:../DaisyExamples/libDaisy//src/daisy_pod.h ****         BUTTON_2,    /** & */
  24:../DaisyExamples/libDaisy//src/daisy_pod.h ****         BUTTON_LAST, /** &  */
  25:../DaisyExamples/libDaisy//src/daisy_pod.h ****     };
  26:../DaisyExamples/libDaisy//src/daisy_pod.h **** 
  27:../DaisyExamples/libDaisy//src/daisy_pod.h ****     /** Knobs */
  28:../DaisyExamples/libDaisy//src/daisy_pod.h ****     enum Knob
  29:../DaisyExamples/libDaisy//src/daisy_pod.h ****     {
  30:../DaisyExamples/libDaisy//src/daisy_pod.h ****         KNOB_1,    /** &  */
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 6


  31:../DaisyExamples/libDaisy//src/daisy_pod.h ****         KNOB_2,    /** & */
  32:../DaisyExamples/libDaisy//src/daisy_pod.h ****         KNOB_LAST, /** & */
  33:../DaisyExamples/libDaisy//src/daisy_pod.h ****     };
  34:../DaisyExamples/libDaisy//src/daisy_pod.h **** 
  35:../DaisyExamples/libDaisy//src/daisy_pod.h ****     DaisyPod() {}
  36:../DaisyExamples/libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
 136              		.loc 6 36 5 is_stmt 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 141              	.LBB604:
 142              	.LBI604:
 143              		.file 7 "../DaisyExamples/libDaisy//src/hid/midi.h"
   1:../DaisyExamples/libDaisy//src/hid/midi.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../DaisyExamples/libDaisy//src/hid/midi.h **** #define DSY_MIDI_H
   4:../DaisyExamples/libDaisy//src/hid/midi.h **** 
   5:../DaisyExamples/libDaisy//src/hid/midi.h **** // TODO: make this adjustable
   6:../DaisyExamples/libDaisy//src/hid/midi.h **** #define SYSEX_BUFFER_LEN 128
   7:../DaisyExamples/libDaisy//src/hid/midi.h **** 
   8:../DaisyExamples/libDaisy//src/hid/midi.h **** #include <stdint.h>
   9:../DaisyExamples/libDaisy//src/hid/midi.h **** #include <stdlib.h>
  10:../DaisyExamples/libDaisy//src/hid/midi.h **** #include "per/uart.h"
  11:../DaisyExamples/libDaisy//src/hid/midi.h **** #include "util/ringbuffer.h"
  12:../DaisyExamples/libDaisy//src/hid/midi.h **** #include "hid/MidiEvent.h"
  13:../DaisyExamples/libDaisy//src/hid/midi.h **** #include "hid/usb_midi.h"
  14:../DaisyExamples/libDaisy//src/hid/midi.h **** #include "sys/system.h"
  15:../DaisyExamples/libDaisy//src/hid/midi.h **** 
  16:../DaisyExamples/libDaisy//src/hid/midi.h **** namespace daisy
  17:../DaisyExamples/libDaisy//src/hid/midi.h **** {
  18:../DaisyExamples/libDaisy//src/hid/midi.h **** /** @brief   Transport layer for sending and receiving MIDI data over UART 
  19:../DaisyExamples/libDaisy//src/hid/midi.h ****  *  @details This is the mode of communication used for TRS and DIN MIDI
  20:../DaisyExamples/libDaisy//src/hid/midi.h ****  *  @ingroup midi
  21:../DaisyExamples/libDaisy//src/hid/midi.h **** */
  22:../DaisyExamples/libDaisy//src/hid/midi.h **** class MidiUartTransport
  23:../DaisyExamples/libDaisy//src/hid/midi.h **** {
  24:../DaisyExamples/libDaisy//src/hid/midi.h ****   public:
  25:../DaisyExamples/libDaisy//src/hid/midi.h ****     MidiUartTransport() {}
  26:../DaisyExamples/libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
  27:../DaisyExamples/libDaisy//src/hid/midi.h **** 
  28:../DaisyExamples/libDaisy//src/hid/midi.h ****     struct Config
  29:../DaisyExamples/libDaisy//src/hid/midi.h ****     {
  30:../DaisyExamples/libDaisy//src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  31:../DaisyExamples/libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    rx;
  32:../DaisyExamples/libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    tx;
  33:../DaisyExamples/libDaisy//src/hid/midi.h **** 
  34:../DaisyExamples/libDaisy//src/hid/midi.h ****         Config()
  35:../DaisyExamples/libDaisy//src/hid/midi.h ****         {
  36:../DaisyExamples/libDaisy//src/hid/midi.h ****             periph = UartHandler::Config::Peripheral::USART_1;
  37:../DaisyExamples/libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
  38:../DaisyExamples/libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
  39:../DaisyExamples/libDaisy//src/hid/midi.h ****         }
  40:../DaisyExamples/libDaisy//src/hid/midi.h ****     };
  41:../DaisyExamples/libDaisy//src/hid/midi.h **** 
  42:../DaisyExamples/libDaisy//src/hid/midi.h ****     inline void Init(Config config)
  43:../DaisyExamples/libDaisy//src/hid/midi.h ****     {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 7


  44:../DaisyExamples/libDaisy//src/hid/midi.h ****         UartHandler::Config uart_config;
  45:../DaisyExamples/libDaisy//src/hid/midi.h **** 
  46:../DaisyExamples/libDaisy//src/hid/midi.h ****         //defaults
  47:../DaisyExamples/libDaisy//src/hid/midi.h ****         uart_config.baudrate   = 31250;
  48:../DaisyExamples/libDaisy//src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  49:../DaisyExamples/libDaisy//src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  50:../DaisyExamples/libDaisy//src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  51:../DaisyExamples/libDaisy//src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  52:../DaisyExamples/libDaisy//src/hid/midi.h **** 
  53:../DaisyExamples/libDaisy//src/hid/midi.h ****         //user settings
  54:../DaisyExamples/libDaisy//src/hid/midi.h ****         uart_config.periph        = config.periph;
  55:../DaisyExamples/libDaisy//src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  56:../DaisyExamples/libDaisy//src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  57:../DaisyExamples/libDaisy//src/hid/midi.h **** 
  58:../DaisyExamples/libDaisy//src/hid/midi.h ****         uart_.Init(uart_config);
  59:../DaisyExamples/libDaisy//src/hid/midi.h ****     }
  60:../DaisyExamples/libDaisy//src/hid/midi.h **** 
  61:../DaisyExamples/libDaisy//src/hid/midi.h ****     inline void    StartRx() { uart_.StartRx(); }
  62:../DaisyExamples/libDaisy//src/hid/midi.h ****     inline size_t  Readable() { return uart_.Readable(); }
  63:../DaisyExamples/libDaisy//src/hid/midi.h ****     inline uint8_t Rx() { return uart_.PopRx(); }
  64:../DaisyExamples/libDaisy//src/hid/midi.h ****     inline bool    RxActive() { return uart_.RxActive(); }
  65:../DaisyExamples/libDaisy//src/hid/midi.h ****     inline void    FlushRx() { uart_.FlushRx(); }
  66:../DaisyExamples/libDaisy//src/hid/midi.h ****     inline void    Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
  67:../DaisyExamples/libDaisy//src/hid/midi.h **** 
  68:../DaisyExamples/libDaisy//src/hid/midi.h ****   private:
  69:../DaisyExamples/libDaisy//src/hid/midi.h ****     UartHandler uart_;
  70:../DaisyExamples/libDaisy//src/hid/midi.h **** };
  71:../DaisyExamples/libDaisy//src/hid/midi.h **** 
  72:../DaisyExamples/libDaisy//src/hid/midi.h **** /** 
  73:../DaisyExamples/libDaisy//src/hid/midi.h ****     @brief Simple MIDI Handler \n 
  74:../DaisyExamples/libDaisy//src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n 
  75:../DaisyExamples/libDaisy//src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
  76:../DaisyExamples/libDaisy//src/hid/midi.h ****     @author shensley
  77:../DaisyExamples/libDaisy//src/hid/midi.h ****     @date March 2020
  78:../DaisyExamples/libDaisy//src/hid/midi.h ****     @ingroup midi
  79:../DaisyExamples/libDaisy//src/hid/midi.h **** */
  80:../DaisyExamples/libDaisy//src/hid/midi.h **** template <typename Transport>
  81:../DaisyExamples/libDaisy//src/hid/midi.h **** class MidiHandler
  82:../DaisyExamples/libDaisy//src/hid/midi.h **** {
  83:../DaisyExamples/libDaisy//src/hid/midi.h ****   public:
  84:../DaisyExamples/libDaisy//src/hid/midi.h ****     MidiHandler() {}
  85:../DaisyExamples/libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 144              		.loc 7 85 5 view .LVU11
 145              	.LBB605:
 146              	.LBI605:
  26:../DaisyExamples/libDaisy//src/hid/midi.h **** 
 147              		.loc 7 26 5 view .LVU12
  26:../DaisyExamples/libDaisy//src/hid/midi.h **** 
 148              		.loc 7 26 5 is_stmt 0 view .LVU13
 149              	.LBE605:
 150              	.LBE604:
 151              	.LBB606:
 152              	.LBI606:
 153              		.file 8 "../DaisyExamples/libDaisy//src/hid/rgb_led.h"
   1:../DaisyExamples/libDaisy//src/hid/rgb_led.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/hid/rgb_led.h **** #ifndef DSY_RGB_LED_H
   3:../DaisyExamples/libDaisy//src/hid/rgb_led.h **** #define DSY_RGB_LED_H
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 8


   4:../DaisyExamples/libDaisy//src/hid/rgb_led.h **** #include "hid/led.h"
   5:../DaisyExamples/libDaisy//src/hid/rgb_led.h **** #include "util/color.h"
   6:../DaisyExamples/libDaisy//src/hid/rgb_led.h **** 
   7:../DaisyExamples/libDaisy//src/hid/rgb_led.h **** namespace daisy
   8:../DaisyExamples/libDaisy//src/hid/rgb_led.h **** {
   9:../DaisyExamples/libDaisy//src/hid/rgb_led.h **** /** @addtogroup feedback
  10:../DaisyExamples/libDaisy//src/hid/rgb_led.h ****     @{
  11:../DaisyExamples/libDaisy//src/hid/rgb_led.h **** */
  12:../DaisyExamples/libDaisy//src/hid/rgb_led.h **** 
  13:../DaisyExamples/libDaisy//src/hid/rgb_led.h **** /** 3x LEDs configured as an RGB for ease of use. */
  14:../DaisyExamples/libDaisy//src/hid/rgb_led.h **** class RgbLed
  15:../DaisyExamples/libDaisy//src/hid/rgb_led.h **** {
  16:../DaisyExamples/libDaisy//src/hid/rgb_led.h ****   public:
  17:../DaisyExamples/libDaisy//src/hid/rgb_led.h ****     RgbLed() {}
  18:../DaisyExamples/libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 154              		.loc 8 18 5 is_stmt 1 view .LVU14
 155              	.LBB607:
 156              	.LBI607:
 157              		.file 9 "../DaisyExamples/libDaisy//src/hid/led.h"
   1:../DaisyExamples/libDaisy//src/hid/led.h **** 
   2:../DaisyExamples/libDaisy//src/hid/led.h **** #pragma once
   3:../DaisyExamples/libDaisy//src/hid/led.h **** #ifndef DSY_LED_H
   4:../DaisyExamples/libDaisy//src/hid/led.h **** #define DSY_LED_H
   5:../DaisyExamples/libDaisy//src/hid/led.h **** #include "daisy_core.h"
   6:../DaisyExamples/libDaisy//src/hid/led.h **** #include "per/gpio.h"
   7:../DaisyExamples/libDaisy//src/hid/led.h **** 
   8:../DaisyExamples/libDaisy//src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../DaisyExamples/libDaisy//src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../DaisyExamples/libDaisy//src/hid/led.h **** */
  11:../DaisyExamples/libDaisy//src/hid/led.h **** 
  12:../DaisyExamples/libDaisy//src/hid/led.h **** namespace daisy
  13:../DaisyExamples/libDaisy//src/hid/led.h **** {
  14:../DaisyExamples/libDaisy//src/hid/led.h **** /**
  15:../DaisyExamples/libDaisy//src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../DaisyExamples/libDaisy//src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../DaisyExamples/libDaisy//src/hid/led.h ****     @author shensley
  18:../DaisyExamples/libDaisy//src/hid/led.h ****     @date March 2020
  19:../DaisyExamples/libDaisy//src/hid/led.h ****     @ingroup feedback
  20:../DaisyExamples/libDaisy//src/hid/led.h **** */
  21:../DaisyExamples/libDaisy//src/hid/led.h **** class Led
  22:../DaisyExamples/libDaisy//src/hid/led.h **** {
  23:../DaisyExamples/libDaisy//src/hid/led.h ****   public:
  24:../DaisyExamples/libDaisy//src/hid/led.h ****     Led() {}
  25:../DaisyExamples/libDaisy//src/hid/led.h ****     ~Led() {}
 158              		.loc 9 25 5 view .LVU15
 159              		.loc 9 25 5 is_stmt 0 view .LVU16
 160              	.LBE607:
 161              	.LBB608:
 162              	.LBI608:
 163              		.loc 9 25 5 is_stmt 1 view .LVU17
 164              		.loc 9 25 5 is_stmt 0 view .LVU18
 165              	.LBE608:
 166              	.LBB609:
 167              	.LBI609:
 168              		.loc 9 25 5 is_stmt 1 view .LVU19
 169              		.loc 9 25 5 is_stmt 0 view .LVU20
 170              	.LBE609:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 9


 171              	.LBE606:
 172              	.LBB610:
 173              	.LBI610:
 174              		.loc 8 18 5 is_stmt 1 view .LVU21
 175              	.LBB611:
 176              	.LBI611:
 177              		.loc 9 25 5 view .LVU22
 178              		.loc 9 25 5 is_stmt 0 view .LVU23
 179              	.LBE611:
 180              	.LBB612:
 181              	.LBI612:
 182              		.loc 9 25 5 is_stmt 1 view .LVU24
 183              		.loc 9 25 5 is_stmt 0 view .LVU25
 184              	.LBE612:
 185              	.LBB613:
 186              	.LBI613:
 187              		.loc 9 25 5 is_stmt 1 view .LVU26
 188              		.loc 9 25 5 is_stmt 0 view .LVU27
 189              	.LBE613:
 190              	.LBE610:
 191              	.LBB614:
 192              	.LBI614:
 193              		.file 10 "../DaisyExamples/libDaisy//src/hid/switch.h"
   1:../DaisyExamples/libDaisy//src/hid/switch.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../DaisyExamples/libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../DaisyExamples/libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../DaisyExamples/libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../DaisyExamples/libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../DaisyExamples/libDaisy//src/hid/switch.h **** 
   8:../DaisyExamples/libDaisy//src/hid/switch.h **** namespace daisy
   9:../DaisyExamples/libDaisy//src/hid/switch.h **** {
  10:../DaisyExamples/libDaisy//src/hid/switch.h **** /** 
  11:../DaisyExamples/libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../DaisyExamples/libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../DaisyExamples/libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../DaisyExamples/libDaisy//src/hid/switch.h ****     @date December 2019
  15:../DaisyExamples/libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../DaisyExamples/libDaisy//src/hid/switch.h **** */
  17:../DaisyExamples/libDaisy//src/hid/switch.h **** class Switch
  18:../DaisyExamples/libDaisy//src/hid/switch.h **** {
  19:../DaisyExamples/libDaisy//src/hid/switch.h ****   public:
  20:../DaisyExamples/libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../DaisyExamples/libDaisy//src/hid/switch.h ****     enum Type
  22:../DaisyExamples/libDaisy//src/hid/switch.h ****     {
  23:../DaisyExamples/libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../DaisyExamples/libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../DaisyExamples/libDaisy//src/hid/switch.h ****     };
  26:../DaisyExamples/libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../DaisyExamples/libDaisy//src/hid/switch.h ****     enum Polarity
  28:../DaisyExamples/libDaisy//src/hid/switch.h ****     {
  29:../DaisyExamples/libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../DaisyExamples/libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../DaisyExamples/libDaisy//src/hid/switch.h ****     };
  32:../DaisyExamples/libDaisy//src/hid/switch.h **** 
  33:../DaisyExamples/libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../DaisyExamples/libDaisy//src/hid/switch.h ****     enum Pull
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 10


  35:../DaisyExamples/libDaisy//src/hid/switch.h ****     {
  36:../DaisyExamples/libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../DaisyExamples/libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../DaisyExamples/libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../DaisyExamples/libDaisy//src/hid/switch.h ****     };
  40:../DaisyExamples/libDaisy//src/hid/switch.h **** 
  41:../DaisyExamples/libDaisy//src/hid/switch.h ****     Switch() {}
  42:../DaisyExamples/libDaisy//src/hid/switch.h ****     ~Switch() {}
 194              		.loc 10 42 5 is_stmt 1 view .LVU28
 195              		.loc 10 42 5 is_stmt 0 view .LVU29
 196              	.LBE614:
 197              	.LBB615:
 198              	.LBI615:
 199              		.loc 10 42 5 is_stmt 1 view .LVU30
 200              		.loc 10 42 5 is_stmt 0 view .LVU31
 201              	.LBE615:
 202              	.LBB616:
 203              	.LBI616:
 204              		.loc 5 23 5 is_stmt 1 view .LVU32
 205              		.loc 5 23 5 is_stmt 0 view .LVU33
 206              	.LBE616:
 207              	.LBB617:
 208              	.LBI617:
 209              		.loc 5 23 5 is_stmt 1 view .LVU34
 210              		.loc 5 23 5 is_stmt 0 view .LVU35
 211              	.LBE617:
 212              	.LBB618:
 213              	.LBI618:
 214              		.file 11 "../DaisyExamples/libDaisy//src/hid/encoder.h"
   1:../DaisyExamples/libDaisy//src/hid/encoder.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../DaisyExamples/libDaisy//src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../DaisyExamples/libDaisy//src/hid/encoder.h **** #include "daisy_core.h"
   5:../DaisyExamples/libDaisy//src/hid/encoder.h **** #include "per/gpio.h"
   6:../DaisyExamples/libDaisy//src/hid/encoder.h **** #include "hid/switch.h"
   7:../DaisyExamples/libDaisy//src/hid/encoder.h **** 
   8:../DaisyExamples/libDaisy//src/hid/encoder.h **** namespace daisy
   9:../DaisyExamples/libDaisy//src/hid/encoder.h **** {
  10:../DaisyExamples/libDaisy//src/hid/encoder.h **** /** 
  11:../DaisyExamples/libDaisy//src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../DaisyExamples/libDaisy//src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../DaisyExamples/libDaisy//src/hid/encoder.h ****     @author Stephen Hensley
  14:../DaisyExamples/libDaisy//src/hid/encoder.h ****     @date December 2019
  15:../DaisyExamples/libDaisy//src/hid/encoder.h ****     @ingroup controls
  16:../DaisyExamples/libDaisy//src/hid/encoder.h **** */
  17:../DaisyExamples/libDaisy//src/hid/encoder.h **** class Encoder
  18:../DaisyExamples/libDaisy//src/hid/encoder.h **** {
  19:../DaisyExamples/libDaisy//src/hid/encoder.h ****   public:
  20:../DaisyExamples/libDaisy//src/hid/encoder.h ****     Encoder() {}
  21:../DaisyExamples/libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 215              		.loc 11 21 5 is_stmt 1 view .LVU36
 216              	.LBB619:
 217              	.LBI619:
 218              		.loc 10 42 5 view .LVU37
 219              		.loc 10 42 5 is_stmt 0 view .LVU38
 220              	.LBE619:
 221              	.LBE618:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 11


 222              	.LBB620:
 223              	.LBI620:
 224              		.file 12 "../DaisyExamples/libDaisy//src/daisy_seed.h"
   1:../DaisyExamples/libDaisy//src/daisy_seed.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../DaisyExamples/libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../DaisyExamples/libDaisy//src/daisy_seed.h **** 
   5:../DaisyExamples/libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../DaisyExamples/libDaisy//src/daisy_seed.h **** 
   7:../DaisyExamples/libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../DaisyExamples/libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  10:../DaisyExamples/libDaisy//src/daisy_seed.h **** namespace daisy
  11:../DaisyExamples/libDaisy//src/daisy_seed.h **** {
  12:../DaisyExamples/libDaisy//src/daisy_seed.h **** /**
  13:../DaisyExamples/libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../DaisyExamples/libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  16:../DaisyExamples/libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../DaisyExamples/libDaisy//src/daisy_seed.h **** */
  18:../DaisyExamples/libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../DaisyExamples/libDaisy//src/daisy_seed.h **** {
  20:../DaisyExamples/libDaisy//src/daisy_seed.h ****   public:
  21:../DaisyExamples/libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../DaisyExamples/libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 225              		.loc 12 22 5 is_stmt 1 view .LVU39
 226              	.LBB621:
 227              	.LBI621:
 228              		.file 13 "../DaisyExamples/libDaisy//src/sys/system.h"
   1:../DaisyExamples/libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../DaisyExamples/libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../DaisyExamples/libDaisy//src/sys/system.h **** 
   4:../DaisyExamples/libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../DaisyExamples/libDaisy//src/sys/system.h **** 
   6:../DaisyExamples/libDaisy//src/sys/system.h **** #include <cstdint>
   7:../DaisyExamples/libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../DaisyExamples/libDaisy//src/sys/system.h **** 
   9:../DaisyExamples/libDaisy//src/sys/system.h **** namespace daisy
  10:../DaisyExamples/libDaisy//src/sys/system.h **** {
  11:../DaisyExamples/libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../DaisyExamples/libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../DaisyExamples/libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../DaisyExamples/libDaisy//src/sys/system.h ****  **
  15:../DaisyExamples/libDaisy//src/sys/system.h ****  ** @author shensley
  16:../DaisyExamples/libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../DaisyExamples/libDaisy//src/sys/system.h ****  */
  18:../DaisyExamples/libDaisy//src/sys/system.h **** class System
  19:../DaisyExamples/libDaisy//src/sys/system.h **** {
  20:../DaisyExamples/libDaisy//src/sys/system.h ****   public:
  21:../DaisyExamples/libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../DaisyExamples/libDaisy//src/sys/system.h ****     struct Config
  23:../DaisyExamples/libDaisy//src/sys/system.h ****     {
  24:../DaisyExamples/libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../DaisyExamples/libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../DaisyExamples/libDaisy//src/sys/system.h ****         {
  27:../DaisyExamples/libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../DaisyExamples/libDaisy//src/sys/system.h ****             FREQ_480MHZ,
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 12


  29:../DaisyExamples/libDaisy//src/sys/system.h ****         };
  30:../DaisyExamples/libDaisy//src/sys/system.h **** 
  31:../DaisyExamples/libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../DaisyExamples/libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../DaisyExamples/libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../DaisyExamples/libDaisy//src/sys/system.h ****          ** */
  35:../DaisyExamples/libDaisy//src/sys/system.h ****         void Defaults()
  36:../DaisyExamples/libDaisy//src/sys/system.h ****         {
  37:../DaisyExamples/libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../DaisyExamples/libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../DaisyExamples/libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../DaisyExamples/libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../DaisyExamples/libDaisy//src/sys/system.h ****         }
  42:../DaisyExamples/libDaisy//src/sys/system.h **** 
  43:../DaisyExamples/libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../DaisyExamples/libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../DaisyExamples/libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../DaisyExamples/libDaisy//src/sys/system.h ****          ** */
  47:../DaisyExamples/libDaisy//src/sys/system.h ****         void Boost()
  48:../DaisyExamples/libDaisy//src/sys/system.h ****         {
  49:../DaisyExamples/libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../DaisyExamples/libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../DaisyExamples/libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../DaisyExamples/libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../DaisyExamples/libDaisy//src/sys/system.h ****         }
  54:../DaisyExamples/libDaisy//src/sys/system.h **** 
  55:../DaisyExamples/libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../DaisyExamples/libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../DaisyExamples/libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../DaisyExamples/libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../DaisyExamples/libDaisy//src/sys/system.h ****     };
  60:../DaisyExamples/libDaisy//src/sys/system.h **** 
  61:../DaisyExamples/libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../DaisyExamples/libDaisy//src/sys/system.h ****      * 
  63:../DaisyExamples/libDaisy//src/sys/system.h ****      */
  64:../DaisyExamples/libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../DaisyExamples/libDaisy//src/sys/system.h ****     {
  66:../DaisyExamples/libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../DaisyExamples/libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../DaisyExamples/libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../DaisyExamples/libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../DaisyExamples/libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../DaisyExamples/libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../DaisyExamples/libDaisy//src/sys/system.h ****         SDRAM,
  73:../DaisyExamples/libDaisy//src/sys/system.h ****         QSPI,
  74:../DaisyExamples/libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../DaisyExamples/libDaisy//src/sys/system.h ****     };
  76:../DaisyExamples/libDaisy//src/sys/system.h **** 
  77:../DaisyExamples/libDaisy//src/sys/system.h ****     System() {}
  78:../DaisyExamples/libDaisy//src/sys/system.h ****     ~System() {}
 229              		.loc 13 78 5 view .LVU40
 230              		.loc 13 78 5 is_stmt 0 view .LVU41
 231              	.LBE621:
 232              	.LBB622:
 233              	.LBI622:
 234              		.file 14 "../DaisyExamples/libDaisy//src/hid/usb.h"
   1:../DaisyExamples/libDaisy//src/hid/usb.h **** #pragma once
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 13


   2:../DaisyExamples/libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../DaisyExamples/libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../DaisyExamples/libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../DaisyExamples/libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../DaisyExamples/libDaisy//src/hid/usb.h **** 
   7:../DaisyExamples/libDaisy//src/hid/usb.h **** namespace daisy
   8:../DaisyExamples/libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../DaisyExamples/libDaisy//src/hid/usb.h ****     @{
  10:../DaisyExamples/libDaisy//src/hid/usb.h **** */
  11:../DaisyExamples/libDaisy//src/hid/usb.h **** 
  12:../DaisyExamples/libDaisy//src/hid/usb.h **** {
  13:../DaisyExamples/libDaisy//src/hid/usb.h **** /** 
  14:../DaisyExamples/libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../DaisyExamples/libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../DaisyExamples/libDaisy//src/hid/usb.h ****     @date December 2019
  17:../DaisyExamples/libDaisy//src/hid/usb.h **** */
  18:../DaisyExamples/libDaisy//src/hid/usb.h **** class UsbHandle
  19:../DaisyExamples/libDaisy//src/hid/usb.h **** {
  20:../DaisyExamples/libDaisy//src/hid/usb.h ****   public:
  21:../DaisyExamples/libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../DaisyExamples/libDaisy//src/hid/usb.h ****     enum class Result
  23:../DaisyExamples/libDaisy//src/hid/usb.h ****     {
  24:../DaisyExamples/libDaisy//src/hid/usb.h ****         OK,
  25:../DaisyExamples/libDaisy//src/hid/usb.h ****         ERR,
  26:../DaisyExamples/libDaisy//src/hid/usb.h ****     };
  27:../DaisyExamples/libDaisy//src/hid/usb.h **** 
  28:../DaisyExamples/libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../DaisyExamples/libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../DaisyExamples/libDaisy//src/hid/usb.h ****     {
  31:../DaisyExamples/libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../DaisyExamples/libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../DaisyExamples/libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../DaisyExamples/libDaisy//src/hid/usb.h ****     };
  35:../DaisyExamples/libDaisy//src/hid/usb.h **** 
  36:../DaisyExamples/libDaisy//src/hid/usb.h **** 
  37:../DaisyExamples/libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../DaisyExamples/libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../DaisyExamples/libDaisy//src/hid/usb.h **** 
  40:../DaisyExamples/libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../DaisyExamples/libDaisy//src/hid/usb.h **** 
  42:../DaisyExamples/libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
 235              		.loc 14 42 5 is_stmt 1 view .LVU42
 236              		.loc 14 42 5 is_stmt 0 view .LVU43
 237              	.LBE622:
 238              	.LBB623:
 239              	.LBI623:
 240              		.file 15 "../DaisyExamples/libDaisy//src/per/adc.h"
   1:../DaisyExamples/libDaisy//src/per/adc.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../DaisyExamples/libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../DaisyExamples/libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../DaisyExamples/libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../DaisyExamples/libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../DaisyExamples/libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../DaisyExamples/libDaisy//src/per/adc.h **** 
   9:../DaisyExamples/libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../DaisyExamples/libDaisy//src/per/adc.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 14


  11:../DaisyExamples/libDaisy//src/per/adc.h **** namespace daisy
  12:../DaisyExamples/libDaisy//src/per/adc.h **** {
  13:../DaisyExamples/libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../DaisyExamples/libDaisy//src/per/adc.h ****     @{
  15:../DaisyExamples/libDaisy//src/per/adc.h **** */
  16:../DaisyExamples/libDaisy//src/per/adc.h **** 
  17:../DaisyExamples/libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../DaisyExamples/libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../DaisyExamples/libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../DaisyExamples/libDaisy//src/per/adc.h **** */
  21:../DaisyExamples/libDaisy//src/per/adc.h **** 
  22:../DaisyExamples/libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../DaisyExamples/libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../DaisyExamples/libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../DaisyExamples/libDaisy//src/per/adc.h ****  *           one channel.
  26:../DaisyExamples/libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../DaisyExamples/libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../DaisyExamples/libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../DaisyExamples/libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../DaisyExamples/libDaisy//src/per/adc.h **** */
  31:../DaisyExamples/libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../DaisyExamples/libDaisy//src/per/adc.h **** {
  33:../DaisyExamples/libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../DaisyExamples/libDaisy//src/per/adc.h ****     enum MuxPin
  35:../DaisyExamples/libDaisy//src/per/adc.h ****     {
  36:../DaisyExamples/libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../DaisyExamples/libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../DaisyExamples/libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../DaisyExamples/libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../DaisyExamples/libDaisy//src/per/adc.h ****     };
  41:../DaisyExamples/libDaisy//src/per/adc.h **** 
  42:../DaisyExamples/libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  43:../DaisyExamples/libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../DaisyExamples/libDaisy//src/per/adc.h ****      */
  45:../DaisyExamples/libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../DaisyExamples/libDaisy//src/per/adc.h **** 
  47:../DaisyExamples/libDaisy//src/per/adc.h ****     /** 
  48:../DaisyExamples/libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../DaisyExamples/libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../DaisyExamples/libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../DaisyExamples/libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../DaisyExamples/libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../DaisyExamples/libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../DaisyExamples/libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../DaisyExamples/libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../DaisyExamples/libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../DaisyExamples/libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../DaisyExamples/libDaisy//src/per/adc.h ****     */
  59:../DaisyExamples/libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../DaisyExamples/libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../DaisyExamples/libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../DaisyExamples/libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../DaisyExamples/libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../DaisyExamples/libDaisy//src/per/adc.h **** 
  65:../DaisyExamples/libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../DaisyExamples/libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../DaisyExamples/libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 15


  68:../DaisyExamples/libDaisy//src/per/adc.h **** };
  69:../DaisyExamples/libDaisy//src/per/adc.h **** 
  70:../DaisyExamples/libDaisy//src/per/adc.h **** /**
  71:../DaisyExamples/libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../DaisyExamples/libDaisy//src/per/adc.h **** */
  73:../DaisyExamples/libDaisy//src/per/adc.h **** class AdcHandle
  74:../DaisyExamples/libDaisy//src/per/adc.h **** {
  75:../DaisyExamples/libDaisy//src/per/adc.h ****   public:
  76:../DaisyExamples/libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../DaisyExamples/libDaisy//src/per/adc.h ****     enum OverSampling
  78:../DaisyExamples/libDaisy//src/per/adc.h ****     {
  79:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../DaisyExamples/libDaisy//src/per/adc.h ****     };
  91:../DaisyExamples/libDaisy//src/per/adc.h **** 
  92:../DaisyExamples/libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../DaisyExamples/libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 241              		.loc 15 93 5 is_stmt 1 view .LVU44
 242              		.loc 15 93 5 is_stmt 0 view .LVU45
 243              	.LBE623:
 244              	.LBB624:
 245              	.LBI624:
 246              		.file 16 "../DaisyExamples/libDaisy//src/hid/audio.h"
   1:../DaisyExamples/libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../DaisyExamples/libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../DaisyExamples/libDaisy//src/hid/audio.h **** 
   4:../DaisyExamples/libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../DaisyExamples/libDaisy//src/hid/audio.h **** 
   6:../DaisyExamples/libDaisy//src/hid/audio.h **** namespace daisy
   7:../DaisyExamples/libDaisy//src/hid/audio.h **** {
   8:../DaisyExamples/libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../DaisyExamples/libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../DaisyExamples/libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../DaisyExamples/libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../DaisyExamples/libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../DaisyExamples/libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../DaisyExamples/libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../DaisyExamples/libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../DaisyExamples/libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../DaisyExamples/libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../DaisyExamples/libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../DaisyExamples/libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../DaisyExamples/libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../DaisyExamples/libDaisy//src/hid/audio.h ****  */
  22:../DaisyExamples/libDaisy//src/hid/audio.h **** class AudioHandle
  23:../DaisyExamples/libDaisy//src/hid/audio.h **** {
  24:../DaisyExamples/libDaisy//src/hid/audio.h ****   public:
  25:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 16


  26:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../DaisyExamples/libDaisy//src/hid/audio.h ****     struct Config
  28:../DaisyExamples/libDaisy//src/hid/audio.h ****     {
  29:../DaisyExamples/libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../DaisyExamples/libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  32:../DaisyExamples/libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../DaisyExamples/libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  35:../DaisyExamples/libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../DaisyExamples/libDaisy//src/hid/audio.h ****         float postgain;
  37:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  38:../DaisyExamples/libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../DaisyExamples/libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../DaisyExamples/libDaisy//src/hid/audio.h ****          */
  41:../DaisyExamples/libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  43:../DaisyExamples/libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../DaisyExamples/libDaisy//src/hid/audio.h ****         Config()
  45:../DaisyExamples/libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../DaisyExamples/libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../DaisyExamples/libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../DaisyExamples/libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../DaisyExamples/libDaisy//src/hid/audio.h ****         {
  50:../DaisyExamples/libDaisy//src/hid/audio.h ****         }
  51:../DaisyExamples/libDaisy//src/hid/audio.h ****     };
  52:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  53:../DaisyExamples/libDaisy//src/hid/audio.h ****     enum class Result
  54:../DaisyExamples/libDaisy//src/hid/audio.h ****     {
  55:../DaisyExamples/libDaisy//src/hid/audio.h ****         OK,
  56:../DaisyExamples/libDaisy//src/hid/audio.h ****         ERR,
  57:../DaisyExamples/libDaisy//src/hid/audio.h ****     };
  58:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  59:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../DaisyExamples/libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../DaisyExamples/libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../DaisyExamples/libDaisy//src/hid/audio.h ****      */
  63:../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  65:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../DaisyExamples/libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../DaisyExamples/libDaisy//src/hid/audio.h ****      */
  68:../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  70:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../DaisyExamples/libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../DaisyExamples/libDaisy//src/hid/audio.h ****      */
  73:../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../DaisyExamples/libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../DaisyExamples/libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  77:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../DaisyExamples/libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../DaisyExamples/libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../DaisyExamples/libDaisy//src/hid/audio.h ****     */
  81:../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../DaisyExamples/libDaisy//src/hid/audio.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 17


  83:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../DaisyExamples/libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../DaisyExamples/libDaisy//src/hid/audio.h ****     */
  86:../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  88:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../DaisyExamples/libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../DaisyExamples/libDaisy//src/hid/audio.h ****      */
  91:../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../DaisyExamples/libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../DaisyExamples/libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  95:../DaisyExamples/libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../DaisyExamples/libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 247              		.loc 16 96 5 is_stmt 1 view .LVU46
 248              		.loc 16 96 5 is_stmt 0 view .LVU47
 249              	.LBE624:
 250              	.LBE620:
 251              		.loc 6 36 18 view .LVU48
 252 0000 7047     		bx	lr
 253              		.cfi_endproc
 254              	.LFE4792:
 256              		.weak	_ZN5daisy8DaisyPodD1Ev
 257              		.thumb_set _ZN5daisy8DaisyPodD1Ev,_ZN5daisy8DaisyPodD2Ev
 258 0002 00BF     		.section	.text._ZN7daisysp9DelayLineIfLj120000EED2Ev,"axG",%progbits,_ZN7daisysp9DelayLineIfLj1200
 259              		.align	1
 260              		.p2align 2,,3
 261              		.weak	_ZN7daisysp9DelayLineIfLj120000EED2Ev
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv5-d16
 267              	_ZN7daisysp9DelayLineIfLj120000EED2Ev:
 268              	.LVL5:
 269              	.LFB7931:
 270              		.file 17 "../DaisyExamples/DaisySP//Source/Utility/delayline.h"
   1:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** #pragma once
   2:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** #ifndef DSY_DELAY_H
   3:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** #define DSY_DELAY_H
   4:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** #include <stdlib.h>
   5:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** #include <stdint.h>
   6:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** namespace daisysp
   7:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** {
   8:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** /** Simple Delay line.
   9:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** November 2019
  10:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** 
  11:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** Converted to Template December 2019
  12:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** 
  13:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** declaration example: (1 second of floats)
  14:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** 
  15:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** DelayLine<float, SAMPLE_RATE> del;
  16:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** 
  17:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** By: shensley
  18:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** */
  19:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** template <typename T, size_t max_size>
  20:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** class DelayLine
  21:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 18


  22:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****   public:
  23:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     DelayLine() {}
  24:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     ~DelayLine() {}
 271              		.loc 17 24 5 is_stmt 1 view -0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		@ link register save eliminated.
 276              		.loc 17 24 19 is_stmt 0 view .LVU50
 277 0000 7047     		bx	lr
 278              		.cfi_endproc
 279              	.LFE7931:
 281              		.weak	_ZN7daisysp9DelayLineIfLj120000EED1Ev
 282              		.thumb_set _ZN7daisysp9DelayLineIfLj120000EED1Ev,_ZN7daisysp9DelayLineIfLj120000EED2Ev
 283              		.section	.text._ZN6TTrackD2Ev,"axG",%progbits,_ZN6TTrackD5Ev,comdat
 284              		.align	1
 285              		.p2align 2,,3
 286              		.weak	_ZN6TTrackD2Ev
 287              		.syntax unified
 288              		.thumb
 289              		.thumb_func
 290              		.fpu fpv5-d16
 292              	_ZN6TTrackD2Ev:
 293              	.LVL6:
 294              	.LFB7925:
 295              		.file 18 "src/TTrack.h"
   1:src/TTrack.h  **** /*Based on Adam Stark's BTrack. TODO LICENSING*/
   2:src/TTrack.h  **** #ifndef __TTRACK_H
   3:src/TTrack.h  **** #define __TTRACK_H
   4:src/TTrack.h  **** 
   5:src/TTrack.h  **** #include "OnsetDF.h"
   6:src/TTrack.h  **** #include <etl/circular_buffer.h>
   7:src/TTrack.h  **** #include <vector>
   8:src/TTrack.h  **** 
   9:src/TTrack.h  **** class TTrack
 296              		.loc 18 9 7 is_stmt 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		.loc 18 9 7 is_stmt 0 view .LVU52
 301 0000 38B5     		push	{r3, r4, r5, lr}
 302              		.cfi_def_cfa_offset 16
 303              		.cfi_offset 3, -16
 304              		.cfi_offset 4, -12
 305              		.cfi_offset 5, -8
 306              		.cfi_offset 14, -4
 307              	.LBB661:
 308              	.LBB662:
 309              	.LBB663:
 310              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_vector
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Vector implementation -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // terms of the GNU General Public License as published by the
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 19


   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1996
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this  software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /** @file bits/stl_vector.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifndef _STL_VECTOR_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _STL_VECTOR_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/functexcept.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/concept_check.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <initializer_list>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 20


  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201703L
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # include <compare>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <debug/assertions.h>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** extern "C" void
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  const void*, const void*);
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc>
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     struct _Vector_base
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        	pointer;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl_data
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_start;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_finish;
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_end_of_storage;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_start = __x._M_start;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // information used by TBAA.
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Vector_impl_data __tmp;
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 21


 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __tmp._M_copy_data(*this);
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_copy_data(__x);
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __x._M_copy_data(__tmp);
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type()
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename = _Tp_alloc_type>
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type) { }
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename _Up>
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 22


 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      if (__impl._M_start)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Reinit
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_on_dealloc(_M_impl);
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Reinit()
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		if (_M_impl._M_start)
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    _M_impl._M_finish);
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 23


 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    private:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      size_type _M_n;
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc allocator_type;
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp_alloc_type&
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp_alloc_type&
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       allocator_type
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() = default;
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() { }
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 24


 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n)
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl()
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(std::move(__a)) { }
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__x.get_allocator() == __a)
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _M_create_storage(__n);
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 311              		.loc 19 335 15 view .LVU53
 312 0002 00F58055 		add	r5, r0, #4096
 313              	.LBE663:
 314              	.LBE662:
 315              	.LBE661:
 316              		.loc 18 9 7 view .LVU54
 317 0006 0446     		mov	r4, r0
 318              	.LVL7:
 319              	.LBB682:
 320              	.LBI661:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 25


 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_impl _M_impl;
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pointer
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_allocate(size_t __n)
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__p)
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_create_storage(size_t __n)
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     };
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /**
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  individual elements in any order.
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @ingroup sequences
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Tp  Type of element.
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  elements in any order and saves the user from worrying about
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  also provided as with C-style arrays.
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   */
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Concept requirements.
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus < 201103L
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 26


 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus > 201703L || defined __STRICT_ANSI__
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Tp					value_type;
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::pointer			pointer;
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator;
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef size_t					size_type;
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef ptrdiff_t					difference_type;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc					allocator_type;
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(true_type)
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(false_type)
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return false; }
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_use_relocate()
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 27


 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return __result; }
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // C++11
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_allocate;
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_deallocate;
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_impl;
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() = default;
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() { }
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator object.
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructed elements.
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 28


 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_default_initialize(__n); }
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value,
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector copy constructor.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x  will not be copied
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x)
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move constructor.
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 29


 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  moved instance.
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector.
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&&) noexcept = default;
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Copy constructor with alternative allocator
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(), __a)
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m, std::move(__rv))
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m)
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__rv.get_allocator() == __m)
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (!__rv.empty())
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish =
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  this->_M_impl._M_start,
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __rv.clear();
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Move constructor with alternative allocator
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       noexcept( noexcept(
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a __l.
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This will call the element type's copy constructor N times
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 30


 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(initializer_list<value_type> __l,
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a)
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from a range.
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  An input iterator.
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [first,last).
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  random-access, then this will call the elements' copy
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor, and logN memory reallocations.
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  responsibility.
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 321              		.loc 19 678 7 is_stmt 1 view .LVU55
 322              	.LBB679:
 323              	.LBI679:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 31


 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 324              		.loc 19 276 7 view .LVU56
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 325              		.loc 19 276 7 is_stmt 0 view .LVU57
 326              	.LBE679:
 327              	.LBB680:
 328              	.LBI680:
 329              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\alloc_trai
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** /** @file bits/alloc_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/stl_construct.h>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/memoryfwd.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/allocator.h>
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/ptr_traits.h>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <ext/numeric_traits.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** {
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   struct __allocator_traits_base
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 32


  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up>
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind<_Tp, _Up,
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   protected:
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   };
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Up>
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using __alloc_rebind
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @ingroup allocators
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   */
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef _Alloc allocator_type;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's pointer type.
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 33


 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = _Func<_Alloc>;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT>
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT>
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const pointer type.
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's void pointer type.
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's difference type
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 34


 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's size type
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 35


 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr pointer
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n); }
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct __construct_helper
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename _Alloc2,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static true_type __test(int);
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename>
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static false_type __test(...);
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using __has_construct
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.destroy(__p); }
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ std::_Destroy(__p); }
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 36


 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.max_size())
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.max_size(); }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr size_type
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    / sizeof(value_type);
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr _Alloc2
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a; }
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 37


 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  arguments @a __args...
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_max_size(__a, 0); }
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 38


 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_select(__rhs, 0); }
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus > 201703L
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /// Partial specialization for std::allocator.
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using value_type = _Tp;
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's pointer type.
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = _Tp*;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const pointer type.
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = const _Tp*;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's void pointer type.
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = void*;
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const void pointer type.
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = const void*;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's difference type
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's size type
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = std::size_t;
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on move assignment
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on swap
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap = false_type;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal = true_type;
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 39


 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n, __hint);
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n);
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *	       an object of type `_Up`.
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up, typename... _Args>
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 40


 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.construct(__p, std::forward<_Args>(__args)...);
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.destroy(__p);
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::destroy_at(__p);
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size()
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.max_size();
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return size_t(-1) / sizeof(value_type);
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR allocator_type
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 41


 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc& __one, const _Alloc& __two, true_type)
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = __two; }
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(_Alloc& __one, const _Alloc& __two)
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_copy_assignment __pocca;
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocca::value)
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = __two;
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_copy(__one, __two, __pocca());
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     constexpr _Alloc
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(const _Alloc& __a)
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       return __traits::select_on_container_copy_construction(__a);
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = std::move(__two); }
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_move(_Alloc& __one, _Alloc& __two)
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_move_assignment __pocma;
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocma::value)
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = std::move(__two);
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_move(__one, __two, __pocma());
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 42


 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc& __one, _Alloc& __two, true_type)
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using std::swap;
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       swap(__one, __two);
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc&, _Alloc&, false_type)
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_swap(_Alloc& __one, _Alloc& __two)
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_swap __pocs;
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocs::value)
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using std::swap;
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  swap(__one, __two);
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_swap(__one, __two, __pocs());
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp,
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename _ValueT = __remove_cvref_t<typename _Alloc::value_type>,
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename = void>
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : false_type
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp, typename _ValueT>
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl<_Alloc, _Tp, _ValueT,
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<decltype(allocator_traits<_Alloc>::construct(
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Alloc&>(), std::declval<_ValueT*>(),
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Tp>()))>>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is CopyInsertable into containers using _Alloc
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc,
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				 typename _Alloc::value_type const&>::type
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires CopyConstructible
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable<allocator<_Tp>>
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 43


 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_copy_constructible<_Tp>
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is MoveInsertable into containers using _Alloc
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc, typename _Alloc::value_type>::type
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires MoveConstructible
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable<allocator<_Tp>>
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_move_constructible<_Tp>
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // Trait to detect Allocator-like types.
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename = void>
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator : false_type { };
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator<_Alloc,
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<typename _Alloc::value_type,
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	       decltype(std::declval<_Alloc&>().allocate(size_t{}))>>
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type { };
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireAllocator
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<__is_allocator<_Alloc>::value, _Alloc>::type;
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireNotAllocator
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<!__is_allocator<_Alloc>::value, _Alloc>::type;
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif // C++11
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * Destroy a range of objects using the supplied allocator.  For
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * non-default allocators we do not optimize away invocation of
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * destroy() even if _Tp has a trivial destructor.
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    */
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Allocator>
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     void
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	     _Allocator& __alloc)
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       for (; __first != __last; ++__first)
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201103L
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__alloc.destroy(std::__addressof(*__first));
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	allocator_traits<_Allocator>::destroy(__alloc,
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 					      std::__addressof(*__first));
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Tp>
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 44


 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 330              		.loc 20 735 5 is_stmt 1 view .LVU58
 331              		.loc 20 735 5 is_stmt 0 view .LVU59
 332              	.LBE680:
 333              	.LBB681:
 334              	.LBI662:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 335              		.loc 19 333 7 is_stmt 1 view .LVU60
 336              	.LBB678:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 337              		.loc 19 335 15 is_stmt 0 view .LVU61
 338 0008 D5F81004 		ldr	r0, [r5, #1040]
 339              	.LVL8:
 340              	.LBB664:
 341              	.LBI664:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 342              		.loc 19 350 7 is_stmt 1 view .LVU62
 343              	.LBB665:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 344              		.loc 19 353 2 is_stmt 0 view .LVU63
 345 000c 20B1     		cbz	r0, .L9
 346              	.LVL9:
 347              	.LBB666:
 348              	.LBI666:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 349              		.loc 20 491 7 is_stmt 1 view .LVU64
 350              	.LBB667:
 351              	.LBB668:
 352              	.LBI668:
 353              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\new_allocat
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 45


  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  */
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/c++config.h>
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <new>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/move.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <type_traits>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** {
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   /**
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @ingroup allocators
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all allocation calls operator new
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    */
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   template<typename _Tp>
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     class new_allocator
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     {
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     public:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp        value_type;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::size_t     size_type;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp*       pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp&       reference;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	struct rebind
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 46


  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       pointer
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       const_pointer
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // about what the return value is when __n == 0.
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (__n > this->_M_max_size())
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       void
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       deallocate(_Tp* __p, size_type __t)
 354              		.loc 21 120 7 view .LVU65
 355              	.LBE668:
 356              	.LBE667:
 357              	.LBE666:
 358              	.LBE665:
 359              	.LBE664:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 360              		.loc 19 336 35 is_stmt 0 view .LVU66
 361 000e D5F81814 		ldr	r1, [r5, #1048]
 362              	.LBB674:
 363              	.LBB673:
 364              	.LBB672:
 365              	.LBB671:
 366              	.LBB670:
 367              	.LBB669:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    ::operator delete(__p,
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 47


 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # if __cpp_sized_deallocation
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      __t * sizeof(_Tp),
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # endif
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return;
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	::operator delete(__p
 368              		.loc 21 133 19 view .LVU67
 369 0012 091A     		subs	r1, r1, r0
 370 0014 FFF7FEFF 		bl	_ZdlPvj
 371              	.LVL10:
 372              	.L9:
 373              		.loc 21 133 19 view .LVU68
 374              	.LBE669:
 375              	.LBE670:
 376              	.LBE671:
 377              	.LBE672:
 378              	.LBE673:
 379              	.LBE674:
 380              	.LBB675:
 381              	.LBI675:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 382              		.loc 19 128 14 is_stmt 1 view .LVU69
 383              	.LBB676:
 384              	.LBI676:
 385              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\allocator.
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Allocators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Copyright (c) 1996-1997
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 48


  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * that both that copyright notice and this permission notice appear
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * representations about the suitability of this software for any
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /** @file bits/allocator.h
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  This is an internal header file, included by other library headers.
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #ifndef _ALLOCATOR_H
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define _ALLOCATOR_H 1
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/memoryfwd.h>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <type_traits>
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** {
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @addtogroup allocators
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @{
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /// allocator<void> specialization.
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator<void>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void        value_type;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t      size_type;
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t   difference_type;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void*       pointer;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const void* const_pointer;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #else
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() = default;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	constexpr
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Up>&) { }
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // ! C++20
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L && __cplusplus <= 201703L
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 49


  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up, typename... _Args>
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	destroy(_Up* __p)
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ __p->~_Up(); }
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // C++11 to C++17
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     };
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  for further details.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<typename _Tp>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator : public __allocator_base<_Tp>
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp        value_type;
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t     size_type;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t  difference_type;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp*       pointer;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp* const_pointer;
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp&       reference;
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp& const_reference;
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 50


 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // Avoid implicit deprecation.
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator& operator=(const allocator&) = default;
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	_GLIBCXX20_CONSTEXPR
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cpp_constexpr_dynamic_alloc
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       constexpr
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 386              		.loc 22 162 7 view .LVU70
 387              	.LBB677:
 388              	.LBI677:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 389              		.loc 21 89 7 view .LVU71
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 390              		.loc 21 89 7 is_stmt 0 view .LVU72
 391              	.LBE677:
 392              	.LBE676:
 393              	.LBE675:
 394              	.LBE678:
 395              	.LBE681:
 396              	.LBE682:
 397              	.LBB683:
 398              	.LBI683:
 399              		.loc 19 678 7 is_stmt 1 view .LVU73
 400              	.LBB684:
 401              	.LBI684:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 402              		.loc 19 276 7 view .LVU74
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 403              		.loc 19 276 7 is_stmt 0 view .LVU75
 404              	.LBE684:
 405              	.LBB685:
 406              	.LBI685:
 407              		.loc 20 735 5 is_stmt 1 view .LVU76
 408              		.loc 20 735 5 is_stmt 0 view .LVU77
 409              	.LBE685:
 410              	.LBB686:
 411              	.LBI686:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 412              		.loc 19 333 7 is_stmt 1 view .LVU78
 413              	.LBB687:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 414              		.loc 19 335 15 is_stmt 0 view .LVU79
 415 0018 A869     		ldr	r0, [r5, #24]
 416              	.LVL11:
 417              	.LBB688:
 418              	.LBI688:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 51


 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 419              		.loc 19 350 7 is_stmt 1 view .LVU80
 420              	.LBB689:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 421              		.loc 19 353 2 is_stmt 0 view .LVU81
 422 001a 18B1     		cbz	r0, .L10
 423              	.LVL12:
 424              	.LBB690:
 425              	.LBI690:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 426              		.loc 20 491 7 is_stmt 1 view .LVU82
 427              	.LBB691:
 428              	.LBB692:
 429              	.LBI692:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 430              		.loc 21 120 7 view .LVU83
 431              	.LBE692:
 432              	.LBE691:
 433              	.LBE690:
 434              	.LBE689:
 435              	.LBE688:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 436              		.loc 19 336 35 is_stmt 0 view .LVU84
 437 001c 296A     		ldr	r1, [r5, #32]
 438              	.LBB698:
 439              	.LBB697:
 440              	.LBB696:
 441              	.LBB695:
 442              	.LBB694:
 443              	.LBB693:
 444              		.loc 21 133 19 view .LVU85
 445 001e 091A     		subs	r1, r1, r0
 446 0020 FFF7FEFF 		bl	_ZdlPvj
 447              	.LVL13:
 448              	.L10:
 449              		.loc 21 133 19 view .LVU86
 450              	.LBE693:
 451              	.LBE694:
 452              	.LBE695:
 453              	.LBE696:
 454              	.LBE697:
 455              	.LBE698:
 456              	.LBB699:
 457              	.LBI699:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 458              		.loc 19 128 14 is_stmt 1 view .LVU87
 459              	.LBB700:
 460              	.LBI700:
 461              		.loc 22 162 7 view .LVU88
 462              	.LBB701:
 463              	.LBI701:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 464              		.loc 21 89 7 view .LVU89
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 465              		.loc 21 89 7 is_stmt 0 view .LVU90
 466              	.LBE701:
 467              	.LBE700:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 52


 468              	.LBE699:
 469              	.LBE687:
 470              	.LBE686:
 471              	.LBE683:
 472              	.LBB702:
 473              	.LBI702:
 474              		.file 23 "./lib/etl/include/etl/circular_buffer.h"
   1:./lib/etl/include/etl/circular_buffer.h **** ///\file
   2:./lib/etl/include/etl/circular_buffer.h **** 
   3:./lib/etl/include/etl/circular_buffer.h **** /******************************************************************************
   4:./lib/etl/include/etl/circular_buffer.h **** The MIT License(MIT)
   5:./lib/etl/include/etl/circular_buffer.h **** 
   6:./lib/etl/include/etl/circular_buffer.h **** Embedded Template Library.
   7:./lib/etl/include/etl/circular_buffer.h **** https://github.com/ETLCPP/etl
   8:./lib/etl/include/etl/circular_buffer.h **** https://www.etlcpp.com
   9:./lib/etl/include/etl/circular_buffer.h **** 
  10:./lib/etl/include/etl/circular_buffer.h **** Copyright(c) 2020 John Wellbelove
  11:./lib/etl/include/etl/circular_buffer.h **** 
  12:./lib/etl/include/etl/circular_buffer.h **** Permission is hereby granted, free of charge, to any person obtaining a copy
  13:./lib/etl/include/etl/circular_buffer.h **** of this software and associated documentation files(the "Software"), to deal
  14:./lib/etl/include/etl/circular_buffer.h **** in the Software without restriction, including without limitation the rights
  15:./lib/etl/include/etl/circular_buffer.h **** to use, copy, modify, merge, publish, distribute, sublicense, and / or sell
  16:./lib/etl/include/etl/circular_buffer.h **** copies of the Software, and to permit persons to whom the Software is
  17:./lib/etl/include/etl/circular_buffer.h **** furnished to do so, subject to the following conditions :
  18:./lib/etl/include/etl/circular_buffer.h **** 
  19:./lib/etl/include/etl/circular_buffer.h **** The above copyright notice and this permission notice shall be included in all
  20:./lib/etl/include/etl/circular_buffer.h **** copies or substantial portions of the Software.
  21:./lib/etl/include/etl/circular_buffer.h **** 
  22:./lib/etl/include/etl/circular_buffer.h **** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  23:./lib/etl/include/etl/circular_buffer.h **** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  24:./lib/etl/include/etl/circular_buffer.h **** FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE
  25:./lib/etl/include/etl/circular_buffer.h **** AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  26:./lib/etl/include/etl/circular_buffer.h **** LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  27:./lib/etl/include/etl/circular_buffer.h **** OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  28:./lib/etl/include/etl/circular_buffer.h **** SOFTWARE.
  29:./lib/etl/include/etl/circular_buffer.h **** ******************************************************************************/
  30:./lib/etl/include/etl/circular_buffer.h **** 
  31:./lib/etl/include/etl/circular_buffer.h **** #ifndef ETL_CIRCULAR_BUFFER_INCLUDED
  32:./lib/etl/include/etl/circular_buffer.h **** #define ETL_CIRCULAR_BUFFER_INCLUDED
  33:./lib/etl/include/etl/circular_buffer.h **** 
  34:./lib/etl/include/etl/circular_buffer.h **** #include "platform.h"
  35:./lib/etl/include/etl/circular_buffer.h **** #include "vector.h"
  36:./lib/etl/include/etl/circular_buffer.h **** #include "exception.h"
  37:./lib/etl/include/etl/circular_buffer.h **** #include "error_handler.h"
  38:./lib/etl/include/etl/circular_buffer.h **** #include "memory.h"
  39:./lib/etl/include/etl/circular_buffer.h **** #include "memory_model.h"
  40:./lib/etl/include/etl/circular_buffer.h **** #include "type_traits.h"
  41:./lib/etl/include/etl/circular_buffer.h **** #include "iterator.h"
  42:./lib/etl/include/etl/circular_buffer.h **** #include "static_assert.h"
  43:./lib/etl/include/etl/circular_buffer.h **** #include "initializer_list.h"
  44:./lib/etl/include/etl/circular_buffer.h **** 
  45:./lib/etl/include/etl/circular_buffer.h **** namespace etl
  46:./lib/etl/include/etl/circular_buffer.h **** {
  47:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
  48:./lib/etl/include/etl/circular_buffer.h ****   /// Exception for the circular_buffer.
  49:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
  50:./lib/etl/include/etl/circular_buffer.h ****   class circular_buffer_exception : public etl::exception
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 53


  51:./lib/etl/include/etl/circular_buffer.h ****   {
  52:./lib/etl/include/etl/circular_buffer.h ****   public:
  53:./lib/etl/include/etl/circular_buffer.h **** 
  54:./lib/etl/include/etl/circular_buffer.h ****     circular_buffer_exception(string_type reason_, string_type file_name_, numeric_type line_number
  55:./lib/etl/include/etl/circular_buffer.h ****       : exception(reason_, file_name_, line_number_)
  56:./lib/etl/include/etl/circular_buffer.h ****     {
  57:./lib/etl/include/etl/circular_buffer.h ****     }
  58:./lib/etl/include/etl/circular_buffer.h ****   };
  59:./lib/etl/include/etl/circular_buffer.h **** 
  60:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
  61:./lib/etl/include/etl/circular_buffer.h ****   /// Empty exception for the circular_buffer.
  62:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
  63:./lib/etl/include/etl/circular_buffer.h ****   class circular_buffer_empty : public etl::circular_buffer_exception
  64:./lib/etl/include/etl/circular_buffer.h ****   {
  65:./lib/etl/include/etl/circular_buffer.h ****   public:
  66:./lib/etl/include/etl/circular_buffer.h **** 
  67:./lib/etl/include/etl/circular_buffer.h ****     circular_buffer_empty(string_type file_name_, numeric_type line_number_)
  68:./lib/etl/include/etl/circular_buffer.h ****       : etl::circular_buffer_exception(ETL_ERROR_TEXT("circular_buffer:empty", ETL_CIRCULAR_BUFFER_
  69:./lib/etl/include/etl/circular_buffer.h ****     {
  70:./lib/etl/include/etl/circular_buffer.h ****     }
  71:./lib/etl/include/etl/circular_buffer.h ****   };
  72:./lib/etl/include/etl/circular_buffer.h **** 
  73:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
  74:./lib/etl/include/etl/circular_buffer.h ****   /// Incompatible type exception.
  75:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
  76:./lib/etl/include/etl/circular_buffer.h ****   class circular_buffer_incompatible_type : public circular_buffer_exception
  77:./lib/etl/include/etl/circular_buffer.h ****   {
  78:./lib/etl/include/etl/circular_buffer.h ****   public:
  79:./lib/etl/include/etl/circular_buffer.h **** 
  80:./lib/etl/include/etl/circular_buffer.h ****     circular_buffer_incompatible_type(string_type file_name_, numeric_type line_number_)
  81:./lib/etl/include/etl/circular_buffer.h ****       : circular_buffer_exception(ETL_ERROR_TEXT("circular_buffer:type", ETL_CIRCULAR_BUFFER_FILE_I
  82:./lib/etl/include/etl/circular_buffer.h ****     {
  83:./lib/etl/include/etl/circular_buffer.h ****     }
  84:./lib/etl/include/etl/circular_buffer.h ****   };
  85:./lib/etl/include/etl/circular_buffer.h **** 
  86:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
  87:./lib/etl/include/etl/circular_buffer.h ****   ///
  88:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
  89:./lib/etl/include/etl/circular_buffer.h ****   class circular_buffer_base
  90:./lib/etl/include/etl/circular_buffer.h ****   {
  91:./lib/etl/include/etl/circular_buffer.h ****   public:
  92:./lib/etl/include/etl/circular_buffer.h **** 
  93:./lib/etl/include/etl/circular_buffer.h ****     /// The type used for determining the size of queue.
  94:./lib/etl/include/etl/circular_buffer.h ****     typedef size_t size_type;
  95:./lib/etl/include/etl/circular_buffer.h **** 
  96:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
  97:./lib/etl/include/etl/circular_buffer.h ****     size_type size() const
  98:./lib/etl/include/etl/circular_buffer.h ****     {
  99:./lib/etl/include/etl/circular_buffer.h ****       return (in >= out) ? in - out : buffer_size - (out - in);
 100:./lib/etl/include/etl/circular_buffer.h ****     }
 101:./lib/etl/include/etl/circular_buffer.h **** 
 102:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 103:./lib/etl/include/etl/circular_buffer.h ****     bool empty() const
 104:./lib/etl/include/etl/circular_buffer.h ****     {
 105:./lib/etl/include/etl/circular_buffer.h ****       return in == out;
 106:./lib/etl/include/etl/circular_buffer.h ****     }
 107:./lib/etl/include/etl/circular_buffer.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 54


 108:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 109:./lib/etl/include/etl/circular_buffer.h ****     bool full() const
 110:./lib/etl/include/etl/circular_buffer.h ****     {
 111:./lib/etl/include/etl/circular_buffer.h ****       size_t i = in;
 112:./lib/etl/include/etl/circular_buffer.h **** 
 113:./lib/etl/include/etl/circular_buffer.h ****       ++i;
 114:./lib/etl/include/etl/circular_buffer.h ****       if (i == buffer_size) ETL_UNLIKELY
 115:./lib/etl/include/etl/circular_buffer.h ****       {
 116:./lib/etl/include/etl/circular_buffer.h ****         i = 0U;
 117:./lib/etl/include/etl/circular_buffer.h ****       }
 118:./lib/etl/include/etl/circular_buffer.h **** 
 119:./lib/etl/include/etl/circular_buffer.h ****       return i == out;
 120:./lib/etl/include/etl/circular_buffer.h ****     }
 121:./lib/etl/include/etl/circular_buffer.h **** 
 122:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 123:./lib/etl/include/etl/circular_buffer.h ****     size_type available() const
 124:./lib/etl/include/etl/circular_buffer.h ****     {
 125:./lib/etl/include/etl/circular_buffer.h ****       return max_size() - size();
 126:./lib/etl/include/etl/circular_buffer.h ****     }
 127:./lib/etl/include/etl/circular_buffer.h **** 
 128:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 129:./lib/etl/include/etl/circular_buffer.h ****     size_type max_size() const
 130:./lib/etl/include/etl/circular_buffer.h ****     {
 131:./lib/etl/include/etl/circular_buffer.h ****       return buffer_size - 1U;
 132:./lib/etl/include/etl/circular_buffer.h ****     }
 133:./lib/etl/include/etl/circular_buffer.h **** 
 134:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 135:./lib/etl/include/etl/circular_buffer.h ****     size_type capacity() const
 136:./lib/etl/include/etl/circular_buffer.h ****     {
 137:./lib/etl/include/etl/circular_buffer.h ****       return buffer_size - 1U;
 138:./lib/etl/include/etl/circular_buffer.h ****     }
 139:./lib/etl/include/etl/circular_buffer.h **** 
 140:./lib/etl/include/etl/circular_buffer.h ****   protected:
 141:./lib/etl/include/etl/circular_buffer.h **** 
 142:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 143:./lib/etl/include/etl/circular_buffer.h ****     circular_buffer_base(size_type buffer_size_)
 144:./lib/etl/include/etl/circular_buffer.h ****       : buffer_size(buffer_size_)
 145:./lib/etl/include/etl/circular_buffer.h ****       , in(0U)
 146:./lib/etl/include/etl/circular_buffer.h ****       , out(0U)
 147:./lib/etl/include/etl/circular_buffer.h ****     {
 148:./lib/etl/include/etl/circular_buffer.h ****     }
 149:./lib/etl/include/etl/circular_buffer.h **** 
 150:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 151:./lib/etl/include/etl/circular_buffer.h ****     void increment_in()
 152:./lib/etl/include/etl/circular_buffer.h ****     {
 153:./lib/etl/include/etl/circular_buffer.h ****       ++in;
 154:./lib/etl/include/etl/circular_buffer.h ****       if (in == buffer_size) ETL_UNLIKELY
 155:./lib/etl/include/etl/circular_buffer.h ****       {
 156:./lib/etl/include/etl/circular_buffer.h ****         in = 0U;
 157:./lib/etl/include/etl/circular_buffer.h ****       }
 158:./lib/etl/include/etl/circular_buffer.h ****     }
 159:./lib/etl/include/etl/circular_buffer.h **** 
 160:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 161:./lib/etl/include/etl/circular_buffer.h ****     void increment_out()
 162:./lib/etl/include/etl/circular_buffer.h ****     {
 163:./lib/etl/include/etl/circular_buffer.h ****       ++out;
 164:./lib/etl/include/etl/circular_buffer.h ****       if (out == buffer_size) ETL_UNLIKELY
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 55


 165:./lib/etl/include/etl/circular_buffer.h ****       {
 166:./lib/etl/include/etl/circular_buffer.h ****         out = 0U;
 167:./lib/etl/include/etl/circular_buffer.h ****       }
 168:./lib/etl/include/etl/circular_buffer.h ****     }
 169:./lib/etl/include/etl/circular_buffer.h **** 
 170:./lib/etl/include/etl/circular_buffer.h ****     size_type buffer_size;
 171:./lib/etl/include/etl/circular_buffer.h ****     size_type in;            ///< Index to the next write.
 172:./lib/etl/include/etl/circular_buffer.h ****     size_type out;           ///< Index to the next read.
 173:./lib/etl/include/etl/circular_buffer.h ****     ETL_DECLARE_DEBUG_COUNT;  ///< Internal debugging.
 174:./lib/etl/include/etl/circular_buffer.h ****   };
 175:./lib/etl/include/etl/circular_buffer.h **** 
 176:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
 177:./lib/etl/include/etl/circular_buffer.h ****   ///
 178:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
 179:./lib/etl/include/etl/circular_buffer.h ****   template <typename T>
 180:./lib/etl/include/etl/circular_buffer.h ****   class icircular_buffer : public circular_buffer_base
 181:./lib/etl/include/etl/circular_buffer.h ****   {
 182:./lib/etl/include/etl/circular_buffer.h ****   public:
 183:./lib/etl/include/etl/circular_buffer.h **** 
 184:./lib/etl/include/etl/circular_buffer.h ****     typedef T           value_type;
 185:./lib/etl/include/etl/circular_buffer.h ****     typedef T&          reference;
 186:./lib/etl/include/etl/circular_buffer.h ****     typedef const T&    const_reference;
 187:./lib/etl/include/etl/circular_buffer.h **** #if ETL_USING_CPP11
 188:./lib/etl/include/etl/circular_buffer.h ****     typedef T&&         rvalue_reference;
 189:./lib/etl/include/etl/circular_buffer.h **** #endif
 190:./lib/etl/include/etl/circular_buffer.h ****     typedef T*          pointer;
 191:./lib/etl/include/etl/circular_buffer.h ****     typedef const T*    const_pointer;
 192:./lib/etl/include/etl/circular_buffer.h **** 
 193:./lib/etl/include/etl/circular_buffer.h ****     typedef typename etl::iterator_traits<pointer>::difference_type difference_type;
 194:./lib/etl/include/etl/circular_buffer.h **** 
 195:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 196:./lib/etl/include/etl/circular_buffer.h ****     /// Iterator iterating through the circular buffer.
 197:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 198:./lib/etl/include/etl/circular_buffer.h ****     class iterator : public etl::iterator<ETL_OR_STD::random_access_iterator_tag, T>
 199:./lib/etl/include/etl/circular_buffer.h ****     {
 200:./lib/etl/include/etl/circular_buffer.h ****     public:
 201:./lib/etl/include/etl/circular_buffer.h **** 
 202:./lib/etl/include/etl/circular_buffer.h ****       friend class icircular_buffer;
 203:./lib/etl/include/etl/circular_buffer.h **** 
 204:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 205:./lib/etl/include/etl/circular_buffer.h ****       /// Constructor
 206:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 207:./lib/etl/include/etl/circular_buffer.h ****       iterator()
 208:./lib/etl/include/etl/circular_buffer.h ****         : picb(ETL_NULLPTR)
 209:./lib/etl/include/etl/circular_buffer.h ****         , current(0U)
 210:./lib/etl/include/etl/circular_buffer.h ****       {
 211:./lib/etl/include/etl/circular_buffer.h ****       }
 212:./lib/etl/include/etl/circular_buffer.h **** 
 213:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 214:./lib/etl/include/etl/circular_buffer.h ****       /// Copy Constructor
 215:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 216:./lib/etl/include/etl/circular_buffer.h ****       iterator(const iterator& other)
 217:./lib/etl/include/etl/circular_buffer.h ****         : picb(other.picb)
 218:./lib/etl/include/etl/circular_buffer.h ****         , current(other.current)
 219:./lib/etl/include/etl/circular_buffer.h ****       {
 220:./lib/etl/include/etl/circular_buffer.h ****       }
 221:./lib/etl/include/etl/circular_buffer.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 56


 222:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 223:./lib/etl/include/etl/circular_buffer.h ****       /// Assignment operator.
 224:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 225:./lib/etl/include/etl/circular_buffer.h ****       iterator& operator =(const iterator& other)
 226:./lib/etl/include/etl/circular_buffer.h ****       {
 227:./lib/etl/include/etl/circular_buffer.h ****         picb    = other.picb;
 228:./lib/etl/include/etl/circular_buffer.h ****         current = other.current;
 229:./lib/etl/include/etl/circular_buffer.h **** 
 230:./lib/etl/include/etl/circular_buffer.h ****         return *this;
 231:./lib/etl/include/etl/circular_buffer.h ****       }
 232:./lib/etl/include/etl/circular_buffer.h **** 
 233:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 234:./lib/etl/include/etl/circular_buffer.h ****       /// * operator
 235:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 236:./lib/etl/include/etl/circular_buffer.h ****       reference operator *() const
 237:./lib/etl/include/etl/circular_buffer.h ****       {
 238:./lib/etl/include/etl/circular_buffer.h ****         return picb->pbuffer[current];
 239:./lib/etl/include/etl/circular_buffer.h ****       }
 240:./lib/etl/include/etl/circular_buffer.h **** 
 241:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 242:./lib/etl/include/etl/circular_buffer.h ****       /// -> operator
 243:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 244:./lib/etl/include/etl/circular_buffer.h ****       pointer operator ->() const
 245:./lib/etl/include/etl/circular_buffer.h ****       {
 246:./lib/etl/include/etl/circular_buffer.h ****         return &picb->pbuffer[current];
 247:./lib/etl/include/etl/circular_buffer.h ****       }
 248:./lib/etl/include/etl/circular_buffer.h **** 
 249:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 250:./lib/etl/include/etl/circular_buffer.h ****       /// Pre-increment.
 251:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 252:./lib/etl/include/etl/circular_buffer.h ****       iterator& operator ++()
 253:./lib/etl/include/etl/circular_buffer.h ****       {
 254:./lib/etl/include/etl/circular_buffer.h ****         ++current;
 255:./lib/etl/include/etl/circular_buffer.h **** 
 256:./lib/etl/include/etl/circular_buffer.h ****         // Did we reach the end of the buffer?
 257:./lib/etl/include/etl/circular_buffer.h ****         if (current == picb->buffer_size)
 258:./lib/etl/include/etl/circular_buffer.h ****         {
 259:./lib/etl/include/etl/circular_buffer.h ****           current = 0U;
 260:./lib/etl/include/etl/circular_buffer.h ****         }
 261:./lib/etl/include/etl/circular_buffer.h **** 
 262:./lib/etl/include/etl/circular_buffer.h ****         return (*this);
 263:./lib/etl/include/etl/circular_buffer.h ****       }
 264:./lib/etl/include/etl/circular_buffer.h **** 
 265:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 266:./lib/etl/include/etl/circular_buffer.h ****       /// Post increment.
 267:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 268:./lib/etl/include/etl/circular_buffer.h ****       iterator operator ++(int)
 269:./lib/etl/include/etl/circular_buffer.h ****       {
 270:./lib/etl/include/etl/circular_buffer.h ****         iterator original(*this);
 271:./lib/etl/include/etl/circular_buffer.h **** 
 272:./lib/etl/include/etl/circular_buffer.h ****         ++(*this);
 273:./lib/etl/include/etl/circular_buffer.h **** 
 274:./lib/etl/include/etl/circular_buffer.h ****         return (original);
 275:./lib/etl/include/etl/circular_buffer.h ****       }
 276:./lib/etl/include/etl/circular_buffer.h **** 
 277:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 278:./lib/etl/include/etl/circular_buffer.h ****       /// Pre-decrement.
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 57


 279:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 280:./lib/etl/include/etl/circular_buffer.h ****       iterator& operator --()
 281:./lib/etl/include/etl/circular_buffer.h ****       {
 282:./lib/etl/include/etl/circular_buffer.h ****         // Are we at the end of the buffer?
 283:./lib/etl/include/etl/circular_buffer.h ****         if (current == 0U)
 284:./lib/etl/include/etl/circular_buffer.h ****         {
 285:./lib/etl/include/etl/circular_buffer.h ****           current = picb->buffer_size - 1;
 286:./lib/etl/include/etl/circular_buffer.h ****         }
 287:./lib/etl/include/etl/circular_buffer.h ****         else
 288:./lib/etl/include/etl/circular_buffer.h ****         {
 289:./lib/etl/include/etl/circular_buffer.h ****           --current;
 290:./lib/etl/include/etl/circular_buffer.h ****         }
 291:./lib/etl/include/etl/circular_buffer.h **** 
 292:./lib/etl/include/etl/circular_buffer.h ****         return (*this);
 293:./lib/etl/include/etl/circular_buffer.h ****       }
 294:./lib/etl/include/etl/circular_buffer.h **** 
 295:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 296:./lib/etl/include/etl/circular_buffer.h ****       /// Post increment.
 297:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 298:./lib/etl/include/etl/circular_buffer.h ****       iterator operator --(int)
 299:./lib/etl/include/etl/circular_buffer.h ****       {
 300:./lib/etl/include/etl/circular_buffer.h ****         iterator original(*this);
 301:./lib/etl/include/etl/circular_buffer.h **** 
 302:./lib/etl/include/etl/circular_buffer.h ****         --(*this);
 303:./lib/etl/include/etl/circular_buffer.h **** 
 304:./lib/etl/include/etl/circular_buffer.h ****         return (original);
 305:./lib/etl/include/etl/circular_buffer.h ****       }
 306:./lib/etl/include/etl/circular_buffer.h **** 
 307:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 308:./lib/etl/include/etl/circular_buffer.h ****       /// Add offset.
 309:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 310:./lib/etl/include/etl/circular_buffer.h ****       iterator& operator +=(int n)
 311:./lib/etl/include/etl/circular_buffer.h ****       {
 312:./lib/etl/include/etl/circular_buffer.h ****         current += size_type(picb->buffer_size + n);
 313:./lib/etl/include/etl/circular_buffer.h ****         current %= picb->buffer_size;
 314:./lib/etl/include/etl/circular_buffer.h **** 
 315:./lib/etl/include/etl/circular_buffer.h ****         return (*this);
 316:./lib/etl/include/etl/circular_buffer.h ****       }
 317:./lib/etl/include/etl/circular_buffer.h **** 
 318:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 319:./lib/etl/include/etl/circular_buffer.h ****       /// Subtract offset.
 320:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 321:./lib/etl/include/etl/circular_buffer.h ****       iterator& operator -=(int n)
 322:./lib/etl/include/etl/circular_buffer.h ****       {
 323:./lib/etl/include/etl/circular_buffer.h ****         return (this->operator+=(-n));
 324:./lib/etl/include/etl/circular_buffer.h ****       }
 325:./lib/etl/include/etl/circular_buffer.h **** 
 326:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 327:./lib/etl/include/etl/circular_buffer.h ****       /// Add offset.
 328:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 329:./lib/etl/include/etl/circular_buffer.h ****       friend iterator operator +(const iterator& lhs, int n)
 330:./lib/etl/include/etl/circular_buffer.h ****       {
 331:./lib/etl/include/etl/circular_buffer.h ****         iterator temp = lhs;
 332:./lib/etl/include/etl/circular_buffer.h **** 
 333:./lib/etl/include/etl/circular_buffer.h ****         temp += n;
 334:./lib/etl/include/etl/circular_buffer.h **** 
 335:./lib/etl/include/etl/circular_buffer.h ****         return temp;
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 58


 336:./lib/etl/include/etl/circular_buffer.h ****       }
 337:./lib/etl/include/etl/circular_buffer.h **** 
 338:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 339:./lib/etl/include/etl/circular_buffer.h ****       /// Subtract offset.
 340:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 341:./lib/etl/include/etl/circular_buffer.h ****       friend iterator operator -(const iterator& lhs, int n)
 342:./lib/etl/include/etl/circular_buffer.h ****       {
 343:./lib/etl/include/etl/circular_buffer.h ****         iterator temp = lhs;
 344:./lib/etl/include/etl/circular_buffer.h **** 
 345:./lib/etl/include/etl/circular_buffer.h ****         temp -= n;
 346:./lib/etl/include/etl/circular_buffer.h **** 
 347:./lib/etl/include/etl/circular_buffer.h ****         return temp;
 348:./lib/etl/include/etl/circular_buffer.h ****       }
 349:./lib/etl/include/etl/circular_buffer.h **** 
 350:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 351:./lib/etl/include/etl/circular_buffer.h ****       /// Equality operator
 352:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 353:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator == (const iterator& lhs, const iterator& rhs)
 354:./lib/etl/include/etl/circular_buffer.h ****       {
 355:./lib/etl/include/etl/circular_buffer.h ****         return (lhs.current == rhs.current);
 356:./lib/etl/include/etl/circular_buffer.h ****       }
 357:./lib/etl/include/etl/circular_buffer.h **** 
 358:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 359:./lib/etl/include/etl/circular_buffer.h ****       /// Inequality operator
 360:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 361:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator != (const iterator& lhs, const iterator& rhs)
 362:./lib/etl/include/etl/circular_buffer.h ****       {
 363:./lib/etl/include/etl/circular_buffer.h ****         return !(lhs == rhs);
 364:./lib/etl/include/etl/circular_buffer.h ****       }
 365:./lib/etl/include/etl/circular_buffer.h **** 
 366:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 367:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator < (const iterator& lhs, const iterator& rhs)
 368:./lib/etl/include/etl/circular_buffer.h ****       {
 369:./lib/etl/include/etl/circular_buffer.h ****         const difference_type lhs_index = lhs.get_index();
 370:./lib/etl/include/etl/circular_buffer.h ****         const difference_type rhs_index = rhs.get_index();
 371:./lib/etl/include/etl/circular_buffer.h ****         const difference_type reference_index = lhs.container().begin().get_index();
 372:./lib/etl/include/etl/circular_buffer.h ****         const size_t buffer_size = lhs.container().max_size() + 1UL;
 373:./lib/etl/include/etl/circular_buffer.h **** 
 374:./lib/etl/include/etl/circular_buffer.h ****         const difference_type lhs_distance = (lhs_index < reference_index) ? buffer_size + lhs_inde
 375:./lib/etl/include/etl/circular_buffer.h ****         const difference_type rhs_distance = (rhs_index < reference_index) ? buffer_size + rhs_inde
 376:./lib/etl/include/etl/circular_buffer.h **** 
 377:./lib/etl/include/etl/circular_buffer.h ****         return lhs_distance < rhs_distance;
 378:./lib/etl/include/etl/circular_buffer.h ****       }
 379:./lib/etl/include/etl/circular_buffer.h **** 
 380:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 381:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator <= (const iterator& lhs, const iterator& rhs)
 382:./lib/etl/include/etl/circular_buffer.h ****       {
 383:./lib/etl/include/etl/circular_buffer.h ****         return !(lhs > rhs);
 384:./lib/etl/include/etl/circular_buffer.h ****       }
 385:./lib/etl/include/etl/circular_buffer.h **** 
 386:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 387:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator > (const iterator& lhs, const iterator& rhs)
 388:./lib/etl/include/etl/circular_buffer.h ****       {
 389:./lib/etl/include/etl/circular_buffer.h ****         return (rhs < lhs);
 390:./lib/etl/include/etl/circular_buffer.h ****       }
 391:./lib/etl/include/etl/circular_buffer.h **** 
 392:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 59


 393:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator >= (const iterator& lhs, const iterator& rhs)
 394:./lib/etl/include/etl/circular_buffer.h ****       {
 395:./lib/etl/include/etl/circular_buffer.h ****         return !(lhs < rhs);
 396:./lib/etl/include/etl/circular_buffer.h ****       }
 397:./lib/etl/include/etl/circular_buffer.h **** 
 398:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 399:./lib/etl/include/etl/circular_buffer.h ****       difference_type get_index() const
 400:./lib/etl/include/etl/circular_buffer.h ****       {
 401:./lib/etl/include/etl/circular_buffer.h ****         return current;
 402:./lib/etl/include/etl/circular_buffer.h ****       }
 403:./lib/etl/include/etl/circular_buffer.h **** 
 404:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 405:./lib/etl/include/etl/circular_buffer.h ****       const icircular_buffer& container() const
 406:./lib/etl/include/etl/circular_buffer.h ****       {
 407:./lib/etl/include/etl/circular_buffer.h ****         return *picb;
 408:./lib/etl/include/etl/circular_buffer.h ****       }
 409:./lib/etl/include/etl/circular_buffer.h **** 
 410:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 411:./lib/etl/include/etl/circular_buffer.h ****       pointer get_buffer() const
 412:./lib/etl/include/etl/circular_buffer.h ****       {
 413:./lib/etl/include/etl/circular_buffer.h ****         return pbuffer;
 414:./lib/etl/include/etl/circular_buffer.h ****       }
 415:./lib/etl/include/etl/circular_buffer.h **** 
 416:./lib/etl/include/etl/circular_buffer.h ****     protected:
 417:./lib/etl/include/etl/circular_buffer.h **** 
 418:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 419:./lib/etl/include/etl/circular_buffer.h ****       difference_type distance(difference_type firstIndex, difference_type index) const
 420:./lib/etl/include/etl/circular_buffer.h ****       {
 421:./lib/etl/include/etl/circular_buffer.h ****         if (index < firstIndex)
 422:./lib/etl/include/etl/circular_buffer.h ****         {
 423:./lib/etl/include/etl/circular_buffer.h ****           return picb->buffer_size + current - firstIndex;
 424:./lib/etl/include/etl/circular_buffer.h ****         }
 425:./lib/etl/include/etl/circular_buffer.h ****         else
 426:./lib/etl/include/etl/circular_buffer.h ****         {
 427:./lib/etl/include/etl/circular_buffer.h ****           return index - firstIndex;
 428:./lib/etl/include/etl/circular_buffer.h ****         }
 429:./lib/etl/include/etl/circular_buffer.h ****       }
 430:./lib/etl/include/etl/circular_buffer.h **** 
 431:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 432:./lib/etl/include/etl/circular_buffer.h ****       /// Protected constructor. Only icircular_buffer can create one.
 433:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 434:./lib/etl/include/etl/circular_buffer.h ****       iterator(const icircular_buffer<T>* picb_, size_type current_)
 435:./lib/etl/include/etl/circular_buffer.h ****         : picb(picb_)
 436:./lib/etl/include/etl/circular_buffer.h ****         , current(current_)
 437:./lib/etl/include/etl/circular_buffer.h ****       {
 438:./lib/etl/include/etl/circular_buffer.h ****       }
 439:./lib/etl/include/etl/circular_buffer.h **** 
 440:./lib/etl/include/etl/circular_buffer.h ****     private:
 441:./lib/etl/include/etl/circular_buffer.h **** 
 442:./lib/etl/include/etl/circular_buffer.h ****       const icircular_buffer<T>* picb;
 443:./lib/etl/include/etl/circular_buffer.h ****       size_type current;
 444:./lib/etl/include/etl/circular_buffer.h ****     };
 445:./lib/etl/include/etl/circular_buffer.h **** 
 446:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 447:./lib/etl/include/etl/circular_buffer.h ****     /// Iterator iterating through the circular buffer.
 448:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 449:./lib/etl/include/etl/circular_buffer.h ****     class const_iterator : public etl::iterator<ETL_OR_STD::random_access_iterator_tag, const T>
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 60


 450:./lib/etl/include/etl/circular_buffer.h ****     {
 451:./lib/etl/include/etl/circular_buffer.h ****     public:
 452:./lib/etl/include/etl/circular_buffer.h **** 
 453:./lib/etl/include/etl/circular_buffer.h ****       friend class icircular_buffer;
 454:./lib/etl/include/etl/circular_buffer.h **** 
 455:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 456:./lib/etl/include/etl/circular_buffer.h ****       /// Constructor
 457:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 458:./lib/etl/include/etl/circular_buffer.h ****       const_iterator()
 459:./lib/etl/include/etl/circular_buffer.h ****         : picb(ETL_NULLPTR)
 460:./lib/etl/include/etl/circular_buffer.h ****         , current(0U)
 461:./lib/etl/include/etl/circular_buffer.h ****       {
 462:./lib/etl/include/etl/circular_buffer.h ****       }
 463:./lib/etl/include/etl/circular_buffer.h **** 
 464:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 465:./lib/etl/include/etl/circular_buffer.h ****       /// Copy Constructor from iterator
 466:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 467:./lib/etl/include/etl/circular_buffer.h ****       const_iterator(const typename icircular_buffer::iterator& other)
 468:./lib/etl/include/etl/circular_buffer.h ****         : picb(other.picb)
 469:./lib/etl/include/etl/circular_buffer.h ****         , current(other.current)
 470:./lib/etl/include/etl/circular_buffer.h ****       {
 471:./lib/etl/include/etl/circular_buffer.h ****       }
 472:./lib/etl/include/etl/circular_buffer.h **** 
 473:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 474:./lib/etl/include/etl/circular_buffer.h ****       /// Copy Constructor from const iterator
 475:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 476:./lib/etl/include/etl/circular_buffer.h ****       const_iterator(const const_iterator& other)
 477:./lib/etl/include/etl/circular_buffer.h ****         : picb(other.picb)
 478:./lib/etl/include/etl/circular_buffer.h ****         , current(other.current)
 479:./lib/etl/include/etl/circular_buffer.h ****       {
 480:./lib/etl/include/etl/circular_buffer.h ****       }
 481:./lib/etl/include/etl/circular_buffer.h **** 
 482:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 483:./lib/etl/include/etl/circular_buffer.h ****       /// Assignment operator.
 484:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 485:./lib/etl/include/etl/circular_buffer.h ****       const_iterator& operator =(const typename icircular_buffer::iterator& other)
 486:./lib/etl/include/etl/circular_buffer.h ****       {
 487:./lib/etl/include/etl/circular_buffer.h ****         picb    = other.picb;
 488:./lib/etl/include/etl/circular_buffer.h ****         current = other.current;
 489:./lib/etl/include/etl/circular_buffer.h **** 
 490:./lib/etl/include/etl/circular_buffer.h ****         return *this;
 491:./lib/etl/include/etl/circular_buffer.h ****       }
 492:./lib/etl/include/etl/circular_buffer.h **** 
 493:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 494:./lib/etl/include/etl/circular_buffer.h ****       /// Assignment operator.
 495:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 496:./lib/etl/include/etl/circular_buffer.h ****       const_iterator& operator =(const const_iterator& other)
 497:./lib/etl/include/etl/circular_buffer.h ****       {
 498:./lib/etl/include/etl/circular_buffer.h ****         picb    = other.picb;
 499:./lib/etl/include/etl/circular_buffer.h ****         current = other.current;
 500:./lib/etl/include/etl/circular_buffer.h **** 
 501:./lib/etl/include/etl/circular_buffer.h ****         return *this;
 502:./lib/etl/include/etl/circular_buffer.h ****       }
 503:./lib/etl/include/etl/circular_buffer.h **** 
 504:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 505:./lib/etl/include/etl/circular_buffer.h ****       /// * operator
 506:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 61


 507:./lib/etl/include/etl/circular_buffer.h ****       const_reference operator *() const
 508:./lib/etl/include/etl/circular_buffer.h ****       {
 509:./lib/etl/include/etl/circular_buffer.h ****         return picb->pbuffer[current];
 510:./lib/etl/include/etl/circular_buffer.h ****       }
 511:./lib/etl/include/etl/circular_buffer.h **** 
 512:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 513:./lib/etl/include/etl/circular_buffer.h ****       /// -> operator
 514:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 515:./lib/etl/include/etl/circular_buffer.h ****       const_pointer operator ->() const
 516:./lib/etl/include/etl/circular_buffer.h ****       {
 517:./lib/etl/include/etl/circular_buffer.h ****         return &(picb->pbuffer[current]);
 518:./lib/etl/include/etl/circular_buffer.h ****       }
 519:./lib/etl/include/etl/circular_buffer.h **** 
 520:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 521:./lib/etl/include/etl/circular_buffer.h ****       /// Pre-increment.
 522:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 523:./lib/etl/include/etl/circular_buffer.h ****       const_iterator& operator ++()
 524:./lib/etl/include/etl/circular_buffer.h ****       {
 525:./lib/etl/include/etl/circular_buffer.h ****         ++current;
 526:./lib/etl/include/etl/circular_buffer.h **** 
 527:./lib/etl/include/etl/circular_buffer.h ****         // Did we reach the end of the buffer?
 528:./lib/etl/include/etl/circular_buffer.h ****         if (current == picb->buffer_size)
 529:./lib/etl/include/etl/circular_buffer.h ****         {
 530:./lib/etl/include/etl/circular_buffer.h ****           current = 0U;
 531:./lib/etl/include/etl/circular_buffer.h ****         }
 532:./lib/etl/include/etl/circular_buffer.h **** 
 533:./lib/etl/include/etl/circular_buffer.h ****         return (*this);
 534:./lib/etl/include/etl/circular_buffer.h ****       }
 535:./lib/etl/include/etl/circular_buffer.h **** 
 536:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 537:./lib/etl/include/etl/circular_buffer.h ****       /// Post increment.
 538:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 539:./lib/etl/include/etl/circular_buffer.h ****       const_iterator operator ++(int)
 540:./lib/etl/include/etl/circular_buffer.h ****       {
 541:./lib/etl/include/etl/circular_buffer.h ****         const_iterator original(*this);
 542:./lib/etl/include/etl/circular_buffer.h **** 
 543:./lib/etl/include/etl/circular_buffer.h ****         ++(*this);
 544:./lib/etl/include/etl/circular_buffer.h **** 
 545:./lib/etl/include/etl/circular_buffer.h ****         return (original);
 546:./lib/etl/include/etl/circular_buffer.h ****       }
 547:./lib/etl/include/etl/circular_buffer.h **** 
 548:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 549:./lib/etl/include/etl/circular_buffer.h ****       /// Pre-decrement.
 550:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 551:./lib/etl/include/etl/circular_buffer.h ****       const_iterator& operator --()
 552:./lib/etl/include/etl/circular_buffer.h ****       {
 553:./lib/etl/include/etl/circular_buffer.h ****         // Are we at the end of the buffer?
 554:./lib/etl/include/etl/circular_buffer.h ****         if (current == 0U)
 555:./lib/etl/include/etl/circular_buffer.h ****         {
 556:./lib/etl/include/etl/circular_buffer.h ****           current = picb->buffer_size - 1;
 557:./lib/etl/include/etl/circular_buffer.h ****         }
 558:./lib/etl/include/etl/circular_buffer.h ****         else
 559:./lib/etl/include/etl/circular_buffer.h ****         {
 560:./lib/etl/include/etl/circular_buffer.h ****           --current;
 561:./lib/etl/include/etl/circular_buffer.h ****         }
 562:./lib/etl/include/etl/circular_buffer.h **** 
 563:./lib/etl/include/etl/circular_buffer.h ****         return (*this);
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 62


 564:./lib/etl/include/etl/circular_buffer.h ****       }
 565:./lib/etl/include/etl/circular_buffer.h **** 
 566:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 567:./lib/etl/include/etl/circular_buffer.h ****       /// Post increment.
 568:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 569:./lib/etl/include/etl/circular_buffer.h ****       const_iterator operator --(int)
 570:./lib/etl/include/etl/circular_buffer.h ****       {
 571:./lib/etl/include/etl/circular_buffer.h ****         const_iterator original(*this);
 572:./lib/etl/include/etl/circular_buffer.h **** 
 573:./lib/etl/include/etl/circular_buffer.h ****         --(*this);
 574:./lib/etl/include/etl/circular_buffer.h **** 
 575:./lib/etl/include/etl/circular_buffer.h ****         return (original);
 576:./lib/etl/include/etl/circular_buffer.h ****       }
 577:./lib/etl/include/etl/circular_buffer.h **** 
 578:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 579:./lib/etl/include/etl/circular_buffer.h ****       /// Add offset.
 580:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 581:./lib/etl/include/etl/circular_buffer.h ****       const_iterator& operator +=(int n)
 582:./lib/etl/include/etl/circular_buffer.h ****       {
 583:./lib/etl/include/etl/circular_buffer.h ****         current += size_type(picb->buffer_size + n);
 584:./lib/etl/include/etl/circular_buffer.h ****         current %= picb->buffer_size;
 585:./lib/etl/include/etl/circular_buffer.h **** 
 586:./lib/etl/include/etl/circular_buffer.h ****         return (*this);
 587:./lib/etl/include/etl/circular_buffer.h ****       }
 588:./lib/etl/include/etl/circular_buffer.h **** 
 589:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 590:./lib/etl/include/etl/circular_buffer.h ****       /// Subtract offset.
 591:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 592:./lib/etl/include/etl/circular_buffer.h ****       const_iterator& operator -=(int n)
 593:./lib/etl/include/etl/circular_buffer.h ****       {
 594:./lib/etl/include/etl/circular_buffer.h ****         return (this->operator+=(-n));
 595:./lib/etl/include/etl/circular_buffer.h ****       }
 596:./lib/etl/include/etl/circular_buffer.h **** 
 597:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 598:./lib/etl/include/etl/circular_buffer.h ****       /// Add offset.
 599:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 600:./lib/etl/include/etl/circular_buffer.h ****       friend const_iterator operator +(const const_iterator& lhs, int n)
 601:./lib/etl/include/etl/circular_buffer.h ****       {
 602:./lib/etl/include/etl/circular_buffer.h ****         const_iterator temp = lhs;
 603:./lib/etl/include/etl/circular_buffer.h **** 
 604:./lib/etl/include/etl/circular_buffer.h ****         temp += n;
 605:./lib/etl/include/etl/circular_buffer.h **** 
 606:./lib/etl/include/etl/circular_buffer.h ****         return temp;
 607:./lib/etl/include/etl/circular_buffer.h ****       }
 608:./lib/etl/include/etl/circular_buffer.h **** 
 609:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 610:./lib/etl/include/etl/circular_buffer.h ****       /// Subtract offset.
 611:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 612:./lib/etl/include/etl/circular_buffer.h ****       friend const_iterator operator -(const const_iterator& lhs, int n)
 613:./lib/etl/include/etl/circular_buffer.h ****       {
 614:./lib/etl/include/etl/circular_buffer.h ****         const_iterator temp = lhs;
 615:./lib/etl/include/etl/circular_buffer.h **** 
 616:./lib/etl/include/etl/circular_buffer.h ****         temp -= n;
 617:./lib/etl/include/etl/circular_buffer.h **** 
 618:./lib/etl/include/etl/circular_buffer.h ****         return temp;
 619:./lib/etl/include/etl/circular_buffer.h ****       }
 620:./lib/etl/include/etl/circular_buffer.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 63


 621:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 622:./lib/etl/include/etl/circular_buffer.h ****       /// Equality operator
 623:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 624:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator == (const const_iterator& lhs, const const_iterator& rhs)
 625:./lib/etl/include/etl/circular_buffer.h ****       {
 626:./lib/etl/include/etl/circular_buffer.h ****         return (lhs.current == rhs.current);
 627:./lib/etl/include/etl/circular_buffer.h ****       }
 628:./lib/etl/include/etl/circular_buffer.h **** 
 629:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 630:./lib/etl/include/etl/circular_buffer.h ****       /// Inequality operator
 631:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 632:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator != (const const_iterator& lhs, const const_iterator& rhs)
 633:./lib/etl/include/etl/circular_buffer.h ****       {
 634:./lib/etl/include/etl/circular_buffer.h ****         return !(lhs == rhs);
 635:./lib/etl/include/etl/circular_buffer.h ****       }
 636:./lib/etl/include/etl/circular_buffer.h **** 
 637:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 638:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator < (const const_iterator& lhs, const const_iterator& rhs)
 639:./lib/etl/include/etl/circular_buffer.h ****       {
 640:./lib/etl/include/etl/circular_buffer.h ****         const difference_type lhs_index = lhs.get_index();
 641:./lib/etl/include/etl/circular_buffer.h ****         const difference_type rhs_index = rhs.get_index();
 642:./lib/etl/include/etl/circular_buffer.h ****         const difference_type reference_index = lhs.container().begin().get_index();
 643:./lib/etl/include/etl/circular_buffer.h ****         const size_t buffer_size = lhs.container().max_size() + 1UL;
 644:./lib/etl/include/etl/circular_buffer.h **** 
 645:./lib/etl/include/etl/circular_buffer.h ****         const difference_type lhs_distance = (lhs_index < reference_index) ? buffer_size + lhs_inde
 646:./lib/etl/include/etl/circular_buffer.h ****         const difference_type rhs_distance = (rhs_index < reference_index) ? buffer_size + rhs_inde
 647:./lib/etl/include/etl/circular_buffer.h **** 
 648:./lib/etl/include/etl/circular_buffer.h ****         return lhs_distance < rhs_distance;
 649:./lib/etl/include/etl/circular_buffer.h ****       }
 650:./lib/etl/include/etl/circular_buffer.h **** 
 651:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 652:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator <= (const const_iterator& lhs, const const_iterator& rhs)
 653:./lib/etl/include/etl/circular_buffer.h ****       {
 654:./lib/etl/include/etl/circular_buffer.h ****         return !(lhs > rhs);
 655:./lib/etl/include/etl/circular_buffer.h ****       }
 656:./lib/etl/include/etl/circular_buffer.h **** 
 657:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 658:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator > (const const_iterator& lhs, const const_iterator& rhs)
 659:./lib/etl/include/etl/circular_buffer.h ****       {
 660:./lib/etl/include/etl/circular_buffer.h ****         return (rhs < lhs);
 661:./lib/etl/include/etl/circular_buffer.h ****       }
 662:./lib/etl/include/etl/circular_buffer.h **** 
 663:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 664:./lib/etl/include/etl/circular_buffer.h ****       friend bool operator >= (const const_iterator& lhs, const const_iterator& rhs)
 665:./lib/etl/include/etl/circular_buffer.h ****       {
 666:./lib/etl/include/etl/circular_buffer.h ****         return !(lhs < rhs);
 667:./lib/etl/include/etl/circular_buffer.h ****       }
 668:./lib/etl/include/etl/circular_buffer.h **** 
 669:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 670:./lib/etl/include/etl/circular_buffer.h ****       difference_type get_index() const
 671:./lib/etl/include/etl/circular_buffer.h ****       {
 672:./lib/etl/include/etl/circular_buffer.h ****         return current;
 673:./lib/etl/include/etl/circular_buffer.h ****       }
 674:./lib/etl/include/etl/circular_buffer.h **** 
 675:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 676:./lib/etl/include/etl/circular_buffer.h ****       const icircular_buffer& container() const
 677:./lib/etl/include/etl/circular_buffer.h ****       {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 64


 678:./lib/etl/include/etl/circular_buffer.h ****         return *picb;
 679:./lib/etl/include/etl/circular_buffer.h ****       }
 680:./lib/etl/include/etl/circular_buffer.h **** 
 681:./lib/etl/include/etl/circular_buffer.h ****       //***************************************************
 682:./lib/etl/include/etl/circular_buffer.h ****       pointer get_buffer() const
 683:./lib/etl/include/etl/circular_buffer.h ****       {
 684:./lib/etl/include/etl/circular_buffer.h ****         return pbuffer;
 685:./lib/etl/include/etl/circular_buffer.h ****       }
 686:./lib/etl/include/etl/circular_buffer.h **** 
 687:./lib/etl/include/etl/circular_buffer.h ****     protected:
 688:./lib/etl/include/etl/circular_buffer.h **** 
 689:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 690:./lib/etl/include/etl/circular_buffer.h ****       /// Protected constructor. Only icircular_buffer can create one.
 691:./lib/etl/include/etl/circular_buffer.h ****       //*************************************************************************
 692:./lib/etl/include/etl/circular_buffer.h ****       const_iterator(const icircular_buffer<T>* picb_, size_type current_)
 693:./lib/etl/include/etl/circular_buffer.h ****         : picb(picb_)
 694:./lib/etl/include/etl/circular_buffer.h ****         , current(current_)
 695:./lib/etl/include/etl/circular_buffer.h ****       {
 696:./lib/etl/include/etl/circular_buffer.h ****       }
 697:./lib/etl/include/etl/circular_buffer.h **** 
 698:./lib/etl/include/etl/circular_buffer.h ****     private:
 699:./lib/etl/include/etl/circular_buffer.h **** 
 700:./lib/etl/include/etl/circular_buffer.h ****       const icircular_buffer<T>* picb;
 701:./lib/etl/include/etl/circular_buffer.h ****       size_type current;
 702:./lib/etl/include/etl/circular_buffer.h ****     };
 703:./lib/etl/include/etl/circular_buffer.h **** 
 704:./lib/etl/include/etl/circular_buffer.h ****     friend class iterator;
 705:./lib/etl/include/etl/circular_buffer.h ****     friend class const_iterator;
 706:./lib/etl/include/etl/circular_buffer.h **** 
 707:./lib/etl/include/etl/circular_buffer.h ****     typedef etl::reverse_iterator<iterator>       reverse_iterator;
 708:./lib/etl/include/etl/circular_buffer.h ****     typedef etl::reverse_iterator<const_iterator> const_reverse_iterator;
 709:./lib/etl/include/etl/circular_buffer.h **** 
 710:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 711:./lib/etl/include/etl/circular_buffer.h ****     /// Gets an iterator to the start of the buffer.
 712:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 713:./lib/etl/include/etl/circular_buffer.h ****     iterator begin()
 714:./lib/etl/include/etl/circular_buffer.h ****     {
 715:./lib/etl/include/etl/circular_buffer.h ****       return iterator(this, out);
 716:./lib/etl/include/etl/circular_buffer.h ****     }
 717:./lib/etl/include/etl/circular_buffer.h **** 
 718:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 719:./lib/etl/include/etl/circular_buffer.h ****     /// Gets a const iterator to the start of the buffer.
 720:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 721:./lib/etl/include/etl/circular_buffer.h ****     const_iterator begin() const
 722:./lib/etl/include/etl/circular_buffer.h ****     {
 723:./lib/etl/include/etl/circular_buffer.h ****       return const_iterator(this, out);
 724:./lib/etl/include/etl/circular_buffer.h ****     }
 725:./lib/etl/include/etl/circular_buffer.h **** 
 726:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 727:./lib/etl/include/etl/circular_buffer.h ****     /// Gets a const iterator to the start of the buffer.
 728:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 729:./lib/etl/include/etl/circular_buffer.h ****     const_iterator cbegin() const
 730:./lib/etl/include/etl/circular_buffer.h ****     {
 731:./lib/etl/include/etl/circular_buffer.h ****       return const_iterator(this, out);
 732:./lib/etl/include/etl/circular_buffer.h ****     }
 733:./lib/etl/include/etl/circular_buffer.h **** 
 734:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 65


 735:./lib/etl/include/etl/circular_buffer.h ****     /// Gets an iterator to the end of the buffer.
 736:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 737:./lib/etl/include/etl/circular_buffer.h ****     iterator end()
 738:./lib/etl/include/etl/circular_buffer.h ****     {
 739:./lib/etl/include/etl/circular_buffer.h ****       return iterator(this, in);
 740:./lib/etl/include/etl/circular_buffer.h ****     }
 741:./lib/etl/include/etl/circular_buffer.h **** 
 742:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 743:./lib/etl/include/etl/circular_buffer.h ****     /// Gets a const iterator to the end of the buffer.
 744:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 745:./lib/etl/include/etl/circular_buffer.h ****     const_iterator end() const
 746:./lib/etl/include/etl/circular_buffer.h ****     {
 747:./lib/etl/include/etl/circular_buffer.h ****       return const_iterator(this, in);
 748:./lib/etl/include/etl/circular_buffer.h ****     }
 749:./lib/etl/include/etl/circular_buffer.h **** 
 750:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 751:./lib/etl/include/etl/circular_buffer.h ****     /// Gets a const iterator to the end of the buffer.
 752:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 753:./lib/etl/include/etl/circular_buffer.h ****     const_iterator cend() const
 754:./lib/etl/include/etl/circular_buffer.h ****     {
 755:./lib/etl/include/etl/circular_buffer.h ****       return const_iterator(this, in);
 756:./lib/etl/include/etl/circular_buffer.h ****     }
 757:./lib/etl/include/etl/circular_buffer.h **** 
 758:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 759:./lib/etl/include/etl/circular_buffer.h ****     /// Gets a reverse iterator to the start of the buffer.
 760:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 761:./lib/etl/include/etl/circular_buffer.h ****     reverse_iterator rbegin()
 762:./lib/etl/include/etl/circular_buffer.h ****     {
 763:./lib/etl/include/etl/circular_buffer.h ****       return reverse_iterator(end());
 764:./lib/etl/include/etl/circular_buffer.h ****     }
 765:./lib/etl/include/etl/circular_buffer.h **** 
 766:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 767:./lib/etl/include/etl/circular_buffer.h ****     /// Gets a const reverse iterator to the start of the buffer.
 768:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 769:./lib/etl/include/etl/circular_buffer.h ****     const_reverse_iterator rbegin() const
 770:./lib/etl/include/etl/circular_buffer.h ****     {
 771:./lib/etl/include/etl/circular_buffer.h ****       return const_reverse_iterator(end());
 772:./lib/etl/include/etl/circular_buffer.h ****     }
 773:./lib/etl/include/etl/circular_buffer.h **** 
 774:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 775:./lib/etl/include/etl/circular_buffer.h ****     /// Gets a const reverse iterator to the start of the buffer.
 776:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 777:./lib/etl/include/etl/circular_buffer.h ****     const_reverse_iterator crbegin() const
 778:./lib/etl/include/etl/circular_buffer.h ****     {
 779:./lib/etl/include/etl/circular_buffer.h ****       return const_reverse_iterator(end());
 780:./lib/etl/include/etl/circular_buffer.h ****     }
 781:./lib/etl/include/etl/circular_buffer.h **** 
 782:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 783:./lib/etl/include/etl/circular_buffer.h ****     /// Gets a reverse iterator to the end of the buffer.
 784:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 785:./lib/etl/include/etl/circular_buffer.h ****     reverse_iterator rend()
 786:./lib/etl/include/etl/circular_buffer.h ****     {
 787:./lib/etl/include/etl/circular_buffer.h ****       return reverse_iterator(begin());
 788:./lib/etl/include/etl/circular_buffer.h ****     }
 789:./lib/etl/include/etl/circular_buffer.h **** 
 790:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 791:./lib/etl/include/etl/circular_buffer.h ****     /// Gets a const reverse iterator to the end of the buffer.
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 66


 792:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 793:./lib/etl/include/etl/circular_buffer.h ****     const_reverse_iterator rend() const
 794:./lib/etl/include/etl/circular_buffer.h ****     {
 795:./lib/etl/include/etl/circular_buffer.h ****       return const_reverse_iterator(begin());
 796:./lib/etl/include/etl/circular_buffer.h ****     }
 797:./lib/etl/include/etl/circular_buffer.h **** 
 798:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 799:./lib/etl/include/etl/circular_buffer.h ****     /// Gets a const reverse iterator to the end of the buffer.
 800:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 801:./lib/etl/include/etl/circular_buffer.h ****     const_reverse_iterator crend() const
 802:./lib/etl/include/etl/circular_buffer.h ****     {
 803:./lib/etl/include/etl/circular_buffer.h ****       return const_reverse_iterator(begin());
 804:./lib/etl/include/etl/circular_buffer.h ****     }
 805:./lib/etl/include/etl/circular_buffer.h **** 
 806:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 807:./lib/etl/include/etl/circular_buffer.h ****     /// Get a const reference to the item at the front of the buffer.
 808:./lib/etl/include/etl/circular_buffer.h ****     /// Asserts an error if the buffer is empty.
 809:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 810:./lib/etl/include/etl/circular_buffer.h ****     reference front()
 811:./lib/etl/include/etl/circular_buffer.h ****     {
 812:./lib/etl/include/etl/circular_buffer.h ****       ETL_ASSERT(!empty(), ETL_ERROR(circular_buffer_empty));
 813:./lib/etl/include/etl/circular_buffer.h **** 
 814:./lib/etl/include/etl/circular_buffer.h ****       return pbuffer[out];
 815:./lib/etl/include/etl/circular_buffer.h ****     }
 816:./lib/etl/include/etl/circular_buffer.h **** 
 817:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 818:./lib/etl/include/etl/circular_buffer.h ****     /// Get a const reference to the item at the front of the buffer.
 819:./lib/etl/include/etl/circular_buffer.h ****     /// Asserts an error if the buffer is empty.
 820:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 821:./lib/etl/include/etl/circular_buffer.h ****     const_reference front() const
 822:./lib/etl/include/etl/circular_buffer.h ****     {
 823:./lib/etl/include/etl/circular_buffer.h ****       ETL_ASSERT(!empty(), ETL_ERROR(circular_buffer_empty));
 824:./lib/etl/include/etl/circular_buffer.h **** 
 825:./lib/etl/include/etl/circular_buffer.h ****       return pbuffer[out];
 826:./lib/etl/include/etl/circular_buffer.h ****     }
 827:./lib/etl/include/etl/circular_buffer.h **** 
 828:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 829:./lib/etl/include/etl/circular_buffer.h ****     /// Get a reference to the item at the back of the buffer.
 830:./lib/etl/include/etl/circular_buffer.h ****     /// Asserts an error if the buffer is empty.
 831:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 832:./lib/etl/include/etl/circular_buffer.h ****     reference back()
 833:./lib/etl/include/etl/circular_buffer.h ****     {
 834:./lib/etl/include/etl/circular_buffer.h ****       ETL_ASSERT(!empty(), ETL_ERROR(circular_buffer_empty));
 835:./lib/etl/include/etl/circular_buffer.h **** 
 836:./lib/etl/include/etl/circular_buffer.h ****       return pbuffer[in == 0U ? buffer_size - 1 : in - 1U];
 837:./lib/etl/include/etl/circular_buffer.h ****     }
 838:./lib/etl/include/etl/circular_buffer.h **** 
 839:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 840:./lib/etl/include/etl/circular_buffer.h ****     /// Get a const reference to the item at the back of the buffer.
 841:./lib/etl/include/etl/circular_buffer.h ****     /// Asserts an error if the buffer is empty.
 842:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 843:./lib/etl/include/etl/circular_buffer.h ****     const_reference back() const
 844:./lib/etl/include/etl/circular_buffer.h ****     {
 845:./lib/etl/include/etl/circular_buffer.h ****       ETL_ASSERT(!empty(), ETL_ERROR(circular_buffer_empty));
 846:./lib/etl/include/etl/circular_buffer.h **** 
 847:./lib/etl/include/etl/circular_buffer.h ****       return pbuffer[in == 0U ? buffer_size - 1 : in - 1U];
 848:./lib/etl/include/etl/circular_buffer.h ****     }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 67


 849:./lib/etl/include/etl/circular_buffer.h **** 
 850:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 851:./lib/etl/include/etl/circular_buffer.h ****     /// Get a reference to the item.
 852:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 853:./lib/etl/include/etl/circular_buffer.h ****     reference operator [](size_t index)
 854:./lib/etl/include/etl/circular_buffer.h ****     {
 855:./lib/etl/include/etl/circular_buffer.h ****       return pbuffer[(out + index) % buffer_size];
 856:./lib/etl/include/etl/circular_buffer.h ****     }
 857:./lib/etl/include/etl/circular_buffer.h **** 
 858:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 859:./lib/etl/include/etl/circular_buffer.h ****     /// Get a const reference to the item at the back of the buffer.
 860:./lib/etl/include/etl/circular_buffer.h ****     /// Asserts an error if the buffer is empty.
 861:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 862:./lib/etl/include/etl/circular_buffer.h ****     const_reference operator [](size_t index) const
 863:./lib/etl/include/etl/circular_buffer.h ****     {
 864:./lib/etl/include/etl/circular_buffer.h ****       return pbuffer[(out + index) % buffer_size];
 865:./lib/etl/include/etl/circular_buffer.h ****     }
 866:./lib/etl/include/etl/circular_buffer.h **** 
 867:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 868:./lib/etl/include/etl/circular_buffer.h ****     /// push.
 869:./lib/etl/include/etl/circular_buffer.h ****     /// Adds an item to the buffer.
 870:./lib/etl/include/etl/circular_buffer.h ****     /// If the buffer is filled then the oldest item is overwritten.
 871:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 872:./lib/etl/include/etl/circular_buffer.h ****     void push(const_reference item)
 873:./lib/etl/include/etl/circular_buffer.h ****     {
 874:./lib/etl/include/etl/circular_buffer.h ****       ::new (&pbuffer[in]) T(item);
 875:./lib/etl/include/etl/circular_buffer.h ****       increment_in();
 876:./lib/etl/include/etl/circular_buffer.h **** 
 877:./lib/etl/include/etl/circular_buffer.h ****       // Did we catch up with the 'out' index?
 878:./lib/etl/include/etl/circular_buffer.h ****       if (in == out)
 879:./lib/etl/include/etl/circular_buffer.h ****       {
 880:./lib/etl/include/etl/circular_buffer.h ****         // Forget about the oldest one.
 881:./lib/etl/include/etl/circular_buffer.h ****         pbuffer[out].~T();
 882:./lib/etl/include/etl/circular_buffer.h ****         this->increment_out();
 883:./lib/etl/include/etl/circular_buffer.h ****       }
 884:./lib/etl/include/etl/circular_buffer.h ****       else
 885:./lib/etl/include/etl/circular_buffer.h ****       {
 886:./lib/etl/include/etl/circular_buffer.h ****         ETL_INCREMENT_DEBUG_COUNT;
 887:./lib/etl/include/etl/circular_buffer.h ****       }
 888:./lib/etl/include/etl/circular_buffer.h ****     }
 889:./lib/etl/include/etl/circular_buffer.h **** 
 890:./lib/etl/include/etl/circular_buffer.h **** #if ETL_USING_CPP11
 891:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 892:./lib/etl/include/etl/circular_buffer.h ****     /// push.
 893:./lib/etl/include/etl/circular_buffer.h ****     /// Adds an item to the buffer.
 894:./lib/etl/include/etl/circular_buffer.h ****     /// If the buffer is filled then the oldest item is overwritten.
 895:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 896:./lib/etl/include/etl/circular_buffer.h ****     void push(rvalue_reference item)
 897:./lib/etl/include/etl/circular_buffer.h ****     {
 898:./lib/etl/include/etl/circular_buffer.h ****       ::new (&pbuffer[in]) T(etl::move(item));
 899:./lib/etl/include/etl/circular_buffer.h ****       increment_in();
 900:./lib/etl/include/etl/circular_buffer.h **** 
 901:./lib/etl/include/etl/circular_buffer.h ****       // Did we catch up with the 'out' index?
 902:./lib/etl/include/etl/circular_buffer.h ****       if (in == out)
 903:./lib/etl/include/etl/circular_buffer.h ****       {
 904:./lib/etl/include/etl/circular_buffer.h ****         // Forget about the oldest item.
 905:./lib/etl/include/etl/circular_buffer.h ****         pbuffer[out].~T();
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 68


 906:./lib/etl/include/etl/circular_buffer.h ****         increment_out();
 907:./lib/etl/include/etl/circular_buffer.h ****       }
 908:./lib/etl/include/etl/circular_buffer.h ****       else
 909:./lib/etl/include/etl/circular_buffer.h ****       {
 910:./lib/etl/include/etl/circular_buffer.h ****         ETL_INCREMENT_DEBUG_COUNT;
 911:./lib/etl/include/etl/circular_buffer.h ****       }
 912:./lib/etl/include/etl/circular_buffer.h ****     }
 913:./lib/etl/include/etl/circular_buffer.h **** #endif
 914:./lib/etl/include/etl/circular_buffer.h **** 
 915:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 916:./lib/etl/include/etl/circular_buffer.h ****     /// Push a buffer from an iterator range.
 917:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 918:./lib/etl/include/etl/circular_buffer.h ****     template <typename TIterator>
 919:./lib/etl/include/etl/circular_buffer.h ****     void push(TIterator first, const TIterator& last)
 920:./lib/etl/include/etl/circular_buffer.h ****     {
 921:./lib/etl/include/etl/circular_buffer.h ****       while (first != last)
 922:./lib/etl/include/etl/circular_buffer.h ****       {
 923:./lib/etl/include/etl/circular_buffer.h ****         push(*first);
 924:./lib/etl/include/etl/circular_buffer.h ****         ++first;
 925:./lib/etl/include/etl/circular_buffer.h ****       }
 926:./lib/etl/include/etl/circular_buffer.h ****     }
 927:./lib/etl/include/etl/circular_buffer.h **** 
 928:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 929:./lib/etl/include/etl/circular_buffer.h ****     /// pop
 930:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 931:./lib/etl/include/etl/circular_buffer.h ****     void pop()
 932:./lib/etl/include/etl/circular_buffer.h ****     {
 933:./lib/etl/include/etl/circular_buffer.h ****       ETL_ASSERT(!empty(), ETL_ERROR(circular_buffer_empty));
 934:./lib/etl/include/etl/circular_buffer.h ****       pbuffer[out].~T();
 935:./lib/etl/include/etl/circular_buffer.h ****       increment_out();
 936:./lib/etl/include/etl/circular_buffer.h ****       ETL_DECREMENT_DEBUG_COUNT;
 937:./lib/etl/include/etl/circular_buffer.h ****     }
 938:./lib/etl/include/etl/circular_buffer.h **** 
 939:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 940:./lib/etl/include/etl/circular_buffer.h ****     /// pop(n)
 941:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 942:./lib/etl/include/etl/circular_buffer.h ****     void pop(size_type n)
 943:./lib/etl/include/etl/circular_buffer.h ****     {
 944:./lib/etl/include/etl/circular_buffer.h ****       while (n-- != 0U)
 945:./lib/etl/include/etl/circular_buffer.h ****       {
 946:./lib/etl/include/etl/circular_buffer.h ****         pop();
 947:./lib/etl/include/etl/circular_buffer.h ****       }
 948:./lib/etl/include/etl/circular_buffer.h ****     }
 949:./lib/etl/include/etl/circular_buffer.h **** 
 950:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 951:./lib/etl/include/etl/circular_buffer.h ****     /// Clears the buffer.
 952:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 953:./lib/etl/include/etl/circular_buffer.h ****     void clear()
 954:./lib/etl/include/etl/circular_buffer.h ****     {
 955:./lib/etl/include/etl/circular_buffer.h ****       if ETL_IF_CONSTEXPR(etl::is_trivially_destructible<T>::value)
 956:./lib/etl/include/etl/circular_buffer.h ****       {
 957:./lib/etl/include/etl/circular_buffer.h ****         in    = 0U;
 958:./lib/etl/include/etl/circular_buffer.h ****         out   = 0U;
 959:./lib/etl/include/etl/circular_buffer.h ****         ETL_RESET_DEBUG_COUNT;
 960:./lib/etl/include/etl/circular_buffer.h ****       }
 961:./lib/etl/include/etl/circular_buffer.h ****       else
 962:./lib/etl/include/etl/circular_buffer.h ****       {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 69


 963:./lib/etl/include/etl/circular_buffer.h ****         while (!empty())
 964:./lib/etl/include/etl/circular_buffer.h ****         {
 965:./lib/etl/include/etl/circular_buffer.h ****           pop();
 966:./lib/etl/include/etl/circular_buffer.h ****         }
 967:./lib/etl/include/etl/circular_buffer.h ****       }
 968:./lib/etl/include/etl/circular_buffer.h ****     }
 969:./lib/etl/include/etl/circular_buffer.h **** 
 970:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 971:./lib/etl/include/etl/circular_buffer.h ****     /// Fills the buffer.
 972:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 973:./lib/etl/include/etl/circular_buffer.h ****     void fill(const T& value)
 974:./lib/etl/include/etl/circular_buffer.h ****     {
 975:./lib/etl/include/etl/circular_buffer.h ****       etl::fill(begin(), end(), value);
 976:./lib/etl/include/etl/circular_buffer.h ****     }
 977:./lib/etl/include/etl/circular_buffer.h **** 
 978:./lib/etl/include/etl/circular_buffer.h **** #ifdef ETL_ICIRCULAR_BUFFER_REPAIR_ENABLE
 979:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 980:./lib/etl/include/etl/circular_buffer.h ****     /// Fix the internal pointers after a low level memory copy.
 981:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 982:./lib/etl/include/etl/circular_buffer.h ****     virtual void repair() = 0;
 983:./lib/etl/include/etl/circular_buffer.h **** #endif
 984:./lib/etl/include/etl/circular_buffer.h **** 
 985:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 986:./lib/etl/include/etl/circular_buffer.h ****     /// - operator for iterator
 987:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 988:./lib/etl/include/etl/circular_buffer.h ****     friend difference_type operator -(const iterator& lhs, const iterator& rhs)
 989:./lib/etl/include/etl/circular_buffer.h ****     {
 990:./lib/etl/include/etl/circular_buffer.h ****       return distance(rhs, lhs);
 991:./lib/etl/include/etl/circular_buffer.h ****     }
 992:./lib/etl/include/etl/circular_buffer.h **** 
 993:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 994:./lib/etl/include/etl/circular_buffer.h ****     /// - operator for const_iterator
 995:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
 996:./lib/etl/include/etl/circular_buffer.h ****     friend difference_type operator -(const const_iterator& lhs, const const_iterator& rhs)
 997:./lib/etl/include/etl/circular_buffer.h ****     {
 998:./lib/etl/include/etl/circular_buffer.h ****       return distance(rhs, lhs);
 999:./lib/etl/include/etl/circular_buffer.h ****     }
1000:./lib/etl/include/etl/circular_buffer.h **** 
1001:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1002:./lib/etl/include/etl/circular_buffer.h ****     /// - operator for reverse_iterator
1003:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1004:./lib/etl/include/etl/circular_buffer.h ****     friend difference_type operator -(const reverse_iterator& lhs, const reverse_iterator& rhs)
1005:./lib/etl/include/etl/circular_buffer.h ****     {
1006:./lib/etl/include/etl/circular_buffer.h ****       return distance(lhs.base(), rhs.base());
1007:./lib/etl/include/etl/circular_buffer.h ****     }
1008:./lib/etl/include/etl/circular_buffer.h **** 
1009:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1010:./lib/etl/include/etl/circular_buffer.h ****     /// - operator for const_reverse_iterator
1011:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1012:./lib/etl/include/etl/circular_buffer.h ****     friend difference_type operator -(const const_reverse_iterator& lhs, const const_reverse_iterat
1013:./lib/etl/include/etl/circular_buffer.h ****     {
1014:./lib/etl/include/etl/circular_buffer.h ****       return distance(lhs.base(), rhs.base());
1015:./lib/etl/include/etl/circular_buffer.h ****     }
1016:./lib/etl/include/etl/circular_buffer.h **** 
1017:./lib/etl/include/etl/circular_buffer.h ****   protected:
1018:./lib/etl/include/etl/circular_buffer.h **** 
1019:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 70


1020:./lib/etl/include/etl/circular_buffer.h ****     /// Protected constructor.
1021:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1022:./lib/etl/include/etl/circular_buffer.h ****     icircular_buffer(pointer pbuffer_, size_type max_length)
1023:./lib/etl/include/etl/circular_buffer.h ****       : circular_buffer_base(max_length + 1U)
1024:./lib/etl/include/etl/circular_buffer.h ****       , pbuffer(pbuffer_)
1025:./lib/etl/include/etl/circular_buffer.h ****     {
1026:./lib/etl/include/etl/circular_buffer.h ****     }
1027:./lib/etl/include/etl/circular_buffer.h **** 
1028:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1029:./lib/etl/include/etl/circular_buffer.h ****     /// Measures the distance between two iterators.
1030:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1031:./lib/etl/include/etl/circular_buffer.h ****     template <typename TIterator1, typename TIterator2>
1032:./lib/etl/include/etl/circular_buffer.h ****     static difference_type distance(const TIterator1& range_begin, const TIterator2& range_end)
1033:./lib/etl/include/etl/circular_buffer.h ****     {
1034:./lib/etl/include/etl/circular_buffer.h ****       difference_type distance1 = distance(range_begin);
1035:./lib/etl/include/etl/circular_buffer.h ****       difference_type distance2 = distance(range_end);
1036:./lib/etl/include/etl/circular_buffer.h **** 
1037:./lib/etl/include/etl/circular_buffer.h ****       return distance2 - distance1;
1038:./lib/etl/include/etl/circular_buffer.h ****     }
1039:./lib/etl/include/etl/circular_buffer.h **** 
1040:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1041:./lib/etl/include/etl/circular_buffer.h ****     /// Measures the distance from the _begin iterator to the specified iterator.
1042:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1043:./lib/etl/include/etl/circular_buffer.h ****     template <typename TIterator>
1044:./lib/etl/include/etl/circular_buffer.h ****     static difference_type distance(const TIterator& other)
1045:./lib/etl/include/etl/circular_buffer.h ****     {
1046:./lib/etl/include/etl/circular_buffer.h ****       const difference_type index = other.get_index();
1047:./lib/etl/include/etl/circular_buffer.h ****       const difference_type reference_index = other.container().out;
1048:./lib/etl/include/etl/circular_buffer.h ****       const size_t buffer_size = other.container().buffer_size;
1049:./lib/etl/include/etl/circular_buffer.h **** 
1050:./lib/etl/include/etl/circular_buffer.h ****       if (index < reference_index)
1051:./lib/etl/include/etl/circular_buffer.h ****       {
1052:./lib/etl/include/etl/circular_buffer.h ****         return buffer_size + index - reference_index;
1053:./lib/etl/include/etl/circular_buffer.h ****       }
1054:./lib/etl/include/etl/circular_buffer.h ****       else
1055:./lib/etl/include/etl/circular_buffer.h ****       {
1056:./lib/etl/include/etl/circular_buffer.h ****         return index - reference_index;
1057:./lib/etl/include/etl/circular_buffer.h ****       }
1058:./lib/etl/include/etl/circular_buffer.h ****     }
1059:./lib/etl/include/etl/circular_buffer.h **** 
1060:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1061:./lib/etl/include/etl/circular_buffer.h ****     /// Fix the internal pointers after a low level memory copy.
1062:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1063:./lib/etl/include/etl/circular_buffer.h ****     void repair_buffer(T* pbuffer_)
1064:./lib/etl/include/etl/circular_buffer.h ****     {
1065:./lib/etl/include/etl/circular_buffer.h ****       pbuffer = pbuffer_;
1066:./lib/etl/include/etl/circular_buffer.h ****     }
1067:./lib/etl/include/etl/circular_buffer.h **** 
1068:./lib/etl/include/etl/circular_buffer.h ****     pointer pbuffer;
1069:./lib/etl/include/etl/circular_buffer.h **** 
1070:./lib/etl/include/etl/circular_buffer.h ****   private:
1071:./lib/etl/include/etl/circular_buffer.h **** 
1072:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1073:./lib/etl/include/etl/circular_buffer.h ****     /// Destructor.
1074:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1075:./lib/etl/include/etl/circular_buffer.h **** #if defined(ETL_POLYMORPHIC_CIRCULAR_BUFFER) || defined(ETL_POLYMORPHIC_CONTAINERS)
1076:./lib/etl/include/etl/circular_buffer.h ****   public:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 71


1077:./lib/etl/include/etl/circular_buffer.h ****     virtual ~icircular_buffer()
1078:./lib/etl/include/etl/circular_buffer.h ****     {
1079:./lib/etl/include/etl/circular_buffer.h ****     }
1080:./lib/etl/include/etl/circular_buffer.h **** #else
1081:./lib/etl/include/etl/circular_buffer.h ****   protected:
1082:./lib/etl/include/etl/circular_buffer.h ****     ~icircular_buffer()
1083:./lib/etl/include/etl/circular_buffer.h ****     {
1084:./lib/etl/include/etl/circular_buffer.h ****     }
1085:./lib/etl/include/etl/circular_buffer.h **** #endif
1086:./lib/etl/include/etl/circular_buffer.h ****   };
1087:./lib/etl/include/etl/circular_buffer.h **** 
1088:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
1089:./lib/etl/include/etl/circular_buffer.h ****   /// A fixed capacity circular buffer.
1090:./lib/etl/include/etl/circular_buffer.h ****   /// Internal buffer.
1091:./lib/etl/include/etl/circular_buffer.h ****   //***************************************************************************
1092:./lib/etl/include/etl/circular_buffer.h ****   template <typename T, size_t MAX_SIZE_>
1093:./lib/etl/include/etl/circular_buffer.h ****   class circular_buffer : public icircular_buffer<T>
1094:./lib/etl/include/etl/circular_buffer.h ****   {
1095:./lib/etl/include/etl/circular_buffer.h ****   public:
1096:./lib/etl/include/etl/circular_buffer.h **** 
1097:./lib/etl/include/etl/circular_buffer.h ****     ETL_STATIC_ASSERT((MAX_SIZE_ > 0U), "Zero capacity etl::circular_buffer is not valid");
1098:./lib/etl/include/etl/circular_buffer.h **** 
1099:./lib/etl/include/etl/circular_buffer.h ****     static ETL_CONSTANT typename icircular_buffer<T>::size_type MAX_SIZE = typename icircular_buffe
1100:./lib/etl/include/etl/circular_buffer.h **** 
1101:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1102:./lib/etl/include/etl/circular_buffer.h ****     /// Constructor.
1103:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1104:./lib/etl/include/etl/circular_buffer.h ****     circular_buffer()
1105:./lib/etl/include/etl/circular_buffer.h ****       : icircular_buffer<T>(reinterpret_cast<T*>(buffer.raw), MAX_SIZE)
1106:./lib/etl/include/etl/circular_buffer.h ****     {
1107:./lib/etl/include/etl/circular_buffer.h ****     }
1108:./lib/etl/include/etl/circular_buffer.h **** 
1109:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1110:./lib/etl/include/etl/circular_buffer.h ****     /// Constructor.
1111:./lib/etl/include/etl/circular_buffer.h ****     /// Constructs a buffer from an iterator range.
1112:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1113:./lib/etl/include/etl/circular_buffer.h ****     template <typename TIterator>
1114:./lib/etl/include/etl/circular_buffer.h ****     circular_buffer(TIterator first, const TIterator& last, typename etl::enable_if<!etl::is_integr
1115:./lib/etl/include/etl/circular_buffer.h ****       : icircular_buffer<T>(reinterpret_cast<T*>(buffer.raw), MAX_SIZE)
1116:./lib/etl/include/etl/circular_buffer.h ****     {
1117:./lib/etl/include/etl/circular_buffer.h ****       while (first != last)
1118:./lib/etl/include/etl/circular_buffer.h ****       {
1119:./lib/etl/include/etl/circular_buffer.h ****         this->push(*first);
1120:./lib/etl/include/etl/circular_buffer.h ****         ++first;
1121:./lib/etl/include/etl/circular_buffer.h ****       }
1122:./lib/etl/include/etl/circular_buffer.h ****     }
1123:./lib/etl/include/etl/circular_buffer.h **** 
1124:./lib/etl/include/etl/circular_buffer.h **** #if ETL_HAS_INITIALIZER_LIST
1125:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1126:./lib/etl/include/etl/circular_buffer.h ****     /// Construct from initializer_list.
1127:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1128:./lib/etl/include/etl/circular_buffer.h ****     circular_buffer(std::initializer_list<T> init)
1129:./lib/etl/include/etl/circular_buffer.h ****       : icircular_buffer<T>(reinterpret_cast<T*>(buffer.raw), MAX_SIZE)
1130:./lib/etl/include/etl/circular_buffer.h ****     {
1131:./lib/etl/include/etl/circular_buffer.h ****       this->push(init.begin(), init.end());
1132:./lib/etl/include/etl/circular_buffer.h ****     }
1133:./lib/etl/include/etl/circular_buffer.h **** #endif
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 72


1134:./lib/etl/include/etl/circular_buffer.h **** 
1135:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1136:./lib/etl/include/etl/circular_buffer.h ****     /// Copy Constructor.
1137:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1138:./lib/etl/include/etl/circular_buffer.h ****     circular_buffer(const circular_buffer& other)
1139:./lib/etl/include/etl/circular_buffer.h ****       : icircular_buffer<T>(reinterpret_cast<T*>(buffer.raw), MAX_SIZE)
1140:./lib/etl/include/etl/circular_buffer.h ****     {
1141:./lib/etl/include/etl/circular_buffer.h ****       if (this != &other)
1142:./lib/etl/include/etl/circular_buffer.h ****       {
1143:./lib/etl/include/etl/circular_buffer.h ****         this->push(other.begin(), other.end());
1144:./lib/etl/include/etl/circular_buffer.h ****       }
1145:./lib/etl/include/etl/circular_buffer.h ****     }
1146:./lib/etl/include/etl/circular_buffer.h **** 
1147:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1148:./lib/etl/include/etl/circular_buffer.h ****     /// Assignment operator
1149:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1150:./lib/etl/include/etl/circular_buffer.h ****     circular_buffer& operator =(const circular_buffer& other)
1151:./lib/etl/include/etl/circular_buffer.h ****     {
1152:./lib/etl/include/etl/circular_buffer.h ****       if (this != &other)
1153:./lib/etl/include/etl/circular_buffer.h ****       {
1154:./lib/etl/include/etl/circular_buffer.h ****         this->clear();
1155:./lib/etl/include/etl/circular_buffer.h ****         this->push(other.begin(), other.end());
1156:./lib/etl/include/etl/circular_buffer.h ****       }
1157:./lib/etl/include/etl/circular_buffer.h **** 
1158:./lib/etl/include/etl/circular_buffer.h ****       return *this;
1159:./lib/etl/include/etl/circular_buffer.h ****     }
1160:./lib/etl/include/etl/circular_buffer.h **** 
1161:./lib/etl/include/etl/circular_buffer.h **** #if ETL_USING_CPP11
1162:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1163:./lib/etl/include/etl/circular_buffer.h ****     /// Move Constructor.
1164:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1165:./lib/etl/include/etl/circular_buffer.h ****     circular_buffer(circular_buffer&& other)
1166:./lib/etl/include/etl/circular_buffer.h ****       : icircular_buffer<T>(reinterpret_cast<T*>(buffer.raw), MAX_SIZE)
1167:./lib/etl/include/etl/circular_buffer.h ****     {
1168:./lib/etl/include/etl/circular_buffer.h ****       if (this != &other)
1169:./lib/etl/include/etl/circular_buffer.h ****       {
1170:./lib/etl/include/etl/circular_buffer.h ****         typename etl::icircular_buffer<T>::iterator itr = other.begin();
1171:./lib/etl/include/etl/circular_buffer.h ****         while (itr != other.end())
1172:./lib/etl/include/etl/circular_buffer.h ****         {
1173:./lib/etl/include/etl/circular_buffer.h ****           this->push(etl::move(*itr));
1174:./lib/etl/include/etl/circular_buffer.h ****           ++itr;
1175:./lib/etl/include/etl/circular_buffer.h ****         }
1176:./lib/etl/include/etl/circular_buffer.h ****       }
1177:./lib/etl/include/etl/circular_buffer.h ****     }
1178:./lib/etl/include/etl/circular_buffer.h **** 
1179:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1180:./lib/etl/include/etl/circular_buffer.h ****     /// Move Assignment operator
1181:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1182:./lib/etl/include/etl/circular_buffer.h ****     circular_buffer& operator =(circular_buffer&& other)
1183:./lib/etl/include/etl/circular_buffer.h ****     {
1184:./lib/etl/include/etl/circular_buffer.h ****       if (this != &other)
1185:./lib/etl/include/etl/circular_buffer.h ****       {
1186:./lib/etl/include/etl/circular_buffer.h ****         this->clear();
1187:./lib/etl/include/etl/circular_buffer.h **** 
1188:./lib/etl/include/etl/circular_buffer.h ****         for (typename etl::icircular_buffer<T>::const_iterator itr = other.begin(); itr != other.en
1189:./lib/etl/include/etl/circular_buffer.h ****         {
1190:./lib/etl/include/etl/circular_buffer.h ****           this->push(etl::move(*itr));
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 73


1191:./lib/etl/include/etl/circular_buffer.h ****         }
1192:./lib/etl/include/etl/circular_buffer.h ****       }
1193:./lib/etl/include/etl/circular_buffer.h **** 
1194:./lib/etl/include/etl/circular_buffer.h ****       return *this;
1195:./lib/etl/include/etl/circular_buffer.h ****     }
1196:./lib/etl/include/etl/circular_buffer.h **** 
1197:./lib/etl/include/etl/circular_buffer.h **** #endif
1198:./lib/etl/include/etl/circular_buffer.h **** 
1199:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1200:./lib/etl/include/etl/circular_buffer.h ****     /// Destructor.
1201:./lib/etl/include/etl/circular_buffer.h ****     //*************************************************************************
1202:./lib/etl/include/etl/circular_buffer.h ****     ~circular_buffer()
 475              		.loc 23 1202 5 is_stmt 1 view .LVU91
 476              	.LBB703:
 477              	.LBI703:
 953:./lib/etl/include/etl/circular_buffer.h ****     {
 478              		.loc 23 953 10 view .LVU92
 953:./lib/etl/include/etl/circular_buffer.h ****     {
 479              		.loc 23 953 10 is_stmt 0 view .LVU93
 480              	.LBE703:
 481              	.LBB704:
 482              	.LBI704:
1082:./lib/etl/include/etl/circular_buffer.h ****     {
 483              		.loc 23 1082 5 is_stmt 1 view .LVU94
1082:./lib/etl/include/etl/circular_buffer.h ****     {
 484              		.loc 23 1082 5 is_stmt 0 view .LVU95
 485              	.LBE704:
 486              	.LBE702:
 487              		.loc 18 9 7 view .LVU96
 488 0024 2046     		mov	r0, r4
 489 0026 38BD     		pop	{r3, r4, r5, pc}
 490              		.loc 18 9 7 view .LVU97
 491              		.cfi_endproc
 492              	.LFE7925:
 494              		.weak	_ZN6TTrackD1Ev
 495              		.thumb_set _ZN6TTrackD1Ev,_ZN6TTrackD2Ev
 496              		.section	.text.startup.main,"ax",%progbits
 497              		.align	1
 498              		.p2align 2,,3
 499              		.global	main
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 503              		.fpu fpv5-d16
 505              	main:
 506              	.LFB7180:
 507              		.file 24 "src/main.cpp"
   1:src/main.cpp  **** #include "daisysp.h"
   2:src/main.cpp  **** #include "daisy_pod.h"
   3:src/main.cpp  **** #include "TTrack.h"
   4:src/main.cpp  **** 
   5:src/main.cpp  **** // Set max delay time to 0.75 of samplerate.
   6:src/main.cpp  **** #define MAX_DELAY static_cast<size_t>(48000 * 2.5f)
   7:src/main.cpp  **** #define REV 0
   8:src/main.cpp  **** #define DEL1 1
   9:src/main.cpp  **** #define DEL2 2
  10:src/main.cpp  **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 74


  11:src/main.cpp  **** 
  12:src/main.cpp  **** using namespace daisysp;
  13:src/main.cpp  **** using namespace daisy;
  14:src/main.cpp  **** 
  15:src/main.cpp  **** static DaisyPod pod;
  16:src/main.cpp  **** static TTrack ttrack;
  17:src/main.cpp  **** 
  18:src/main.cpp  **** static Svf                                       filtl, filtr;
  19:src/main.cpp  **** static ReverbSc                                  rev;
  20:src/main.cpp  **** static DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS dell;
  21:src/main.cpp  **** static DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS delr;
  22:src/main.cpp  **** static Tone                                      tone;
  23:src/main.cpp  **** static Parameter deltime, cutoffParam, deldiscrete;
  24:src/main.cpp  **** int              mode = REV;
  25:src/main.cpp  **** 
  26:src/main.cpp  **** float currentDelay, feedback, delayTarget, cutoff, currentTempo, drywet;
  27:src/main.cpp  **** 
  28:src/main.cpp  **** //Helper functions
  29:src/main.cpp  **** void Controls();
  30:src/main.cpp  **** 
  31:src/main.cpp  **** void GetReverbSample(float &outl, float &outr, float inl, float inr);
  32:src/main.cpp  **** 
  33:src/main.cpp  **** void GetDelaySample(float &outl, float &outr, float inl, float inr);
  34:src/main.cpp  **** 
  35:src/main.cpp  **** void AudioCallback(AudioHandle::InterleavingInputBuffer  in,
  36:src/main.cpp  ****                    AudioHandle::InterleavingOutputBuffer out,
  37:src/main.cpp  ****                    size_t                                size)
  38:src/main.cpp  **** {
  39:src/main.cpp  ****     float outl, outr, inl, inr;
  40:src/main.cpp  **** 	std::vector<float> inavg;
  41:src/main.cpp  **** 	inavg.resize(size);
  42:src/main.cpp  ****     Controls();
  43:src/main.cpp  **** 	//audio
  44:src/main.cpp  ****     for(size_t i = 0; i < size; i += 2)
  45:src/main.cpp  ****     {
  46:src/main.cpp  ****         inl = in[i];
  47:src/main.cpp  ****         inr = in[i + 1];
  48:src/main.cpp  **** 		switch(mode)
  49:src/main.cpp  ****     	{
  50:src/main.cpp  ****             case REV: GetReverbSample(outl, outr, inl, inr); break;
  51:src/main.cpp  ****             case DEL1: GetDelaySample(outl, outr, inl, inr); break;
  52:src/main.cpp  **** 			case DEL2: GetDelaySample(outl, outr, inl, inr); break;
  53:src/main.cpp  ****             default: outl = outr = 0;
  54:src/main.cpp  ****         }
  55:src/main.cpp  **** 		inavg[i] = (inl + inr) / 2;
  56:src/main.cpp  ****         // left out
  57:src/main.cpp  ****         out[i] = outl;
  58:src/main.cpp  **** 
  59:src/main.cpp  ****         // right out
  60:src/main.cpp  ****         out[i + 1] = outr;
  61:src/main.cpp  ****     }
  62:src/main.cpp  **** 
  63:src/main.cpp  **** 	ttrack.processAudioFrame(inavg.data());
  64:src/main.cpp  ****     currentTempo = ttrack.getTempo();
  65:src/main.cpp  **** }
  66:src/main.cpp  **** 
  67:src/main.cpp  **** int main(void)
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 75


  68:src/main.cpp  **** {
 508              		.loc 24 68 1 is_stmt 1 view -0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 32
 511              		@ frame_needed = 0, uses_anonymous_args = 0
  69:src/main.cpp  ****     // initialize pod hardware and oscillator daisysp module
  70:src/main.cpp  ****     float sample_rate;
 512              		.loc 24 70 5 view .LVU99
  71:src/main.cpp  **** 
  72:src/main.cpp  ****     //Inits and sample rate
  73:src/main.cpp  ****     pod.Init();
 513              		.loc 24 73 5 view .LVU100
  68:src/main.cpp  ****     // initialize pod hardware and oscillator daisysp module
 514              		.loc 24 68 1 is_stmt 0 view .LVU101
 515 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 516              		.cfi_def_cfa_offset 36
 517              		.cfi_offset 4, -36
 518              		.cfi_offset 5, -32
 519              		.cfi_offset 6, -28
 520              		.cfi_offset 7, -24
 521              		.cfi_offset 8, -20
 522              		.cfi_offset 9, -16
 523              		.cfi_offset 10, -12
 524              		.cfi_offset 11, -8
 525              		.cfi_offset 14, -4
 526              		.loc 24 73 13 view .LVU102
 527 0004 0021     		movs	r1, #0
 528 0006 5E48     		ldr	r0, .L21+8
  74:src/main.cpp  ****     pod.SetAudioBlockSize(4);
  75:src/main.cpp  ****     sample_rate = pod.AudioSampleRate();
  76:src/main.cpp  ****     filtl.Init(sample_rate);
  77:src/main.cpp  **** 	filtr.Init(sample_rate);
  78:src/main.cpp  ****     rev.Init(sample_rate);
 529              		.loc 24 78 13 view .LVU103
 530 0008 5E4E     		ldr	r6, .L21+12
 531              	.LBB705:
 532              	.LBB706:
 533              	.LBB707:
  25:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     /** initializes the delay line by clearing the values within, and setting delay to 1 sample.
  26:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     */
  27:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     void Init() { Reset(); }
  28:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  29:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     */
  30:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     void Reset()
  31:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     {
  32:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         for(size_t i = 0; i < max_size; i++)
  33:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         {
  34:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****             line_[i] = T(0);
  35:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         }
  36:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         write_ptr_ = 0;
  37:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         delay_     = 1;
 534              		.loc 17 37 20 view .LVU104
 535 000a 0124     		movs	r4, #1
 536              	.LBB708:
  34:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         }
 537              		.loc 17 34 22 view .LVU105
 538 000c DFF8C8A1 		ldr	r10, .L21+96
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 76


 539              	.LBE708:
 540              	.LBE707:
 541              	.LBE706:
 542              	.LBE705:
 543              	.LBB715:
 544              	.LBB716:
 545              	.LBB717:
 546              	.LBB718:
 547 0010 DFF8C891 		ldr	r9, .L21+100
 548              	.LBE718:
 549              	.LBE717:
 550              	.LBE716:
 551              	.LBE715:
  68:src/main.cpp  ****     // initialize pod hardware and oscillator daisysp module
 552              		.loc 24 68 1 view .LVU106
 553 0014 2DED028B 		vpush.64	{d8}
 554              		.cfi_def_cfa_offset 44
 555              		.cfi_offset 80, -44
 556              		.cfi_offset 81, -40
 557 0018 89B0     		sub	sp, sp, #36
 558              		.cfi_def_cfa_offset 80
  73:src/main.cpp  ****     pod.SetAudioBlockSize(4);
 559              		.loc 24 73 13 view .LVU107
 560 001a FFF7FEFF 		bl	_ZN5daisy8DaisyPod4InitEb
 561              	.LVL14:
  74:src/main.cpp  ****     sample_rate = pod.AudioSampleRate();
 562              		.loc 24 74 5 is_stmt 1 view .LVU108
  74:src/main.cpp  ****     sample_rate = pod.AudioSampleRate();
 563              		.loc 24 74 26 is_stmt 0 view .LVU109
 564 001e 0421     		movs	r1, #4
 565 0020 5748     		ldr	r0, .L21+8
  79:src/main.cpp  ****     dell.Init();
  80:src/main.cpp  ****     delr.Init();
  81:src/main.cpp  ****     tone.Init(sample_rate);
  82:src/main.cpp  **** 
  83:src/main.cpp  ****     //fixed hpf before the reverb
  84:src/main.cpp  ****     filtl.SetRes(0.7f);
  85:src/main.cpp  ****     filtl.SetFreq(120.f);
  86:src/main.cpp  ****     filtr.SetRes(0.7f);
  87:src/main.cpp  ****     filtr.SetFreq(120.f);
  88:src/main.cpp  **** 
  89:src/main.cpp  ****     //set parameters
  90:src/main.cpp  ****     deldiscrete.Init(pod.knob1, 0, 1, deldiscrete.LINEAR);
 566              		.loc 24 90 26 view .LVU110
 567 0022 6D46     		mov	r5, sp
  74:src/main.cpp  ****     sample_rate = pod.AudioSampleRate();
 568              		.loc 24 74 26 view .LVU111
 569 0024 FFF7FEFF 		bl	_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
 570              	.LVL15:
  75:src/main.cpp  ****     filtl.Init(sample_rate);
 571              		.loc 24 75 5 is_stmt 1 view .LVU112
  75:src/main.cpp  ****     filtl.Init(sample_rate);
 572              		.loc 24 75 38 is_stmt 0 view .LVU113
 573 0028 5548     		ldr	r0, .L21+8
 574 002a FFF7FEFF 		bl	_ZN5daisy8DaisyPod15AudioSampleRateEv
 575              	.LVL16:
 576 002e B0EE408A 		vmov.f32	s16, s0
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 77


 577              	.LVL17:
  76:src/main.cpp  **** 	filtr.Init(sample_rate);
 578              		.loc 24 76 5 is_stmt 1 view .LVU114
  76:src/main.cpp  **** 	filtr.Init(sample_rate);
 579              		.loc 24 76 15 is_stmt 0 view .LVU115
 580 0032 5548     		ldr	r0, .L21+16
 581 0034 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 582              	.LVL18:
  77:src/main.cpp  ****     rev.Init(sample_rate);
 583              		.loc 24 77 2 is_stmt 1 view .LVU116
  77:src/main.cpp  ****     rev.Init(sample_rate);
 584              		.loc 24 77 12 is_stmt 0 view .LVU117
 585 0038 5448     		ldr	r0, .L21+20
 586 003a B0EE480A 		vmov.f32	s0, s16
 587 003e FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 588              	.LVL19:
  78:src/main.cpp  ****     dell.Init();
 589              		.loc 24 78 5 is_stmt 1 view .LVU118
  78:src/main.cpp  ****     dell.Init();
 590              		.loc 24 78 13 is_stmt 0 view .LVU119
 591 0042 B0EE480A 		vmov.f32	s0, s16
 592 0046 3046     		mov	r0, r6
 593 0048 FFF7FEFF 		bl	_ZN7daisysp8ReverbSc4InitEf
 594              	.LVL20:
  79:src/main.cpp  ****     delr.Init();
 595              		.loc 24 79 5 is_stmt 1 view .LVU120
 596              	.LBB729:
 597              	.LBI705:
  27:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
 598              		.loc 17 27 10 view .LVU121
 599              	.LBB713:
 600              	.LBI706:
  30:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     {
 601              		.loc 17 30 10 view .LVU122
 602              	.LBB711:
 603              	.LBB709:
  32:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         {
 604              		.loc 17 32 29 view .LVU123
  34:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         }
 605              		.loc 17 34 22 is_stmt 0 view .LVU124
 606 004c 0021     		movs	r1, #0
 607 004e 504A     		ldr	r2, .L21+24
 608 0050 5046     		mov	r0, r10
 609              	.LBE709:
  36:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         delay_     = 1;
 610              		.loc 17 36 20 view .LVU125
 611 0052 8B46     		mov	fp, r1
 612              	.LBB710:
  34:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         }
 613              		.loc 17 34 22 view .LVU126
 614 0054 FFF7FEFF 		bl	memset
 615              	.LVL21:
  34:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         }
 616              		.loc 17 34 22 view .LVU127
 617              	.LBE710:
 618              	.LBE711:
 619              	.LBE713:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 78


 620              	.LBE729:
 621              	.LBB730:
 622              	.LBB725:
 623              	.LBB721:
 624              	.LBB719:
 625 0058 4D4A     		ldr	r2, .L21+24
 626 005a 4846     		mov	r0, r9
 627 005c 5946     		mov	r1, fp
 628              	.LBE719:
 629              	.LBE721:
 630              	.LBE725:
 631              	.LBE730:
 632              	.LBB731:
 633              	.LBB714:
 634              	.LBB712:
 635              		.loc 17 37 20 view .LVU128
 636 005e 4AE902B4 		strd	fp, r4, [r10, #-8]
 637              	.LVL22:
 638              		.loc 17 37 20 view .LVU129
 639              	.LBE712:
 640              	.LBE714:
 641              	.LBE731:
 642              	.LBB732:
 643              	.LBB726:
 644              	.LBB722:
 645              	.LBB720:
  32:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         {
 646              		.loc 17 32 29 is_stmt 1 view .LVU130
  34:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         }
 647              		.loc 17 34 22 is_stmt 0 view .LVU131
 648 0062 FFF7FEFF 		bl	memset
 649              	.LVL23:
  34:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         }
 650              		.loc 17 34 22 view .LVU132
 651              	.LBE720:
 652              	.LBE722:
 653              	.LBE726:
 654              	.LBE732:
  81:src/main.cpp  **** 
 655              		.loc 24 81 14 view .LVU133
 656 0066 B0EE480A 		vmov.f32	s0, s16
 657 006a 4A48     		ldr	r0, .L21+28
 658              	.LBB733:
 659              	.LBB727:
 660              	.LBB723:
 661              		.loc 17 37 20 view .LVU134
 662 006c 49F8044C 		str	r4, [r9, #-4]
 663              	.LBE723:
 664              	.LBE727:
 665              	.LBE733:
  81:src/main.cpp  **** 
 666              		.loc 24 81 5 is_stmt 1 view .LVU135
 667              	.LBB734:
 668              	.LBB728:
 669              	.LBB724:
  36:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         delay_     = 1;
 670              		.loc 17 36 20 is_stmt 0 view .LVU136
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 79


 671 0070 49F808BC 		str	fp, [r9, #-8]
 672              	.LBE724:
 673              	.LBE728:
 674              	.LBE734:
  81:src/main.cpp  **** 
 675              		.loc 24 81 14 view .LVU137
 676 0074 FFF7FEFF 		bl	_ZN7daisysp4Tone4InitEf
 677              	.LVL24:
  84:src/main.cpp  ****     filtl.SetFreq(120.f);
 678              		.loc 24 84 5 is_stmt 1 view .LVU138
  84:src/main.cpp  ****     filtl.SetFreq(120.f);
 679              		.loc 24 84 17 is_stmt 0 view .LVU139
 680 0078 9FED470A 		vldr.32	s0, .L21+32
 681 007c 4248     		ldr	r0, .L21+16
 682 007e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 683              	.LVL25:
  85:src/main.cpp  ****     filtr.SetRes(0.7f);
 684              		.loc 24 85 5 is_stmt 1 view .LVU140
  85:src/main.cpp  ****     filtr.SetRes(0.7f);
 685              		.loc 24 85 18 is_stmt 0 view .LVU141
 686 0082 9FED460A 		vldr.32	s0, .L21+36
 687 0086 4048     		ldr	r0, .L21+16
 688 0088 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 689              	.LVL26:
  86:src/main.cpp  ****     filtr.SetFreq(120.f);
 690              		.loc 24 86 5 is_stmt 1 view .LVU142
 691              		.loc 24 90 26 is_stmt 0 view .LVU143
 692 008c 444C     		ldr	r4, .L21+40
  86:src/main.cpp  ****     filtr.SetFreq(120.f);
 693              		.loc 24 86 17 view .LVU144
 694 008e 9FED420A 		vldr.32	s0, .L21+32
 695 0092 3E48     		ldr	r0, .L21+20
 696 0094 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 697              	.LVL27:
  87:src/main.cpp  **** 
 698              		.loc 24 87 5 is_stmt 1 view .LVU145
  87:src/main.cpp  **** 
 699              		.loc 24 87 18 is_stmt 0 view .LVU146
 700 0098 9FED400A 		vldr.32	s0, .L21+36
 701 009c 3B48     		ldr	r0, .L21+20
 702 009e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 703              	.LVL28:
 704              		.loc 24 90 5 is_stmt 1 view .LVU147
 705              		.loc 24 90 21 is_stmt 0 view .LVU148
 706 00a2 F7EE000A 		vmov.f32	s1, #1.0e+0
 707 00a6 9FED3F0A 		vldr.32	s0, .L21+44
 708              		.loc 24 90 26 view .LVU149
 709 00aa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 710 00ac 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 711 00ae 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 712 00b2 85E80F00 		stm	r5, {r0, r1, r2, r3}
 713              		.loc 24 90 21 view .LVU150
 714 00b6 5A46     		mov	r2, fp
 715 00b8 6946     		mov	r1, sp
 716 00ba 3B48     		ldr	r0, .L21+48
 717 00bc FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 718              	.LVL29:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 80


 719              	.LBB735:
 720              	.LBI735:
 721              		.loc 5 23 5 is_stmt 1 view .LVU151
 722              		.loc 5 23 5 is_stmt 0 view .LVU152
 723              	.LBE735:
  91:src/main.cpp  ****     deltime.Init(pod.knob1, sample_rate * .05, MAX_DELAY, deltime.LOGARITHMIC);
 724              		.loc 24 91 5 is_stmt 1 view .LVU153
 725              		.loc 24 91 29 is_stmt 0 view .LVU154
 726 00c0 B7EEC87A 		vcvt.f64.f32	d7, s16
 727              		.loc 24 91 22 view .LVU155
 728 00c4 A4F1100E 		sub	lr, r4, #16
 729 00c8 EC46     		mov	ip, sp
 730              		.loc 24 91 17 view .LVU156
 731 00ca DFED380A 		vldr.32	s1, .L21+52
 732              		.loc 24 91 41 view .LVU157
 733 00ce 9FED2A6B 		vldr.64	d6, .L21
 734              		.loc 24 91 22 view .LVU158
 735 00d2 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 736              		.loc 24 91 41 view .LVU159
 737 00d6 27EE067B 		vmul.f64	d7, d7, d6
 738              		.loc 24 91 22 view .LVU160
 739 00da ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 740 00de 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 741              		.loc 24 91 17 view .LVU161
 742 00e2 B7EEC70B 		vcvt.f32.f64	s0, d7
 743              		.loc 24 91 22 view .LVU162
 744 00e6 85E80F00 		stm	r5, {r0, r1, r2, r3}
 745              		.loc 24 91 17 view .LVU163
 746 00ea 0222     		movs	r2, #2
 747 00ec 6946     		mov	r1, sp
 748 00ee 3048     		ldr	r0, .L21+56
 749 00f0 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 750              	.LVL30:
 751              	.LBB736:
 752              	.LBI736:
 753              		.loc 5 23 5 is_stmt 1 view .LVU164
 754              		.loc 5 23 5 is_stmt 0 view .LVU165
 755              	.LBE736:
  92:src/main.cpp  ****     cutoffParam.Init(pod.knob1, 500, 20000, cutoffParam.LOGARITHMIC);
 756              		.loc 24 92 5 is_stmt 1 view .LVU166
 757              		.loc 24 92 26 is_stmt 0 view .LVU167
 758 00f4 A4F1100E 		sub	lr, r4, #16
 759 00f8 EC46     		mov	ip, sp
 760              		.loc 24 92 21 view .LVU168
 761 00fa DFED2E0A 		vldr.32	s1, .L21+60
 762 00fe 9FED2E0A 		vldr.32	s0, .L21+64
 763              		.loc 24 92 26 view .LVU169
 764 0102 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 765 0106 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 766 010a 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 767 010e 85E80F00 		stm	r5, {r0, r1, r2, r3}
 768              		.loc 24 92 21 view .LVU170
 769 0112 6946     		mov	r1, sp
 770 0114 0222     		movs	r2, #2
 771 0116 2948     		ldr	r0, .L21+68
 772 0118 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 773              	.LVL31:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 81


 774              	.LBB737:
 775              	.LBI737:
 776              		.loc 5 23 5 is_stmt 1 view .LVU171
 777              		.loc 5 23 5 is_stmt 0 view .LVU172
 778              	.LBE737:
  93:src/main.cpp  **** 
  94:src/main.cpp  ****     //reverb parameters
  95:src/main.cpp  ****     rev.SetLpFreq(18000.0f);
 779              		.loc 24 95 5 is_stmt 1 view .LVU173
 780              	.LBB738:
 781              	.LBI738:
  42:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     /** Initializes the reverb module, and sets the sample_rate at which the Process function will 
  43:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****         Returns 0 if all good, or 1 if it runs out of delay times exceed maximum allowed.
  44:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     */
  45:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     int Init(float sample_rate);
  46:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** 
  47:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     /** Process the input through the reverb, and updates values of out1, and out2 with the new pro
  48:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     */
  49:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     int Process(const float &in1, const float &in2, float *out1, float *out2);
  50:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h **** 
  51:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     /** controls the reverb time. reverb tail becomes infinite when set to 1.0
  52:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****         \param fb - sets reverb time. range: 0.0 to 1.0
  53:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     */
  54:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     inline void SetFeedback(const float &fb) { feedback_ = fb; }
  55:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
  56:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****         \param freq - low pass frequency. range: 0.0 to sample_rate / 2
  57:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     */
  58:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     inline void SetLpFreq(const float &freq) { lpfreq_ = freq; }
 782              		.loc 2 58 17 view .LVU174
 783              	.LBB739:
 784              		.loc 2 58 48 view .LVU175
 785              	.LBE739:
 786              	.LBE738:
  96:src/main.cpp  ****     rev.SetFeedback(0.85f);
  97:src/main.cpp  **** 
  98:src/main.cpp  ****     //delay parameters
  99:src/main.cpp  ****     currentDelay = delayTarget = sample_rate * 0.75f;
 787              		.loc 24 99 46 is_stmt 0 view .LVU176
 788 011c F6EE087A 		vmov.f32	s15, #7.5e-1
 789              	.LBB742:
 790              	.LBB743:
  38:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     }
  39:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** 
  40:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     /** sets the delay time in samples
  41:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  42:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     */
  43:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     inline void SetDelay(size_t delay)
  44:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     {
  45:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         frac_  = 0.0f;
  46:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         delay_ = delay < max_size ? delay : max_size - 1;
  47:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     }
  48:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** 
  49:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     /** sets the delay time in samples
  50:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  51:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     */
  52:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     inline void SetDelay(float delay)
  53:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 82


  54:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  55:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         frac_             = delay - static_cast<float>(int_delay);
  56:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 791              		.loc 17 56 60 view .LVU177
 792 0120 274B     		ldr	r3, .L21+72
 793              	.LBE743:
 794              	.LBE742:
 100:src/main.cpp  ****     dell.SetDelay(currentDelay);
 101:src/main.cpp  ****     delr.SetDelay(currentDelay);
 102:src/main.cpp  **** 
 103:src/main.cpp  ****     // start callback
 104:src/main.cpp  ****     pod.StartAdc();
 795              		.loc 24 104 17 view .LVU178
 796 0122 A4F17400 		sub	r0, r4, #116
  99:src/main.cpp  ****     dell.SetDelay(currentDelay);
 797              		.loc 24 99 46 view .LVU179
 798 0126 28EE278A 		vmul.f32	s16, s16, s15
 799              	.LVL32:
 800              	.LBB747:
 801              	.LBB744:
  54:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         frac_             = delay - static_cast<float>(int_delay);
 802              		.loc 17 54 17 view .LVU180
 803 012a FDEEC87A 		vcvt.s32.f32	s15, s16
 804              		.loc 17 56 60 view .LVU181
 805 012e 17EE902A 		vmov	r2, s15	@ int
  55:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 806              		.loc 17 55 37 view .LVU182
 807 0132 B8EEE77A 		vcvt.f32.s32	s14, s15
 808              		.loc 17 56 60 view .LVU183
 809 0136 9A42     		cmp	r2, r3
  55:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 810              		.loc 17 55 35 view .LVU184
 811 0138 38EE477A 		vsub.f32	s14, s16, s14
 812              		.loc 17 56 60 view .LVU185
 813 013c 28BF     		it	cs
 814 013e 1A46     		movcs	r2, r3
 815              	.LBE744:
 816              	.LBE747:
 817              	.LBB748:
 818              	.LBB749:
  54:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 819              		.loc 2 54 58 view .LVU186
 820 0140 204B     		ldr	r3, .L21+76
 821              	.LBE749:
 822              	.LBE748:
 823              	.LBB752:
 824              	.LBB745:
 825              		.loc 17 56 16 view .LVU187
 826 0142 4AF8042C 		str	r2, [r10, #-4]
 827              	.LBE745:
 828              	.LBE752:
 829              	.LBB753:
 830              	.LBB754:
 831 0146 49F8042C 		str	r2, [r9, #-4]
 832              	.LBE754:
 833              	.LBE753:
 834              	.LBB756:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 83


 835              	.LBB740:
 836              		.loc 2 58 56 view .LVU188
 837 014a 1F4A     		ldr	r2, .L21+80
 838              	.LBE740:
 839              	.LBE756:
 840              	.LBB757:
 841              	.LBB750:
  54:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 842              		.loc 2 54 58 view .LVU189
 843 014c 3360     		str	r3, [r6]	@ float
 844              	.LBE750:
 845              	.LBE757:
 846              	.LBB758:
 847              	.LBB741:
 848              		.loc 2 58 56 view .LVU190
 849 014e 7260     		str	r2, [r6, #4]	@ float
 850              	.LVL33:
 851              		.loc 2 58 56 view .LVU191
 852              	.LBE741:
 853              	.LBE758:
  96:src/main.cpp  **** 
 854              		.loc 24 96 5 is_stmt 1 view .LVU192
 855              	.LBB759:
 856              	.LBI748:
  54:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 857              		.loc 2 54 17 view .LVU193
 858              	.LBB751:
  54:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 859              		.loc 2 54 48 view .LVU194
  54:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 860              		.loc 2 54 48 is_stmt 0 view .LVU195
 861              	.LBE751:
 862              	.LBE759:
  99:src/main.cpp  ****     dell.SetDelay(currentDelay);
 863              		.loc 24 99 5 is_stmt 1 view .LVU196
  99:src/main.cpp  ****     dell.SetDelay(currentDelay);
 864              		.loc 24 99 18 is_stmt 0 view .LVU197
 865 0150 1E4B     		ldr	r3, .L21+84
  99:src/main.cpp  ****     dell.SetDelay(currentDelay);
 866              		.loc 24 99 32 view .LVU198
 867 0152 1F4A     		ldr	r2, .L21+88
 868              	.LBB760:
 869              	.LBB746:
  55:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 870              		.loc 17 55 27 view .LVU199
 871 0154 0AED037A 		vstr.32	s14, [r10, #-12]
 872              	.LBE746:
 873              	.LBE760:
 874              	.LBB761:
 875              	.LBB755:
 876 0158 09ED037A 		vstr.32	s14, [r9, #-12]
 877              	.LBE755:
 878              	.LBE761:
  99:src/main.cpp  ****     dell.SetDelay(currentDelay);
 879              		.loc 24 99 32 view .LVU200
 880 015c 82ED008A 		vstr.32	s16, [r2]
  99:src/main.cpp  ****     dell.SetDelay(currentDelay);
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 84


 881              		.loc 24 99 18 view .LVU201
 882 0160 83ED008A 		vstr.32	s16, [r3]
 100:src/main.cpp  ****     delr.SetDelay(currentDelay);
 883              		.loc 24 100 5 is_stmt 1 view .LVU202
 884              	.LVL34:
 885              	.LBB762:
 886              	.LBI742:
  52:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     {
 887              		.loc 17 52 17 view .LVU203
  52:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     {
 888              		.loc 17 52 17 is_stmt 0 view .LVU204
 889              	.LBE762:
 101:src/main.cpp  **** 
 890              		.loc 24 101 5 is_stmt 1 view .LVU205
 891              	.LBB763:
 892              	.LBI753:
  52:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     {
 893              		.loc 17 52 17 view .LVU206
  52:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     {
 894              		.loc 17 52 17 is_stmt 0 view .LVU207
 895              	.LBE763:
 896              		.loc 24 104 5 is_stmt 1 view .LVU208
 897              		.loc 24 104 17 is_stmt 0 view .LVU209
 898 0164 FFF7FEFF 		bl	_ZN5daisy8DaisyPod8StartAdcEv
 899              	.LVL35:
 105:src/main.cpp  ****     pod.StartAudio(AudioCallback);
 900              		.loc 24 105 5 is_stmt 1 view .LVU210
 901              		.loc 24 105 19 is_stmt 0 view .LVU211
 902 0168 1A49     		ldr	r1, .L21+92
 903 016a A4F17400 		sub	r0, r4, #116
 904 016e FFF7FEFF 		bl	_ZN5daisy8DaisyPod10StartAudioEPFvPKfPfjE
 905              	.LVL36:
 906              	.L19:
 106:src/main.cpp  **** 
 107:src/main.cpp  ****     while(1) {}
 907              		.loc 24 107 5 is_stmt 1 discriminator 1 view .LVU212
 908              		.loc 24 107 5 discriminator 1 view .LVU213
 909              		.loc 24 107 5 discriminator 1 view .LVU214
 910              		.loc 24 107 5 discriminator 1 view .LVU215
 911 0172 FEE7     		b	.L19
 912              	.L22:
 913 0174 AFF30080 		.align	3
 914              	.L21:
 915 0178 9A999999 		.word	-1717986918
 916 017c 9999A93F 		.word	1068079513
 917 0180 00000000 		.word	_ZL3pod
 918 0184 00000000 		.word	_ZL3rev
 919 0188 00000000 		.word	.LANCHOR0
 920 018c 00000000 		.word	.LANCHOR1
 921 0190 00530700 		.word	480000
 922 0194 00000000 		.word	.LANCHOR2
 923 0198 3333333F 		.word	1060320051
 924 019c 0000F042 		.word	1123024896
 925 01a0 64000000 		.word	_ZL3pod+100
 926 01a4 00000000 		.word	0
 927 01a8 00000000 		.word	.LANCHOR3
 928 01ac 0060EA47 		.word	1206542336
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 85


 929 01b0 00000000 		.word	.LANCHOR4
 930 01b4 00409C46 		.word	1184645120
 931 01b8 0000FA43 		.word	1140457472
 932 01bc 00000000 		.word	.LANCHOR5
 933 01c0 BFD40100 		.word	119999
 934 01c4 9A99593F 		.word	1062836634
 935 01c8 00A08C46 		.word	1183621120
 936 01cc 00000000 		.word	.LANCHOR7
 937 01d0 00000000 		.word	.LANCHOR6
 938 01d4 00000000 		.word	_Z13AudioCallbackPKfPfj
 939 01d8 18530700 		.word	_ZL4dell+12
 940 01dc 0C000000 		.word	_ZL4delr+12
 941              		.cfi_endproc
 942              	.LFE7180:
 944              		.section	.text._Z11UpdateKnobsRfS_,"ax",%progbits
 945              		.align	1
 946              		.p2align 2,,3
 947              		.global	_Z11UpdateKnobsRfS_
 948              		.syntax unified
 949              		.thumb
 950              		.thumb_func
 951              		.fpu fpv5-d16
 953              	_Z11UpdateKnobsRfS_:
 954              	.LVL37:
 955              	.LFB7181:
 108:src/main.cpp  **** }
 109:src/main.cpp  **** 
 110:src/main.cpp  **** void UpdateKnobs(float &k1, float &k2)
 111:src/main.cpp  **** {
 956              		.loc 24 111 1 view -0
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 0
 959              		@ frame_needed = 0, uses_anonymous_args = 0
 112:src/main.cpp  ****     k1 = pod.knob1.Process();
 960              		.loc 24 112 5 view .LVU217
 111:src/main.cpp  ****     k1 = pod.knob1.Process();
 961              		.loc 24 111 1 is_stmt 0 view .LVU218
 962 0000 38B5     		push	{r3, r4, r5, lr}
 963              		.cfi_def_cfa_offset 16
 964              		.cfi_offset 3, -16
 965              		.cfi_offset 4, -12
 966              		.cfi_offset 5, -8
 967              		.cfi_offset 14, -4
 111:src/main.cpp  ****     k1 = pod.knob1.Process();
 968              		.loc 24 111 1 view .LVU219
 969 0002 0546     		mov	r5, r0
 970              		.loc 24 112 27 view .LVU220
 971 0004 2F48     		ldr	r0, .L46
 972              	.LVL38:
 111:src/main.cpp  ****     k1 = pod.knob1.Process();
 973              		.loc 24 111 1 view .LVU221
 974 0006 0C46     		mov	r4, r1
 975              		.loc 24 112 27 view .LVU222
 976 0008 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 977              	.LVL39:
 113:src/main.cpp  ****     k2 = pod.knob2.Process();
 978              		.loc 24 113 27 view .LVU223
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 86


 979 000c 2E48     		ldr	r0, .L46+4
 112:src/main.cpp  ****     k1 = pod.knob1.Process();
 980              		.loc 24 112 8 view .LVU224
 981 000e 85ED000A 		vstr.32	s0, [r5]
 982              		.loc 24 113 5 is_stmt 1 view .LVU225
 983              		.loc 24 113 27 is_stmt 0 view .LVU226
 984 0012 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 985              	.LVL40:
 986              	.LBB764:
 114:src/main.cpp  **** 
 115:src/main.cpp  ****     switch(mode)
 987              		.loc 24 115 5 view .LVU227
 988 0016 2D4B     		ldr	r3, .L46+8
 989              	.LBE764:
 113:src/main.cpp  ****     k2 = pod.knob2.Process();
 990              		.loc 24 113 8 view .LVU228
 991 0018 84ED000A 		vstr.32	s0, [r4]
 992              		.loc 24 115 5 is_stmt 1 view .LVU229
 993              	.LBB773:
 994 001c 1B68     		ldr	r3, [r3]
 995 001e 012B     		cmp	r3, #1
 996 0020 22D0     		beq	.L24
 997 0022 022B     		cmp	r3, #2
 998 0024 08D0     		beq	.L25
 999 0026 03B1     		cbz	r3, .L44
 1000              	.LBE773:
 116:src/main.cpp  ****     {
 117:src/main.cpp  ****         case REV:
 118:src/main.cpp  ****             drywet = k1;
 119:src/main.cpp  ****             rev.SetFeedback(k2);
 120:src/main.cpp  ****             break;
 121:src/main.cpp  ****         case DEL1:
 122:src/main.cpp  ****             delayTarget = deltime.Process();
 123:src/main.cpp  ****             feedback    = k2;
 124:src/main.cpp  ****             break;
 125:src/main.cpp  ****         case DEL2:
 126:src/main.cpp  ****             float value = deltime.Process();
 127:src/main.cpp  ****                 if (value < 0.2f)
 128:src/main.cpp  ****                 {
 129:src/main.cpp  ****                     delayTarget = 1/4 * currentTempo;
 130:src/main.cpp  ****                 }
 131:src/main.cpp  ****                 else if (value < 0.4f)
 132:src/main.cpp  ****                 {
 133:src/main.cpp  ****                     delayTarget = 1/2 * currentTempo;
 134:src/main.cpp  ****                 }
 135:src/main.cpp  ****                 else if (value < 0.6f)
 136:src/main.cpp  ****                 {
 137:src/main.cpp  ****                     delayTarget = 1 * currentTempo;
 138:src/main.cpp  ****                 }
 139:src/main.cpp  ****                 else if (value < 0.8f)
 140:src/main.cpp  ****                 {
 141:src/main.cpp  ****                     delayTarget = 2 * currentTempo;
 142:src/main.cpp  ****                 }
 143:src/main.cpp  ****              
 144:src/main.cpp  ****             feedback = k2;
 145:src/main.cpp  ****             break;
 146:src/main.cpp  ****     }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 87


 147:src/main.cpp  **** }
 1001              		.loc 24 147 1 is_stmt 0 view .LVU230
 1002 0028 38BD     		pop	{r3, r4, r5, pc}
 1003              	.LVL41:
 1004              	.L44:
 1005              	.LBB774:
 1006              	.LBB765:
 117:src/main.cpp  ****             drywet = k1;
 1007              		.loc 24 117 9 is_stmt 1 view .LVU231
 118:src/main.cpp  ****             rev.SetFeedback(k2);
 1008              		.loc 24 118 13 view .LVU232
 118:src/main.cpp  ****             rev.SetFeedback(k2);
 1009              		.loc 24 118 22 is_stmt 0 view .LVU233
 1010 002a 2968     		ldr	r1, [r5]	@ float
 118:src/main.cpp  ****             rev.SetFeedback(k2);
 1011              		.loc 24 118 20 view .LVU234
 1012 002c 284A     		ldr	r2, .L46+12
 1013              	.LBB766:
 1014              	.LBB767:
  54:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 1015              		.loc 2 54 58 view .LVU235
 1016 002e 294B     		ldr	r3, .L46+16
 1017              	.LBE767:
 1018              	.LBE766:
 118:src/main.cpp  ****             rev.SetFeedback(k2);
 1019              		.loc 24 118 20 view .LVU236
 1020 0030 1160     		str	r1, [r2]	@ float
 119:src/main.cpp  ****             break;
 1021              		.loc 24 119 13 is_stmt 1 view .LVU237
 1022              	.LVL42:
 1023              	.LBB769:
 1024              	.LBI766:
  54:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 1025              		.loc 2 54 17 view .LVU238
 1026              	.LBB768:
  54:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 1027              		.loc 2 54 48 view .LVU239
  54:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 1028              		.loc 2 54 60 is_stmt 0 view .LVU240
 1029 0032 2268     		ldr	r2, [r4]	@ float
  54:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 1030              		.loc 2 54 58 view .LVU241
 1031 0034 1A60     		str	r2, [r3]	@ float
 1032              	.LBE768:
 1033              	.LBE769:
 1034              	.LBE765:
 1035              	.LBE774:
 1036              		.loc 24 147 1 view .LVU242
 1037 0036 38BD     		pop	{r3, r4, r5, pc}
 1038              	.LVL43:
 1039              	.L25:
 1040              	.LBB775:
 1041              	.LBB770:
 125:src/main.cpp  ****             float value = deltime.Process();
 1042              		.loc 24 125 9 is_stmt 1 view .LVU243
 126:src/main.cpp  ****                 if (value < 0.2f)
 1043              		.loc 24 126 13 view .LVU244
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 88


 126:src/main.cpp  ****                 if (value < 0.2f)
 1044              		.loc 24 126 42 is_stmt 0 view .LVU245
 1045 0038 2748     		ldr	r0, .L46+20
 1046 003a FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 1047              	.LVL44:
 127:src/main.cpp  ****                 {
 1048              		.loc 24 127 17 view .LVU246
 1049 003e DFED277A 		vldr.32	s15, .L46+24
 1050              	.LVL45:
 127:src/main.cpp  ****                 {
 1051              		.loc 24 127 17 is_stmt 1 view .LVU247
 1052 0042 B4EEE70A 		vcmpe.f32	s0, s15
 1053 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1054 004a 17D5     		bpl	.L39
 1055              	.L43:
 133:src/main.cpp  ****                 }
 1056              		.loc 24 133 21 view .LVU248
 133:src/main.cpp  ****                 }
 1057              		.loc 24 133 39 is_stmt 0 view .LVU249
 1058 004c 244A     		ldr	r2, .L46+28
 1059 004e 9FED257A 		vldr.32	s14, .L46+32
 1060 0052 D2ED007A 		vldr.32	s15, [r2]
 133:src/main.cpp  ****                 }
 1061              		.loc 24 133 33 view .LVU250
 1062 0056 244B     		ldr	r3, .L46+36
 133:src/main.cpp  ****                 }
 1063              		.loc 24 133 39 view .LVU251
 1064 0058 67EE877A 		vmul.f32	s15, s15, s14
 133:src/main.cpp  ****                 }
 1065              		.loc 24 133 33 view .LVU252
 1066 005c C3ED007A 		vstr.32	s15, [r3]
 1067              	.L29:
 144:src/main.cpp  ****             break;
 1068              		.loc 24 144 13 is_stmt 1 view .LVU253
 144:src/main.cpp  ****             break;
 1069              		.loc 24 144 24 is_stmt 0 view .LVU254
 1070 0060 2268     		ldr	r2, [r4]	@ float
 144:src/main.cpp  ****             break;
 1071              		.loc 24 144 22 view .LVU255
 1072 0062 224B     		ldr	r3, .L46+40
 1073 0064 1A60     		str	r2, [r3]	@ float
 145:src/main.cpp  ****     }
 1074              		.loc 24 145 13 is_stmt 1 view .LVU256
 1075              	.LBE770:
 1076              	.LBE775:
 1077              		.loc 24 147 1 is_stmt 0 view .LVU257
 1078 0066 38BD     		pop	{r3, r4, r5, pc}
 1079              	.LVL46:
 1080              	.L24:
 1081              	.LBB776:
 1082              	.LBB771:
 121:src/main.cpp  ****             delayTarget = deltime.Process();
 1083              		.loc 24 121 9 is_stmt 1 view .LVU258
 122:src/main.cpp  ****             feedback    = k2;
 1084              		.loc 24 122 13 view .LVU259
 122:src/main.cpp  ****             feedback    = k2;
 1085              		.loc 24 122 42 is_stmt 0 view .LVU260
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 89


 1086 0068 1B48     		ldr	r0, .L46+20
 1087 006a FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 1088              	.LVL47:
 122:src/main.cpp  ****             feedback    = k2;
 1089              		.loc 24 122 25 view .LVU261
 1090 006e 1E4A     		ldr	r2, .L46+36
 123:src/main.cpp  ****             break;
 1091              		.loc 24 123 25 view .LVU262
 1092 0070 1E4B     		ldr	r3, .L46+40
 122:src/main.cpp  ****             feedback    = k2;
 1093              		.loc 24 122 25 view .LVU263
 1094 0072 82ED000A 		vstr.32	s0, [r2]
 123:src/main.cpp  ****             break;
 1095              		.loc 24 123 13 is_stmt 1 view .LVU264
 123:src/main.cpp  ****             break;
 1096              		.loc 24 123 27 is_stmt 0 view .LVU265
 1097 0076 2268     		ldr	r2, [r4]	@ float
 123:src/main.cpp  ****             break;
 1098              		.loc 24 123 25 view .LVU266
 1099 0078 1A60     		str	r2, [r3]	@ float
 124:src/main.cpp  ****         case DEL2:
 1100              		.loc 24 124 13 is_stmt 1 view .LVU267
 1101              	.LBE771:
 1102              	.LBE776:
 1103              		.loc 24 147 1 is_stmt 0 view .LVU268
 1104 007a 38BD     		pop	{r3, r4, r5, pc}
 1105              	.LVL48:
 1106              	.L39:
 1107              	.LBB777:
 1108              	.LBB772:
 131:src/main.cpp  ****                 {
 1109              		.loc 24 131 22 is_stmt 1 view .LVU269
 1110 007c DFED1C7A 		vldr.32	s15, .L46+44
 1111 0080 B4EEE70A 		vcmpe.f32	s0, s15
 1112 0084 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1113 0088 E0D4     		bmi	.L43
 135:src/main.cpp  ****                 {
 1114              		.loc 24 135 22 view .LVU270
 1115 008a DFED1A7A 		vldr.32	s15, .L46+48
 1116 008e B4EEE70A 		vcmpe.f32	s0, s15
 1117 0092 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1118 0096 0FD4     		bmi	.L45
 139:src/main.cpp  ****                 {
 1119              		.loc 24 139 22 view .LVU271
 1120 0098 DFED177A 		vldr.32	s15, .L46+52
 1121 009c B4EEE70A 		vcmpe.f32	s0, s15
 1122 00a0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1123 00a4 DCD5     		bpl	.L29
 141:src/main.cpp  ****                 }
 1124              		.loc 24 141 21 view .LVU272
 141:src/main.cpp  ****                 }
 1125              		.loc 24 141 37 is_stmt 0 view .LVU273
 1126 00a6 0E4A     		ldr	r2, .L46+28
 141:src/main.cpp  ****                 }
 1127              		.loc 24 141 33 view .LVU274
 1128 00a8 0F4B     		ldr	r3, .L46+36
 141:src/main.cpp  ****                 }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 90


 1129              		.loc 24 141 37 view .LVU275
 1130 00aa D2ED007A 		vldr.32	s15, [r2]
 1131 00ae 77EEA77A 		vadd.f32	s15, s15, s15
 141:src/main.cpp  ****                 }
 1132              		.loc 24 141 33 view .LVU276
 1133 00b2 C3ED007A 		vstr.32	s15, [r3]
 1134 00b6 D3E7     		b	.L29
 1135              	.L45:
 137:src/main.cpp  ****                 }
 1136              		.loc 24 137 21 is_stmt 1 view .LVU277
 137:src/main.cpp  ****                 }
 1137              		.loc 24 137 33 is_stmt 0 view .LVU278
 1138 00b8 094A     		ldr	r2, .L46+28
 1139 00ba 0B4B     		ldr	r3, .L46+36
 1140 00bc 1268     		ldr	r2, [r2]	@ float
 1141 00be 1A60     		str	r2, [r3]	@ float
 1142 00c0 CEE7     		b	.L29
 1143              	.L47:
 1144 00c2 00BF     		.align	2
 1145              	.L46:
 1146 00c4 64000000 		.word	_ZL3pod+100
 1147 00c8 84000000 		.word	_ZL3pod+132
 1148 00cc 00000000 		.word	.LANCHOR8
 1149 00d0 00000000 		.word	.LANCHOR9
 1150 00d4 00000000 		.word	_ZL3rev
 1151 00d8 00000000 		.word	.LANCHOR4
 1152 00dc CDCC4C3E 		.word	1045220557
 1153 00e0 00000000 		.word	.LANCHOR11
 1154 00e4 00000000 		.word	0
 1155 00e8 00000000 		.word	.LANCHOR6
 1156 00ec 00000000 		.word	.LANCHOR10
 1157 00f0 CDCCCC3E 		.word	1053609165
 1158 00f4 9A99193F 		.word	1058642330
 1159 00f8 CDCC4C3F 		.word	1061997773
 1160              	.LBE772:
 1161              	.LBE777:
 1162              		.cfi_endproc
 1163              	.LFE7181:
 1165              		.section	.text._Z13UpdateEncoderv,"ax",%progbits
 1166              		.align	1
 1167              		.p2align 2,,3
 1168              		.global	_Z13UpdateEncoderv
 1169              		.syntax unified
 1170              		.thumb
 1171              		.thumb_func
 1172              		.fpu fpv5-d16
 1174              	_Z13UpdateEncoderv:
 1175              	.LFB7182:
 148:src/main.cpp  **** 
 149:src/main.cpp  **** void UpdateEncoder()
 150:src/main.cpp  **** {
 1176              		.loc 24 150 1 is_stmt 1 view -0
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 0
 1179              		@ frame_needed = 0, uses_anonymous_args = 0
 1180              		@ link register save eliminated.
 151:src/main.cpp  ****     mode = mode + pod.encoder.Increment();
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 91


 1181              		.loc 24 151 5 view .LVU280
 1182              	.LVL49:
 1183              	.LBB780:
 1184              	.LBI780:
  22:../DaisyExamples/libDaisy//src/hid/encoder.h **** 
  23:../DaisyExamples/libDaisy//src/hid/encoder.h ****     /** Initializes the encoder with the specified hardware pins.
  24:../DaisyExamples/libDaisy//src/hid/encoder.h ****      * Update rate is to be deprecated in a future release
  25:../DaisyExamples/libDaisy//src/hid/encoder.h ****      */
  26:../DaisyExamples/libDaisy//src/hid/encoder.h ****     void Init(dsy_gpio_pin a,
  27:../DaisyExamples/libDaisy//src/hid/encoder.h ****               dsy_gpio_pin b,
  28:../DaisyExamples/libDaisy//src/hid/encoder.h ****               dsy_gpio_pin click,
  29:../DaisyExamples/libDaisy//src/hid/encoder.h ****               float        update_rate = 0.f);
  30:../DaisyExamples/libDaisy//src/hid/encoder.h ****     /** Called at update_rate to debounce and handle timing for the switch.
  31:../DaisyExamples/libDaisy//src/hid/encoder.h ****      * In order for events not to be missed, its important that the Edge/Pressed checks be made at 
  32:../DaisyExamples/libDaisy//src/hid/encoder.h ****      */
  33:../DaisyExamples/libDaisy//src/hid/encoder.h ****     void Debounce();
  34:../DaisyExamples/libDaisy//src/hid/encoder.h **** 
  35:../DaisyExamples/libDaisy//src/hid/encoder.h ****     /** Returns +1 if the encoder was turned clockwise, -1 if it was turned counter-clockwise, or 0
  36:../DaisyExamples/libDaisy//src/hid/encoder.h ****     inline int32_t Increment() const { return updated_ ? inc_ : 0; }
 1185              		.loc 11 36 20 view .LVU281
 1186              	.LBB781:
 1187              		.loc 11 36 40 view .LVU282
 1188              		.loc 11 36 47 is_stmt 0 view .LVU283
 1189 0000 0E4A     		ldr	r2, .L52
 1190              		.loc 11 36 56 view .LVU284
 1191 0002 92F84030 		ldrb	r3, [r2, #64]	@ zero_extendqisi2
 1192              	.LBE781:
 1193              	.LBE780:
 150:src/main.cpp  ****     mode = mode + pod.encoder.Increment();
 1194              		.loc 24 150 1 view .LVU285
 1195 0006 10B4     		push	{r4}
 1196              		.cfi_def_cfa_offset 4
 1197              		.cfi_offset 4, -4
 1198              	.LBB783:
 1199              	.LBB782:
 1200              		.loc 11 36 56 view .LVU286
 1201 0008 03B1     		cbz	r3, .L49
 1202 000a 136E     		ldr	r3, [r2, #96]
 1203              	.L49:
 1204              	.LVL50:
 1205              		.loc 11 36 56 view .LVU287
 1206              	.LBE782:
 1207              	.LBE783:
 152:src/main.cpp  ****     mode = (mode % 3 + 3) % 3;
 1208              		.loc 24 152 5 is_stmt 1 view .LVU288
 1209              		.loc 24 152 10 is_stmt 0 view .LVU289
 1210 000c 0C48     		ldr	r0, .L52+4
 1211              		.loc 24 152 18 view .LVU290
 1212 000e 0D4A     		ldr	r2, .L52+8
 151:src/main.cpp  ****     mode = (mode % 3 + 3) % 3;
 1213              		.loc 24 151 17 view .LVU291
 1214 0010 0468     		ldr	r4, [r0]
 1215              		.loc 24 152 27 view .LVU292
 1216 0012 0D49     		ldr	r1, .L52+12
 151:src/main.cpp  ****     mode = (mode % 3 + 3) % 3;
 1217              		.loc 24 151 17 view .LVU293
 1218 0014 2344     		add	r3, r3, r4
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 92


 1219              		.loc 24 152 18 view .LVU294
 1220 0016 82FB0342 		smull	r4, r2, r2, r3
 153:src/main.cpp  **** }
 1221              		.loc 24 153 1 view .LVU295
 1222 001a 5DF8044B 		ldr	r4, [sp], #4
 1223              		.cfi_restore 4
 1224              		.cfi_def_cfa_offset 0
 152:src/main.cpp  ****     mode = (mode % 3 + 3) % 3;
 1225              		.loc 24 152 18 view .LVU296
 1226 001e A2EBE372 		sub	r2, r2, r3, asr #31
 1227 0022 02EB4202 		add	r2, r2, r2, lsl #1
 1228 0026 9B1A     		subs	r3, r3, r2
 152:src/main.cpp  ****     mode = (mode % 3 + 3) % 3;
 1229              		.loc 24 152 22 view .LVU297
 1230 0028 0333     		adds	r3, r3, #3
 152:src/main.cpp  ****     mode = (mode % 3 + 3) % 3;
 1231              		.loc 24 152 27 view .LVU298
 1232 002a A1FB0312 		umull	r1, r2, r1, r3
 1233 002e 22F00101 		bic	r1, r2, #1
 1234 0032 01EB5202 		add	r2, r1, r2, lsr #1
 1235 0036 9B1A     		subs	r3, r3, r2
 152:src/main.cpp  ****     mode = (mode % 3 + 3) % 3;
 1236              		.loc 24 152 10 view .LVU299
 1237 0038 0360     		str	r3, [r0]
 1238              		.loc 24 153 1 view .LVU300
 1239 003a 7047     		bx	lr
 1240              	.L53:
 1241              		.align	2
 1242              	.L52:
 1243 003c 00000000 		.word	_ZL3pod
 1244 0040 00000000 		.word	.LANCHOR8
 1245 0044 56555555 		.word	1431655766
 1246 0048 ABAAAAAA 		.word	-1431655765
 1247              		.cfi_endproc
 1248              	.LFE7182:
 1250              		.section	.text._Z10UpdateLedsff,"ax",%progbits
 1251              		.align	1
 1252              		.p2align 2,,3
 1253              		.global	_Z10UpdateLedsff
 1254              		.syntax unified
 1255              		.thumb
 1256              		.thumb_func
 1257              		.fpu fpv5-d16
 1259              	_Z10UpdateLedsff:
 1260              	.LVL51:
 1261              	.LFB7183:
 154:src/main.cpp  **** 
 155:src/main.cpp  **** void UpdateLeds(float k1, float k2)
 156:src/main.cpp  **** {
 1262              		.loc 24 156 1 is_stmt 1 view -0
 1263              		.cfi_startproc
 1264              		@ args = 0, pretend = 0, frame = 0
 1265              		@ frame_needed = 0, uses_anonymous_args = 0
 157:src/main.cpp  ****     pod.led1.Set(
 1266              		.loc 24 157 5 view .LVU302
 156:src/main.cpp  ****     pod.led1.Set(
 1267              		.loc 24 156 1 is_stmt 0 view .LVU303
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 93


 1268 0000 10B5     		push	{r4, lr}
 1269              		.cfi_def_cfa_offset 8
 1270              		.cfi_offset 4, -8
 1271              		.cfi_offset 14, -4
 158:src/main.cpp  ****         k1 * (mode == 2), k1 * (mode == 1), k1 * (mode == 0 || mode == 2));
 1272              		.loc 24 158 20 view .LVU304
 1273 0002 254C     		ldr	r4, .L64
 156:src/main.cpp  ****     pod.led1.Set(
 1274              		.loc 24 156 1 view .LVU305
 1275 0004 F0EE407A 		vmov.f32	s15, s0
 1276              		.loc 24 158 20 view .LVU306
 1277 0008 2368     		ldr	r3, [r4]
 157:src/main.cpp  ****     pod.led1.Set(
 1278              		.loc 24 157 17 view .LVU307
 1279 000a 022B     		cmp	r3, #2
 156:src/main.cpp  ****     pod.led1.Set(
 1280              		.loc 24 156 1 view .LVU308
 1281 000c 2DED028B 		vpush.64	{d8}
 1282              		.cfi_def_cfa_offset 16
 1283              		.cfi_offset 80, -16
 1284              		.cfi_offset 81, -12
 156:src/main.cpp  ****     pod.led1.Set(
 1285              		.loc 24 156 1 view .LVU309
 1286 0010 B0EE608A 		vmov.f32	s16, s1
 157:src/main.cpp  ****     pod.led1.Set(
 1287              		.loc 24 157 17 view .LVU310
 1288 0014 33D0     		beq	.L62
 157:src/main.cpp  ****     pod.led1.Set(
 1289              		.loc 24 157 17 discriminator 4 view .LVU311
 1290 0016 9FED210A 		vldr.32	s0, .L64+4
 1291              	.LVL52:
 157:src/main.cpp  ****     pod.led1.Set(
 1292              		.loc 24 157 17 discriminator 4 view .LVU312
 1293 001a 012B     		cmp	r3, #1
 1294 001c 27EE800A 		vmul.f32	s0, s15, s0
 1295 0020 47FE800A 		vseleq.f32	s1, s15, s0
 1296              	.LVL53:
 1297              	.L56:
 1298              		.loc 24 158 61 discriminator 8 view .LVU313
 1299 0024 33F00203 		bics	r3, r3, #2
 157:src/main.cpp  ****     pod.led1.Set(
 1300              		.loc 24 157 17 discriminator 8 view .LVU314
 1301 0028 1D48     		ldr	r0, .L64+8
 1302              		.loc 24 158 61 discriminator 8 view .LVU315
 1303 002a 0CBF     		ite	eq
 1304 002c 0123     		moveq	r3, #1
 1305 002e 0023     		movne	r3, #0
 1306 0030 01EE103A 		vmov	s2, r3	@ int
 157:src/main.cpp  ****     pod.led1.Set(
 1307              		.loc 24 157 17 discriminator 8 view .LVU316
 1308 0034 B8EEC11A 		vcvt.f32.s32	s2, s2
 1309 0038 21EE271A 		vmul.f32	s2, s2, s15
 1310 003c FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 1311              	.LVL54:
 159:src/main.cpp  ****     pod.led2.Set(
 1312              		.loc 24 159 5 is_stmt 1 discriminator 8 view .LVU317
 160:src/main.cpp  ****         k2 * (mode == 2), k2 * (mode == 1), k2 * (mode == 0 || mode == 2));
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 94


 1313              		.loc 24 160 20 is_stmt 0 discriminator 8 view .LVU318
 1314 0040 2368     		ldr	r3, [r4]
 159:src/main.cpp  ****     pod.led2.Set(
 1315              		.loc 24 159 17 discriminator 8 view .LVU319
 1316 0042 022B     		cmp	r3, #2
 1317 0044 20D0     		beq	.L63
 159:src/main.cpp  ****     pod.led2.Set(
 1318              		.loc 24 159 17 discriminator 4 view .LVU320
 1319 0046 9FED150A 		vldr.32	s0, .L64+4
 1320 004a 012B     		cmp	r3, #1
 1321 004c 28EE000A 		vmul.f32	s0, s16, s0
 1322 0050 48FE000A 		vseleq.f32	s1, s16, s0
 1323              	.L58:
 1324              		.loc 24 160 61 discriminator 8 view .LVU321
 1325 0054 33F00203 		bics	r3, r3, #2
 159:src/main.cpp  ****     pod.led2.Set(
 1326              		.loc 24 159 17 discriminator 8 view .LVU322
 1327 0058 1248     		ldr	r0, .L64+12
 1328              		.loc 24 160 61 discriminator 8 view .LVU323
 1329 005a 0CBF     		ite	eq
 1330 005c 0123     		moveq	r3, #1
 1331 005e 0023     		movne	r3, #0
 1332 0060 01EE103A 		vmov	s2, r3	@ int
 159:src/main.cpp  ****     pod.led2.Set(
 1333              		.loc 24 159 17 discriminator 8 view .LVU324
 1334 0064 B8EEC11A 		vcvt.f32.s32	s2, s2
 1335 0068 21EE081A 		vmul.f32	s2, s2, s16
 1336 006c FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 1337              	.LVL55:
 161:src/main.cpp  **** 
 162:src/main.cpp  ****     pod.UpdateLeds();
 1338              		.loc 24 162 5 is_stmt 1 discriminator 8 view .LVU325
 1339              		.loc 24 162 19 is_stmt 0 discriminator 8 view .LVU326
 1340 0070 0D48     		ldr	r0, .L64+16
 163:src/main.cpp  **** }
 1341              		.loc 24 163 1 discriminator 8 view .LVU327
 1342 0072 BDEC028B 		vldm	sp!, {d8}
 1343              		.cfi_remember_state
 1344              		.cfi_restore 80
 1345              		.cfi_restore 81
 1346              		.cfi_def_cfa_offset 8
 1347              	.LVL56:
 1348              		.loc 24 163 1 discriminator 8 view .LVU328
 1349 0076 BDE81040 		pop	{r4, lr}
 1350              		.cfi_restore 14
 1351              		.cfi_restore 4
 1352              		.cfi_def_cfa_offset 0
 162:src/main.cpp  **** }
 1353              		.loc 24 162 19 discriminator 8 view .LVU329
 1354 007a FFF7FEBF 		b	_ZN5daisy8DaisyPod10UpdateLedsEv
 1355              	.LVL57:
 1356              	.L62:
 1357              		.cfi_restore_state
 157:src/main.cpp  ****         k1 * (mode == 2), k1 * (mode == 1), k1 * (mode == 0 || mode == 2));
 1358              		.loc 24 157 17 view .LVU330
 1359 007e DFED070A 		vldr.32	s1, .L64+4
 1360              	.LVL58:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 95


 157:src/main.cpp  ****         k1 * (mode == 2), k1 * (mode == 1), k1 * (mode == 0 || mode == 2));
 1361              		.loc 24 157 17 view .LVU331
 1362 0082 60EE200A 		vmul.f32	s1, s0, s1
 1363 0086 CDE7     		b	.L56
 1364              	.LVL59:
 1365              	.L63:
 159:src/main.cpp  ****         k2 * (mode == 2), k2 * (mode == 1), k2 * (mode == 0 || mode == 2));
 1366              		.loc 24 159 17 view .LVU332
 1367 0088 DFED040A 		vldr.32	s1, .L64+4
 1368 008c B0EE480A 		vmov.f32	s0, s16
 1369 0090 68EE200A 		vmul.f32	s1, s16, s1
 1370 0094 DEE7     		b	.L58
 1371              	.L65:
 1372 0096 00BF     		.align	2
 1373              	.L64:
 1374 0098 00000000 		.word	.LANCHOR8
 1375 009c 00000000 		.word	0
 1376 00a0 D4000000 		.word	_ZL3pod+212
 1377 00a4 28010000 		.word	_ZL3pod+296
 1378 00a8 00000000 		.word	_ZL3pod
 1379              		.cfi_endproc
 1380              	.LFE7183:
 1382              		.section	.text._Z8Controlsv,"ax",%progbits
 1383              		.align	1
 1384              		.p2align 2,,3
 1385              		.global	_Z8Controlsv
 1386              		.syntax unified
 1387              		.thumb
 1388              		.thumb_func
 1389              		.fpu fpv5-d16
 1391              	_Z8Controlsv:
 1392              	.LFB7184:
 164:src/main.cpp  **** 
 165:src/main.cpp  **** void Controls()
 166:src/main.cpp  **** {
 1393              		.loc 24 166 1 is_stmt 1 view -0
 1394              		.cfi_startproc
 1395              		@ args = 0, pretend = 0, frame = 8
 1396              		@ frame_needed = 0, uses_anonymous_args = 0
 167:src/main.cpp  ****     float k1, k2;
 1397              		.loc 24 167 5 view .LVU334
 168:src/main.cpp  ****     delayTarget = feedback = drywet = 0;
 1398              		.loc 24 168 5 view .LVU335
 166:src/main.cpp  ****     float k1, k2;
 1399              		.loc 24 166 1 is_stmt 0 view .LVU336
 1400 0000 10B5     		push	{r4, lr}
 1401              		.cfi_def_cfa_offset 8
 1402              		.cfi_offset 4, -8
 1403              		.cfi_offset 14, -4
 1404              		.loc 24 168 37 view .LVU337
 1405 0002 0023     		movs	r3, #0
 169:src/main.cpp  **** 
 170:src/main.cpp  ****     pod.ProcessAnalogControls();
 1406              		.loc 24 170 30 view .LVU338
 1407 0004 194C     		ldr	r4, .L70
 168:src/main.cpp  **** 
 1408              		.loc 24 168 37 view .LVU339
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 96


 1409 0006 1A48     		ldr	r0, .L70+4
 166:src/main.cpp  ****     float k1, k2;
 1410              		.loc 24 166 1 view .LVU340
 1411 0008 82B0     		sub	sp, sp, #8
 1412              		.cfi_def_cfa_offset 16
 168:src/main.cpp  **** 
 1413              		.loc 24 168 28 view .LVU341
 1414 000a 1A49     		ldr	r1, .L70+8
 168:src/main.cpp  **** 
 1415              		.loc 24 168 17 view .LVU342
 1416 000c 1A4A     		ldr	r2, .L70+12
 168:src/main.cpp  **** 
 1417              		.loc 24 168 37 view .LVU343
 1418 000e 0360     		str	r3, [r0]	@ float
 1419              		.loc 24 170 30 view .LVU344
 1420 0010 2046     		mov	r0, r4
 168:src/main.cpp  **** 
 1421              		.loc 24 168 28 view .LVU345
 1422 0012 0B60     		str	r3, [r1]	@ float
 168:src/main.cpp  **** 
 1423              		.loc 24 168 17 view .LVU346
 1424 0014 1360     		str	r3, [r2]	@ float
 1425              		.loc 24 170 5 is_stmt 1 view .LVU347
 1426              		.loc 24 170 30 is_stmt 0 view .LVU348
 1427 0016 FFF7FEFF 		bl	_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
 1428              	.LVL60:
 171:src/main.cpp  ****     pod.ProcessDigitalControls();
 1429              		.loc 24 171 5 is_stmt 1 view .LVU349
 1430              		.loc 24 171 31 is_stmt 0 view .LVU350
 1431 001a 2046     		mov	r0, r4
 1432 001c FFF7FEFF 		bl	_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
 1433              	.LVL61:
 172:src/main.cpp  **** 
 173:src/main.cpp  ****     UpdateKnobs(k1, k2);
 1434              		.loc 24 173 5 is_stmt 1 view .LVU351
 1435              		.loc 24 173 16 is_stmt 0 view .LVU352
 1436 0020 01A9     		add	r1, sp, #4
 1437 0022 6846     		mov	r0, sp
 1438 0024 FFF7FEFF 		bl	_Z11UpdateKnobsRfS_
 1439              	.LVL62:
 174:src/main.cpp  **** 
 175:src/main.cpp  ****     UpdateEncoder();
 1440              		.loc 24 175 5 is_stmt 1 view .LVU353
 1441              	.LBB788:
 1442              	.LBI788:
 149:src/main.cpp  **** {
 1443              		.loc 24 149 6 view .LVU354
 1444              	.LBB789:
 151:src/main.cpp  ****     mode = (mode % 3 + 3) % 3;
 1445              		.loc 24 151 5 view .LVU355
 1446              	.LBB790:
 1447              	.LBI790:
 1448              		.loc 11 36 20 view .LVU356
 1449              	.LBB791:
 1450              		.loc 11 36 40 view .LVU357
 1451              		.loc 11 36 56 is_stmt 0 view .LVU358
 1452 0028 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 97


 1453 002c 03B1     		cbz	r3, .L67
 1454 002e 236E     		ldr	r3, [r4, #96]
 1455              	.L67:
 1456              	.LVL63:
 1457              		.loc 11 36 56 view .LVU359
 1458              	.LBE791:
 1459              	.LBE790:
 152:src/main.cpp  **** }
 1460              		.loc 24 152 5 is_stmt 1 view .LVU360
 152:src/main.cpp  **** }
 1461              		.loc 24 152 10 is_stmt 0 view .LVU361
 1462 0030 1248     		ldr	r0, .L70+16
 152:src/main.cpp  **** }
 1463              		.loc 24 152 18 view .LVU362
 1464 0032 134A     		ldr	r2, .L70+20
 151:src/main.cpp  ****     mode = (mode % 3 + 3) % 3;
 1465              		.loc 24 151 17 view .LVU363
 1466 0034 0468     		ldr	r4, [r0]
 152:src/main.cpp  **** }
 1467              		.loc 24 152 27 view .LVU364
 1468 0036 1349     		ldr	r1, .L70+24
 151:src/main.cpp  ****     mode = (mode % 3 + 3) % 3;
 1469              		.loc 24 151 17 view .LVU365
 1470 0038 2344     		add	r3, r3, r4
 1471              	.LBE789:
 1472              	.LBE788:
 176:src/main.cpp  **** 
 177:src/main.cpp  ****     UpdateLeds(k1, k2);
 1473              		.loc 24 177 15 view .LVU366
 1474 003a DDED010A 		vldr.32	s1, [sp, #4]
 1475 003e 9DED000A 		vldr.32	s0, [sp]
 1476              	.LBB793:
 1477              	.LBB792:
 152:src/main.cpp  **** }
 1478              		.loc 24 152 18 view .LVU367
 1479 0042 82FB0342 		smull	r4, r2, r2, r3
 1480 0046 A2EBE372 		sub	r2, r2, r3, asr #31
 1481 004a 02EB4202 		add	r2, r2, r2, lsl #1
 1482 004e 9B1A     		subs	r3, r3, r2
 152:src/main.cpp  **** }
 1483              		.loc 24 152 22 view .LVU368
 1484 0050 0333     		adds	r3, r3, #3
 152:src/main.cpp  **** }
 1485              		.loc 24 152 27 view .LVU369
 1486 0052 A1FB0312 		umull	r1, r2, r1, r3
 1487 0056 22F00101 		bic	r1, r2, #1
 1488 005a 01EB5202 		add	r2, r1, r2, lsr #1
 1489 005e 9B1A     		subs	r3, r3, r2
 152:src/main.cpp  **** }
 1490              		.loc 24 152 10 view .LVU370
 1491 0060 0360     		str	r3, [r0]
 1492              	.LBE792:
 1493              	.LBE793:
 1494              		.loc 24 177 5 is_stmt 1 view .LVU371
 1495              		.loc 24 177 15 is_stmt 0 view .LVU372
 1496 0062 FFF7FEFF 		bl	_Z10UpdateLedsff
 1497              	.LVL64:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 98


 178:src/main.cpp  **** }
 1498              		.loc 24 178 1 view .LVU373
 1499 0066 02B0     		add	sp, sp, #8
 1500              		.cfi_def_cfa_offset 8
 1501              		@ sp needed
 1502 0068 10BD     		pop	{r4, pc}
 1503              	.L71:
 1504 006a 00BF     		.align	2
 1505              	.L70:
 1506 006c 00000000 		.word	_ZL3pod
 1507 0070 00000000 		.word	.LANCHOR9
 1508 0074 00000000 		.word	.LANCHOR10
 1509 0078 00000000 		.word	.LANCHOR6
 1510 007c 00000000 		.word	.LANCHOR8
 1511 0080 56555555 		.word	1431655766
 1512 0084 ABAAAAAA 		.word	-1431655765
 1513              		.cfi_endproc
 1514              	.LFE7184:
 1516              		.section	.text._Z15GetReverbSampleRfS_ff,"ax",%progbits
 1517              		.align	1
 1518              		.p2align 2,,3
 1519              		.global	_Z15GetReverbSampleRfS_ff
 1520              		.syntax unified
 1521              		.thumb
 1522              		.thumb_func
 1523              		.fpu fpv5-d16
 1525              	_Z15GetReverbSampleRfS_ff:
 1526              	.LVL65:
 1527              	.LFB7185:
 179:src/main.cpp  **** 
 180:src/main.cpp  **** void GetReverbSample(float &outl, float &outr, float inl, float inr)
 181:src/main.cpp  **** {   
 1528              		.loc 24 181 1 is_stmt 1 view -0
 1529              		.cfi_startproc
 1530              		@ args = 0, pretend = 0, frame = 8
 1531              		@ frame_needed = 0, uses_anonymous_args = 0
 182:src/main.cpp  ****     //filter before the reverb
 183:src/main.cpp  ****     filtl.Process(inl);
 1532              		.loc 24 183 5 view .LVU375
 181:src/main.cpp  ****     //filter before the reverb
 1533              		.loc 24 181 1 is_stmt 0 view .LVU376
 1534 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1535              		.cfi_def_cfa_offset 20
 1536              		.cfi_offset 4, -20
 1537              		.cfi_offset 5, -16
 1538              		.cfi_offset 6, -12
 1539              		.cfi_offset 7, -8
 1540              		.cfi_offset 14, -4
 1541              		.loc 24 183 18 view .LVU377
 1542 0002 1E4F     		ldr	r7, .L74
 181:src/main.cpp  ****     //filter before the reverb
 1543              		.loc 24 181 1 view .LVU378
 1544 0004 0546     		mov	r5, r0
 184:src/main.cpp  ****     filtr.Process(inr);
 1545              		.loc 24 184 18 view .LVU379
 1546 0006 1E4E     		ldr	r6, .L74+4
 181:src/main.cpp  ****     //filter before the reverb
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 99


 1547              		.loc 24 181 1 view .LVU380
 1548 0008 0C46     		mov	r4, r1
 183:src/main.cpp  ****     filtr.Process(inr);
 1549              		.loc 24 183 18 view .LVU381
 1550 000a 3846     		mov	r0, r7
 1551              	.LVL66:
 181:src/main.cpp  ****     //filter before the reverb
 1552              		.loc 24 181 1 view .LVU382
 1553 000c 2DED028B 		vpush.64	{d8}
 1554              		.cfi_def_cfa_offset 28
 1555              		.cfi_offset 80, -28
 1556              		.cfi_offset 81, -24
 1557 0010 B0EE608A 		vmov.f32	s16, s1
 1558 0014 85B0     		sub	sp, sp, #20
 1559              		.cfi_def_cfa_offset 48
 181:src/main.cpp  ****     //filter before the reverb
 1560              		.loc 24 181 1 view .LVU383
 1561 0016 F0EE408A 		vmov.f32	s17, s0
 183:src/main.cpp  ****     filtr.Process(inr);
 1562              		.loc 24 183 18 view .LVU384
 1563 001a FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 1564              	.LVL67:
 1565              		.loc 24 184 5 is_stmt 1 view .LVU385
 1566              		.loc 24 184 18 is_stmt 0 view .LVU386
 1567 001e 3046     		mov	r0, r6
 1568 0020 B0EE480A 		vmov.f32	s0, s16
 1569 0024 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 1570              	.LVL68:
 185:src/main.cpp  ****     rev.Process(filtl.High(), filtr.High(), &outl, &outr);
 1571              		.loc 24 185 5 is_stmt 1 view .LVU387
 1572              	.LBB794:
 1573              	.LBI794:
  23:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisyExamples/DaisySP//Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     */
  26:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     void Init(float sample_rate);
  27:../DaisyExamples/DaisySP//Source/Filters/svf.h **** 
  28:../DaisyExamples/DaisySP//Source/Filters/svf.h **** 
  29:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     /** 
  30:../DaisyExamples/DaisySP//Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     */
  32:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     void Process(float in);
  33:../DaisyExamples/DaisySP//Source/Filters/svf.h **** 
  34:../DaisyExamples/DaisySP//Source/Filters/svf.h **** 
  35:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../DaisyExamples/DaisySP//Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     */
  38:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisyExamples/DaisySP//Source/Filters/svf.h **** 
  40:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisyExamples/DaisySP//Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     */
  43:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisyExamples/DaisySP//Source/Filters/svf.h **** 
  45:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisyExamples/DaisySP//Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     */
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 100


  48:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     void SetDrive(float d);
  49:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     /** lowpass output
  50:../DaisyExamples/DaisySP//Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     */
  52:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     inline float Low() { return out_low_; }
  53:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     /** highpass output
  54:../DaisyExamples/DaisySP//Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     */
  56:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     inline float High() { return out_high_; }
 1574              		.loc 1 56 18 view .LVU388
 1575              	.LBB795:
 1576              		.loc 1 56 27 view .LVU389
 1577              		.loc 1 56 27 is_stmt 0 view .LVU390
 1578              	.LBE795:
 1579              	.LBE794:
 1580              		.loc 24 185 27 view .LVU391
 1581 0028 796B     		ldr	r1, [r7, #52]	@ float
 1582              		.loc 24 185 41 view .LVU392
 1583 002a 726B     		ldr	r2, [r6, #52]	@ float
 1584              		.loc 24 185 16 view .LVU393
 1585 002c 2B46     		mov	r3, r5
 1586              		.loc 24 185 27 view .LVU394
 1587 002e 0291     		str	r1, [sp, #8]	@ float
 1588              	.LVL69:
 1589              	.LBB796:
 1590              	.LBI796:
 1591              		.loc 1 56 18 is_stmt 1 view .LVU395
 1592              	.LBB797:
 1593              		.loc 1 56 27 view .LVU396
 1594              		.loc 1 56 27 is_stmt 0 view .LVU397
 1595              	.LBE797:
 1596              	.LBE796:
 1597              		.loc 24 185 16 view .LVU398
 1598 0030 02A9     		add	r1, sp, #8
 1599              		.loc 24 185 41 view .LVU399
 1600 0032 0392     		str	r2, [sp, #12]	@ float
 1601              		.loc 24 185 16 view .LVU400
 1602 0034 03AA     		add	r2, sp, #12
 1603 0036 0094     		str	r4, [sp]
 1604 0038 1248     		ldr	r0, .L74+8
 1605 003a FFF7FEFF 		bl	_ZN7daisysp8ReverbSc7ProcessERKfS2_PfS3_
 1606              	.LVL70:
 186:src/main.cpp  ****     outl = drywet * outl + (1 - drywet) * inl;
 1607              		.loc 24 186 5 is_stmt 1 view .LVU401
 1608              		.loc 24 186 19 is_stmt 0 view .LVU402
 1609 003e 124B     		ldr	r3, .L74+12
 1610              		.loc 24 186 31 view .LVU403
 1611 0040 F7EE007A 		vmov.f32	s15, #1.0e+0
 1612              		.loc 24 186 26 view .LVU404
 1613 0044 D5ED005A 		vldr.32	s11, [r5]
 1614              		.loc 24 186 19 view .LVU405
 1615 0048 93ED006A 		vldr.32	s12, [r3]
 1616              		.loc 24 186 31 view .LVU406
 1617 004c 77EEC66A 		vsub.f32	s13, s15, s12
 1618              		.loc 24 186 41 view .LVU407
 1619 0050 26EEA87A 		vmul.f32	s14, s13, s17
 1620              		.loc 24 186 26 view .LVU408
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 101


 1621 0054 A5EE867A 		vfma.f32	s14, s11, s12
 1622              		.loc 24 186 10 view .LVU409
 1623 0058 85ED007A 		vstr.32	s14, [r5]
 187:src/main.cpp  ****     outr = drywet * outr + (1 - drywet) * inr;
 1624              		.loc 24 187 5 is_stmt 1 view .LVU410
 1625              		.loc 24 187 19 is_stmt 0 view .LVU411
 1626 005c 93ED007A 		vldr.32	s14, [r3]
 1627              		.loc 24 187 26 view .LVU412
 1628 0060 D4ED006A 		vldr.32	s13, [r4]
 1629              		.loc 24 187 31 view .LVU413
 1630 0064 77EEC77A 		vsub.f32	s15, s15, s14
 1631              		.loc 24 187 41 view .LVU414
 1632 0068 67EE880A 		vmul.f32	s1, s15, s16
 1633              		.loc 24 187 26 view .LVU415
 1634 006c E6EE870A 		vfma.f32	s1, s13, s14
 1635              		.loc 24 187 10 view .LVU416
 1636 0070 C4ED000A 		vstr.32	s1, [r4]
 188:src/main.cpp  **** }
 1637              		.loc 24 188 1 view .LVU417
 1638 0074 05B0     		add	sp, sp, #20
 1639              		.cfi_def_cfa_offset 28
 1640              		@ sp needed
 1641 0076 BDEC028B 		vldm	sp!, {d8}
 1642              		.cfi_restore 80
 1643              		.cfi_restore 81
 1644              		.cfi_def_cfa_offset 20
 1645              	.LVL71:
 1646              		.loc 24 188 1 view .LVU418
 1647 007a F0BD     		pop	{r4, r5, r6, r7, pc}
 1648              	.LVL72:
 1649              	.L75:
 1650              		.loc 24 188 1 view .LVU419
 1651              		.align	2
 1652              	.L74:
 1653 007c 00000000 		.word	.LANCHOR0
 1654 0080 00000000 		.word	.LANCHOR1
 1655 0084 00000000 		.word	_ZL3rev
 1656 0088 00000000 		.word	.LANCHOR9
 1657              		.cfi_endproc
 1658              	.LFE7185:
 1660              		.section	.text._Z14GetDelaySampleRfS_ff,"ax",%progbits
 1661              		.align	1
 1662              		.p2align 2,,3
 1663              		.global	_Z14GetDelaySampleRfS_ff
 1664              		.syntax unified
 1665              		.thumb
 1666              		.thumb_func
 1667              		.fpu fpv5-d16
 1669              	_Z14GetDelaySampleRfS_ff:
 1670              	.LVL73:
 1671              	.LFB7186:
 189:src/main.cpp  **** 
 190:src/main.cpp  **** void GetDelaySample(float &outl, float &outr, float inl, float inr)
 191:src/main.cpp  **** {
 1672              		.loc 24 191 1 is_stmt 1 view -0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 102


 1675              		@ frame_needed = 0, uses_anonymous_args = 0
 192:src/main.cpp  ****     fonepole(currentDelay, delayTarget, .00007f);
 1676              		.loc 24 192 5 view .LVU421
 1677              	.LBB812:
 1678              	.LBI812:
 1679              		.file 25 "../DaisyExamples/DaisySP//Source/Utility/dsp.h"
   1:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** */
   3:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #pragma once
   4:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #include <cassert>
   7:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #include <random>
   9:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #include <cmath>
  10:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
  11:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** /** PIs
  12:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** */
  13:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
  21:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** namespace daisysp
  22:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
  23:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
  26:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
  29:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** */
  32:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
  34:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     float r;
  35:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #else
  38:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     return r;
  41:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** }
  42:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
  43:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
  45:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     float r;
  46:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #else
  49:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     return r;
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 103


  52:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** }
  53:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
  54:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** */
  56:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
  58:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** }
  60:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
  61:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** These are approximations
  64:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** */
  65:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
  67:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     *lp = l;
  74:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     return f;
  75:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** }
  76:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
  77:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
  79:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     *lp = l;
  86:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     return f;
  87:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** }
  88:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
  89:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** */
  92:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
  94:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** }
  96:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
  97:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** */
 100:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
 102:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     float frac;
 103:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     int   exp;
 104:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     f *= frac;
 107:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     f *= frac;
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 104


 109:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     f *= frac;
 111:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     f += exp;
 113:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     return (f);
 114:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** }
 115:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
 116:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
 118:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** }
 120:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
 121:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** */
 123:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
 125:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** }
 127:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
 128:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** 
 129:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** */
 135:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 1680              		.loc 25 135 13 view .LVU422
 1681              	.LBB813:
 136:../DaisyExamples/DaisySP//Source/Utility/dsp.h **** {
 137:../DaisyExamples/DaisySP//Source/Utility/dsp.h ****     out += coeff * (in - out);
 1682              		.loc 25 137 5 view .LVU423
 1683              		.loc 25 137 9 is_stmt 0 view .LVU424
 1684 0000 534B     		ldr	r3, .L78
 1685              	.LBE813:
 1686              	.LBE812:
 1687              		.loc 24 192 13 view .LVU425
 1688 0002 544A     		ldr	r2, .L78+4
 1689              	.LBB817:
 1690              	.LBB814:
 1691              		.loc 25 137 9 view .LVU426
 1692 0004 D3ED007A 		vldr.32	s15, [r3]
 1693              		.loc 25 137 24 view .LVU427
 1694 0008 92ED007A 		vldr.32	s14, [r2]
 1695              		.loc 25 137 9 view .LVU428
 1696 000c DFED526A 		vldr.32	s13, .L78+8
 1697              		.loc 25 137 24 view .LVU429
 1698 0010 37EE677A 		vsub.f32	s14, s14, s15
 1699              	.LBE814:
 1700              	.LBE817:
 1701              	.LBB818:
 1702              	.LBB819:
  55:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1703              		.loc 17 55 27 view .LVU430
 1704 0014 DFF854C1 		ldr	ip, .L78+28
 1705              	.LBE819:
 1706              	.LBE818:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 105


 191:src/main.cpp  ****     fonepole(currentDelay, delayTarget, .00007f);
 1707              		.loc 24 191 1 view .LVU431
 1708 0018 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1709              		.cfi_def_cfa_offset 36
 1710              		.cfi_offset 4, -36
 1711              		.cfi_offset 5, -32
 1712              		.cfi_offset 6, -28
 1713              		.cfi_offset 7, -24
 1714              		.cfi_offset 8, -20
 1715              		.cfi_offset 9, -16
 1716              		.cfi_offset 10, -12
 1717              		.cfi_offset 11, -8
 1718              		.cfi_offset 14, -4
 1719              	.LBB822:
 1720              	.LBB815:
 1721              		.loc 25 137 9 view .LVU432
 1722 001c E7EE267A 		vfma.f32	s15, s14, s13
 1723              	.LBE815:
 1724              	.LBE822:
 1725              	.LBB823:
 1726              	.LBB824:
 1727              		.loc 17 56 60 view .LVU433
 1728 0020 4E4E     		ldr	r6, .L78+12
 1729              	.LBE824:
 1730              	.LBE823:
 1731              	.LBB829:
 1732              	.LBB830:
  57:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
  58:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     }
  59:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** 
  60:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  61:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     */
  62:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     inline void Write(const T sample)
  63:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     {
  64:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         line_[write_ptr_] = sample;
  65:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
  66:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     }
  67:../DaisyExamples/DaisySP//Source/Utility/delayline.h **** 
  68:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
  69:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     */
  70:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     inline const T Read() const
  71:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     {
  72:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         T a = line_[(write_ptr_ + delay_) % max_size];
 1733              		.loc 17 72 22 view .LVU434
 1734 0022 DCF80470 		ldr	r7, [ip, #4]
 1735              	.LBE830:
 1736              	.LBE829:
 193:src/main.cpp  ****     delr.SetDelay(currentDelay);
 194:src/main.cpp  ****     dell.SetDelay(currentDelay);
 195:src/main.cpp  ****     outl = dell.Read();
 196:src/main.cpp  ****     outr = delr.Read();
 197:src/main.cpp  **** 
 198:src/main.cpp  ****     dell.Write((feedback * outl) + inl);
 199:src/main.cpp  ****     outl = (feedback * outl) + ((1.0f - feedback) * inl);
 1737              		.loc 24 199 39 view .LVU435
 1738 0026 B7EE007A 		vmov.f32	s14, #1.0e+0
 1739              	.LBB840:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 106


 1740              	.LBB831:
 1741              		.loc 17 72 43 view .LVU436
 1742 002a 4D4C     		ldr	r4, .L78+16
 1743 002c DFF840E1 		ldr	lr, .L78+32
 1744              	.LBE831:
 1745              	.LBE840:
 1746              	.LBB841:
 1747              	.LBB825:
  55:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1748              		.loc 17 55 27 view .LVU437
 1749 0030 4C4D     		ldr	r5, .L78+20
  54:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         frac_             = delay - static_cast<float>(int_delay);
 1750              		.loc 17 54 17 view .LVU438
 1751 0032 FDEEE76A 		vcvt.s32.f32	s13, s15
 1752              	.LBE825:
 1753              	.LBE841:
 1754              	.LBB842:
 1755              	.LBB816:
 1756              		.loc 25 137 9 view .LVU439
 1757 0036 C3ED007A 		vstr.32	s15, [r3]
 1758              	.LVL74:
 1759              		.loc 25 137 9 view .LVU440
 1760              	.LBE816:
 1761              	.LBE842:
 193:src/main.cpp  ****     delr.SetDelay(currentDelay);
 1762              		.loc 24 193 5 is_stmt 1 view .LVU441
 1763              	.LBB843:
 1764              	.LBI823:
  52:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     {
 1765              		.loc 17 52 17 view .LVU442
  52:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     {
 1766              		.loc 17 52 17 is_stmt 0 view .LVU443
 1767              	.LBE843:
 1768              	.LBB844:
 1769              	.LBB845:
 1770              		.loc 17 72 22 view .LVU444
 1771 003a D5F80490 		ldr	r9, [r5, #4]
 1772              	.LBE845:
 1773              	.LBE844:
 1774              	.LBB855:
 1775              	.LBB826:
  56:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 1776              		.loc 17 56 60 view .LVU445
 1777 003e 16EE903A 		vmov	r3, s13	@ int
  55:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1778              		.loc 17 55 37 view .LVU446
 1779 0042 F8EEE66A 		vcvt.f32.s32	s13, s13
 1780              	.LVL75:
  56:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 1781              		.loc 17 56 60 view .LVU447
 1782 0046 B342     		cmp	r3, r6
  55:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1783              		.loc 17 55 35 view .LVU448
 1784 0048 77EEE67A 		vsub.f32	s15, s15, s13
 1785              	.LVL76:
  56:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 1786              		.loc 17 56 60 view .LVU449
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 107


 1787 004c 28BF     		it	cs
 1788 004e 3346     		movcs	r3, r6
 1789              	.LVL77:
  56:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 1790              		.loc 17 56 60 view .LVU450
 1791              	.LBE826:
 1792              	.LBE855:
 1793              	.LBB856:
 1794              	.LBB832:
 1795              		.loc 17 72 33 view .LVU451
 1796 0050 DA19     		adds	r2, r3, r7
 1797              	.LBE832:
 1798              	.LBE856:
 1799              	.LBB857:
 1800              	.LBB827:
  56:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 1801              		.loc 17 56 16 view .LVU452
 1802 0052 AB60     		str	r3, [r5, #8]
 1803              	.LVL78:
  56:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 1804              		.loc 17 56 16 view .LVU453
 1805              	.LBE827:
 1806              	.LBE857:
 194:src/main.cpp  ****     outl = dell.Read();
 1807              		.loc 24 194 5 is_stmt 1 view .LVU454
 1808              	.LBB858:
 1809              	.LBI818:
  52:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     {
 1810              		.loc 17 52 17 view .LVU455
 1811              	.LBB820:
  56:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 1812              		.loc 17 56 16 is_stmt 0 view .LVU456
 1813 0054 CCF80830 		str	r3, [ip, #8]
 1814              	.LVL79:
  56:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 1815              		.loc 17 56 16 view .LVU457
 1816              	.LBE820:
 1817              	.LBE858:
 195:src/main.cpp  ****     outr = delr.Read();
 1818              		.loc 24 195 5 is_stmt 1 view .LVU458
 1819              	.LBB859:
 1820              	.LBI829:
  70:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     {
 1821              		.loc 17 70 20 view .LVU459
 1822              	.LBE859:
 1823              	.LBB860:
 1824              	.LBB846:
 1825              		.loc 17 72 33 is_stmt 0 view .LVU460
 1826 0058 4B44     		add	r3, r3, r9
 1827              	.LBE846:
 1828              	.LBE860:
 1829              	.LBB861:
 1830              	.LBB833:
 1831              		.loc 17 72 43 view .LVU461
 1832 005a A4FB028B 		umull	r8, fp, r4, r2
  73:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1833              		.loc 17 73 42 view .LVU462
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 108


 1834 005e 02F1010A 		add	r10, r2, #1
 1835              	.LBE833:
 1836              	.LBE861:
 1837              	.LBB862:
 1838              	.LBB828:
  55:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1839              		.loc 17 55 27 view .LVU463
 1840 0062 C5ED007A 		vstr.32	s15, [r5]
 1841              	.LBE828:
 1842              	.LBE862:
 1843              	.LBB863:
 1844              	.LBB834:
  72:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1845              		.loc 17 72 43 view .LVU464
 1846 0066 4FEADB3B 		lsr	fp, fp, #15
 1847              	.LBE834:
 1848              	.LBE863:
 1849              	.LBB864:
 1850              	.LBB821:
  55:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1851              		.loc 17 55 27 view .LVU465
 1852 006a CCED007A 		vstr.32	s15, [ip]
 1853              	.LBE821:
 1854              	.LBE864:
 1855              	.LBB865:
 1856              	.LBB835:
  72:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1857              		.loc 17 72 43 view .LVU466
 1858 006e 0EFB1B22 		mls	r2, lr, fp, r2
  72:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1859              		.loc 17 72 11 view .LVU467
 1860 0072 0CEB8202 		add	r2, ip, r2, lsl #2
 1861 0076 D2ED036A 		vldr.32	s13, [r2, #12]
 1862              	.LVL80:
 1863              		.loc 17 73 47 view .LVU468
 1864 007a A4FB0A82 		umull	r8, r2, r4, r10
 1865 007e D20B     		lsrs	r2, r2, #15
 1866 0080 0EFB12AA 		mls	r10, lr, r2, r10
 1867              	.LVL81:
 1868              		.loc 17 73 47 view .LVU469
 1869              	.LBE835:
 1870              	.LBE865:
 1871              	.LBB866:
 1872              	.LBB847:
  72:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1873              		.loc 17 72 43 view .LVU470
 1874 0084 A4FB0382 		umull	r8, r2, r4, r3
 1875              	.LBE847:
 1876              	.LBE866:
 1877              	.LBB867:
 1878              	.LBB836:
 1879              		.loc 17 73 11 view .LVU471
 1880 0088 0CEB8A0A 		add	r10, ip, r10, lsl #2
 1881              	.LBE836:
 1882              	.LBE867:
 1883              	.LBB868:
 1884              	.LBB848:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 109


  72:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1885              		.loc 17 72 43 view .LVU472
 1886 008c D20B     		lsrs	r2, r2, #15
 1887              	.LBE848:
 1888              	.LBE868:
 1889              	.LBB869:
 1890              	.LBB837:
  74:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1891              		.loc 17 74 23 view .LVU473
 1892 008e 9AED036A 		vldr.32	s12, [r10, #12]
 1893              	.LBE837:
 1894              	.LBE869:
 1895              	.LBB870:
 1896              	.LBB849:
  73:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1897              		.loc 17 73 42 view .LVU474
 1898 0092 03F1010A 		add	r10, r3, #1
  72:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1899              		.loc 17 72 43 view .LVU475
 1900 0096 0EFB1232 		mls	r2, lr, r2, r3
 1901              	.LBE849:
 1902              	.LBE870:
 1903              	.LBB871:
 1904              	.LBB838:
 1905              		.loc 17 74 23 view .LVU476
 1906 009a 36EE666A 		vsub.f32	s12, s12, s13
 1907              	.LBE838:
 1908              	.LBE871:
 1909              	.LBB872:
 1910              	.LBB850:
  72:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1911              		.loc 17 72 11 view .LVU477
 1912 009e 05EB8202 		add	r2, r5, r2, lsl #2
 1913              	.LBE850:
 1914              	.LBE872:
 1915              	.LBB873:
 1916              	.LBB839:
 1917              		.loc 17 74 30 view .LVU478
 1918 00a2 E7EE866A 		vfma.f32	s13, s15, s12
 1919              	.LVL82:
 1920              		.loc 17 74 30 view .LVU479
 1921              	.LBE839:
 1922              	.LBE873:
 195:src/main.cpp  ****     outr = delr.Read();
 1923              		.loc 24 195 10 view .LVU480
 1924 00a6 C0ED006A 		vstr.32	s13, [r0]
 196:src/main.cpp  **** 
 1925              		.loc 24 196 5 is_stmt 1 view .LVU481
 1926              	.LVL83:
 1927              	.LBB874:
 1928              	.LBI844:
  70:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     {
 1929              		.loc 17 70 20 view .LVU482
 1930              	.LBB851:
  72:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1931              		.loc 17 72 11 is_stmt 0 view .LVU483
 1932 00aa D2ED037A 		vldr.32	s15, [r2, #12]
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 110


 1933              	.LVL84:
  73:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1934              		.loc 17 73 47 view .LVU484
 1935 00ae A4FB0A23 		umull	r2, r3, r4, r10
 1936              	.LVL85:
 1937              		.loc 17 74 30 view .LVU485
 1938 00b2 95ED006A 		vldr.32	s12, [r5]
  73:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1939              		.loc 17 73 47 view .LVU486
 1940 00b6 DB0B     		lsrs	r3, r3, #15
 1941              	.LBE851:
 1942              	.LBE874:
 198:src/main.cpp  ****     outl = (feedback * outl) + ((1.0f - feedback) * inl);
 1943              		.loc 24 198 26 view .LVU487
 1944 00b8 2B4A     		ldr	r2, .L78+24
 1945              	.LBB875:
 1946              	.LBB852:
  73:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1947              		.loc 17 73 47 view .LVU488
 1948 00ba 0EFB13AA 		mls	r10, lr, r3, r10
 1949              	.LVL86:
  73:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1950              		.loc 17 73 47 view .LVU489
 1951              	.LBE852:
 1952              	.LBE875:
 1953              	.LBB876:
 1954              	.LBB877:
  64:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 1955              		.loc 17 64 27 view .LVU490
 1956 00be 0CEB8703 		add	r3, ip, r7, lsl #2
  65:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     }
 1957              		.loc 17 65 45 view .LVU491
 1958 00c2 3744     		add	r7, r7, r6
 1959              	.LBE877:
 1960              	.LBE876:
 1961              	.LBB883:
 1962              	.LBB884:
 1963 00c4 4E44     		add	r6, r6, r9
 1964              	.LBE884:
 1965              	.LBE883:
 1966              	.LBB891:
 1967              	.LBB853:
  73:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1968              		.loc 17 73 11 view .LVU492
 1969 00c6 05EB8A0A 		add	r10, r5, r10, lsl #2
 1970              	.LBE853:
 1971              	.LBE891:
 1972              	.LBB892:
 1973              	.LBB885:
  64:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 1974              		.loc 17 64 27 view .LVU493
 1975 00ca 05EB8909 		add	r9, r5, r9, lsl #2
 1976              	.LVL87:
  64:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 1977              		.loc 17 64 27 view .LVU494
 1978              	.LBE885:
 1979              	.LBE892:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 111


 1980              	.LBB893:
 1981              	.LBB854:
 1982              		.loc 17 74 23 view .LVU495
 1983 00ce DAED036A 		vldr.32	s13, [r10, #12]
 1984 00d2 76EEE76A 		vsub.f32	s13, s13, s15
 1985              		.loc 17 74 30 view .LVU496
 1986 00d6 E6EE867A 		vfma.f32	s15, s13, s12
 1987              	.LVL88:
 1988              		.loc 17 74 30 view .LVU497
 1989              	.LBE854:
 1990              	.LBE893:
 198:src/main.cpp  ****     outl = (feedback * outl) + ((1.0f - feedback) * inl);
 1991              		.loc 24 198 15 view .LVU498
 1992 00da B0EE406A 		vmov.f32	s12, s0
 196:src/main.cpp  **** 
 1993              		.loc 24 196 10 view .LVU499
 1994 00de C1ED007A 		vstr.32	s15, [r1]
 198:src/main.cpp  ****     outl = (feedback * outl) + ((1.0f - feedback) * inl);
 1995              		.loc 24 198 5 is_stmt 1 view .LVU500
 198:src/main.cpp  ****     outl = (feedback * outl) + ((1.0f - feedback) * inl);
 1996              		.loc 24 198 15 is_stmt 0 view .LVU501
 1997 00e2 D0ED007A 		vldr.32	s15, [r0]
 198:src/main.cpp  ****     outl = (feedback * outl) + ((1.0f - feedback) * inl);
 1998              		.loc 24 198 26 view .LVU502
 1999 00e6 D2ED006A 		vldr.32	s13, [r2]
 198:src/main.cpp  ****     outl = (feedback * outl) + ((1.0f - feedback) * inl);
 2000              		.loc 24 198 15 view .LVU503
 2001 00ea A7EEA66A 		vfma.f32	s12, s15, s13
 2002              	.LVL89:
 2003              	.LBB894:
 2004              	.LBI876:
  62:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     {
 2005              		.loc 17 62 17 is_stmt 1 view .LVU504
 2006              	.LBE894:
 2007              		.loc 24 199 39 is_stmt 0 view .LVU505
 2008 00ee 77EE667A 		vsub.f32	s15, s14, s13
 2009              		.loc 24 199 51 view .LVU506
 2010 00f2 27EE800A 		vmul.f32	s0, s15, s0
 2011              	.LVL90:
 2012              	.LBB895:
 2013              	.LBB878:
  64:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 2014              		.loc 17 64 27 view .LVU507
 2015 00f6 83ED036A 		vstr.32	s12, [r3, #12]
 2016              	.LBE878:
 2017              	.LBE895:
 200:src/main.cpp  **** 
 201:src/main.cpp  ****     delr.Write((feedback * outr) + inr);
 2018              		.loc 24 201 15 view .LVU508
 2019 00fa B0EE606A 		vmov.f32	s12, s1
 2020              	.LVL91:
 199:src/main.cpp  **** 
 2021              		.loc 24 199 30 view .LVU509
 2022 00fe D0ED007A 		vldr.32	s15, [r0]
 2023              	.LBB896:
 2024              	.LBB879:
  65:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 112


 2025              		.loc 17 65 57 view .LVU510
 2026 0102 A4FB0732 		umull	r3, r2, r4, r7
 2027              	.LVL92:
  65:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     }
 2028              		.loc 17 65 57 view .LVU511
 2029              	.LBE879:
 2030              	.LBE896:
 2031              	.LBB897:
 2032              	.LBB886:
 2033 0106 A4FB0643 		umull	r4, r3, r4, r6
 2034              	.LBE886:
 2035              	.LBE897:
 199:src/main.cpp  **** 
 2036              		.loc 24 199 30 view .LVU512
 2037 010a A6EEA70A 		vfma.f32	s0, s13, s15
 2038              	.LBB898:
 2039              	.LBB880:
  65:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     }
 2040              		.loc 17 65 57 view .LVU513
 2041 010e D20B     		lsrs	r2, r2, #15
 2042              	.LBE880:
 2043              	.LBE898:
 2044              	.LBB899:
 2045              	.LBB887:
 2046 0110 DB0B     		lsrs	r3, r3, #15
 2047              	.LBE887:
 2048              	.LBE899:
 2049              	.LBB900:
 2050              	.LBB881:
 2051 0112 0EFB1277 		mls	r7, lr, r2, r7
 2052              	.LVL93:
  65:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     }
 2053              		.loc 17 65 57 view .LVU514
 2054              	.LBE881:
 2055              	.LBE900:
 2056              		.loc 24 201 26 view .LVU515
 2057 0116 144A     		ldr	r2, .L78+24
 2058              	.LBB901:
 2059              	.LBB888:
  65:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     }
 2060              		.loc 17 65 57 view .LVU516
 2061 0118 0EFB1366 		mls	r6, lr, r3, r6
 2062              	.LBE888:
 2063              	.LBE901:
 2064              	.LBB902:
 2065              	.LBB882:
  65:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     }
 2066              		.loc 17 65 27 view .LVU517
 2067 011c CCF80470 		str	r7, [ip, #4]
 2068              	.LVL94:
  65:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     }
 2069              		.loc 17 65 27 view .LVU518
 2070              	.LBE882:
 2071              	.LBE902:
 199:src/main.cpp  **** 
 2072              		.loc 24 199 5 is_stmt 1 view .LVU519
 199:src/main.cpp  **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 113


 2073              		.loc 24 199 10 is_stmt 0 view .LVU520
 2074 0120 80ED000A 		vstr.32	s0, [r0]
 2075              		.loc 24 201 5 is_stmt 1 view .LVU521
 2076              		.loc 24 201 26 is_stmt 0 view .LVU522
 2077 0124 D2ED006A 		vldr.32	s13, [r2]
 2078              		.loc 24 201 15 view .LVU523
 2079 0128 D1ED005A 		vldr.32	s11, [r1]
 202:src/main.cpp  ****     outr = (feedback * outr) + ((1.0f - feedback) * inr);
 2080              		.loc 24 202 39 view .LVU524
 2081 012c 77EE667A 		vsub.f32	s15, s14, s13
 2082              	.LBB903:
 2083              	.LBB889:
  65:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     }
 2084              		.loc 17 65 27 view .LVU525
 2085 0130 6E60     		str	r6, [r5, #4]
 2086              	.LBE889:
 2087              	.LBE903:
 201:src/main.cpp  ****     outr = (feedback * outr) + ((1.0f - feedback) * inr);
 2088              		.loc 24 201 15 view .LVU526
 2089 0132 A5EEA66A 		vfma.f32	s12, s11, s13
 2090              	.LVL95:
 2091              	.LBB904:
 2092              	.LBI883:
  62:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     {
 2093              		.loc 17 62 17 is_stmt 1 view .LVU527
  62:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     {
 2094              		.loc 17 62 17 is_stmt 0 view .LVU528
 2095              	.LBE904:
 2096              		.loc 24 202 5 is_stmt 1 view .LVU529
 2097              		.loc 24 202 51 is_stmt 0 view .LVU530
 2098 0136 27EEA07A 		vmul.f32	s14, s15, s1
 2099              	.LBB905:
 2100              	.LBB890:
  64:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 2101              		.loc 17 64 27 view .LVU531
 2102 013a 89ED036A 		vstr.32	s12, [r9, #12]
 2103              	.LBE890:
 2104              	.LBE905:
 2105              		.loc 24 202 30 view .LVU532
 2106 013e D1ED007A 		vldr.32	s15, [r1]
 2107 0142 A6EEA77A 		vfma.f32	s14, s13, s15
 2108              		.loc 24 202 10 view .LVU533
 2109 0146 81ED007A 		vstr.32	s14, [r1]
 203:src/main.cpp  **** }
 2110              		.loc 24 203 1 view .LVU534
 2111 014a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2112              	.L79:
 2113 014e 00BF     		.align	2
 2114              	.L78:
 2115 0150 00000000 		.word	.LANCHOR7
 2116 0154 00000000 		.word	.LANCHOR6
 2117 0158 F7CC9238 		.word	949144823
 2118 015c BFD40100 		.word	119999
 2119 0160 73B2E745 		.word	1172812403
 2120 0164 00000000 		.word	_ZL4delr
 2121 0168 00000000 		.word	.LANCHOR10
 2122 016c 0C530700 		.word	_ZL4dell
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 114


 2123 0170 C0D40100 		.word	120000
 2124              		.cfi_endproc
 2125              	.LFE7186:
 2127              		.section	.rodata._Z13AudioCallbackPKfPfj.str1.4,"aMS",%progbits,1
 2128              		.align	2
 2129              	.LC2:
 2130 0000 76656374 		.ascii	"vector::_M_default_append\000"
 2130      6F723A3A 
 2130      5F4D5F64 
 2130      65666175 
 2130      6C745F61 
 2131              		.section	.text._Z13AudioCallbackPKfPfj,"ax",%progbits
 2132              		.align	1
 2133              		.p2align 2,,3
 2134              		.global	_Z13AudioCallbackPKfPfj
 2135              		.syntax unified
 2136              		.thumb
 2137              		.thumb_func
 2138              		.fpu fpv5-d16
 2140              	_Z13AudioCallbackPKfPfj:
 2141              	.LVL96:
 2142              	.LFB7169:
  38:src/main.cpp  ****     float outl, outr, inl, inr;
 2143              		.loc 24 38 1 is_stmt 1 view -0
 2144              		.cfi_startproc
 2145              		@ args = 0, pretend = 0, frame = 8
 2146              		@ frame_needed = 0, uses_anonymous_args = 0
  39:src/main.cpp  **** 	std::vector<float> inavg;
 2147              		.loc 24 39 5 view .LVU536
  40:src/main.cpp  **** 	inavg.resize(size);
 2148              		.loc 24 40 2 view .LVU537
 2149              	.LBB1000:
 2150              	.LBI1000:
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 2151              		.loc 19 487 7 view .LVU538
 2152              	.LBB1001:
 2153              	.LBI1001:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 2154              		.loc 19 288 7 view .LVU539
 2155              	.LBB1002:
 2156              	.LBI1002:
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 2157              		.loc 19 131 2 view .LVU540
 2158              	.LBB1003:
 2159              	.LBI1003:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 2160              		.loc 22 144 7 view .LVU541
 2161              	.LBB1004:
 2162              	.LBI1004:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2163              		.loc 21 79 7 view .LVU542
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2164              		.loc 21 79 7 is_stmt 0 view .LVU543
 2165              	.LBE1004:
 2166              	.LBE1003:
 2167              	.LBB1005:
 2168              	.LBI1005:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 115


  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 2169              		.loc 19 97 2 is_stmt 1 view .LVU544
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 2170              		.loc 19 97 2 is_stmt 0 view .LVU545
 2171              	.LBE1005:
 2172              	.LBE1002:
 2173              	.LBE1001:
 2174              	.LBE1000:
  41:src/main.cpp  ****     Controls();
 2175              		.loc 24 41 2 is_stmt 1 view .LVU546
 2176              	.LBB1006:
 2177              	.LBI1006:
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector assignment operator.
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x will not be copied.
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(const vector& __x);
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move assignment operator.
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  if the allocators permit it).
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	constexpr bool __move_storage =
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector list assignment operator.
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 116


 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(initializer_list<value_type> __l)
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __val  Value to be assigned.
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  value.  Note that the assignment completely changes the
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the number of elements assigned.
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(size_type __n, const value_type& __val)
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_assign(__n, __val); }
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  range [__first,__last).
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 117


 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(initializer_list<value_type> __l)
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Get a copy of the memory allocation object.
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::get_allocator;
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // iterators
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points to the first
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 118


 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(end()); }
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  in reverse element order.
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(begin()); }
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cbegin() const noexcept
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cend() const noexcept
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 119


 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crbegin() const noexcept
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crend() const noexcept
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.2] capacity
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  default constructed elements are appended.
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size)
 2178              		.loc 19 937 7 view .LVU547
 2179              	.LBE1006:
  38:src/main.cpp  ****     float outl, outr, inl, inr;
 2180              		.loc 24 38 1 is_stmt 0 view .LVU548
 2181 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2182              		.cfi_def_cfa_offset 32
 2183              		.cfi_offset 4, -32
 2184              		.cfi_offset 5, -28
 2185              		.cfi_offset 6, -24
 2186              		.cfi_offset 7, -20
 2187              		.cfi_offset 8, -16
 2188              		.cfi_offset 9, -12
 2189              		.cfi_offset 10, -8
 2190              		.cfi_offset 14, -4
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 120


 2191              	.LBB1078:
 2192              	.LBB1007:
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 2193              		.loc 19 939 2 view .LVU549
 2194 0004 1646     		mov	r6, r2
 2195              	.LBE1007:
 2196              	.LBE1078:
  38:src/main.cpp  ****     float outl, outr, inl, inr;
 2197              		.loc 24 38 1 view .LVU550
 2198 0006 2DED028B 		vpush.64	{d8}
 2199              		.cfi_def_cfa_offset 40
 2200              		.cfi_offset 80, -40
 2201              		.cfi_offset 81, -36
 2202 000a 82B0     		sub	sp, sp, #8
 2203              		.cfi_def_cfa_offset 48
 2204              	.LBB1079:
 2205              	.LBB1073:
 2206              		.loc 19 939 2 view .LVU551
 2207 000c 82B9     		cbnz	r2, .L90
 2208              	.LVL97:
 2209              		.loc 19 939 2 view .LVU552
 2210              	.LBE1073:
 2211              	.LBE1079:
  42:src/main.cpp  **** 	//audio
 2212              		.loc 24 42 5 is_stmt 1 view .LVU553
  42:src/main.cpp  **** 	//audio
 2213              		.loc 24 42 13 is_stmt 0 view .LVU554
 2214 000e FFF7FEFF 		bl	_Z8Controlsv
 2215              	.LVL98:
  44:src/main.cpp  ****     {
 2216              		.loc 24 44 5 is_stmt 1 view .LVU555
 2217              	.LBB1080:
  44:src/main.cpp  ****     {
 2218              		.loc 24 44 25 view .LVU556
 2219              	.LBE1080:
  63:src/main.cpp  ****     currentTempo = ttrack.getTempo();
 2220              		.loc 24 63 2 view .LVU557
  63:src/main.cpp  ****     currentTempo = ttrack.getTempo();
 2221              		.loc 24 63 26 is_stmt 0 view .LVU558
 2222 0012 3146     		mov	r1, r6
 2223 0014 3A48     		ldr	r0, .L94
 2224 0016 FFF7FEFF 		bl	_ZN6TTrack17processAudioFrameEPf
 2225              	.LVL99:
  64:src/main.cpp  **** }
 2226              		.loc 24 64 5 is_stmt 1 view .LVU559
  64:src/main.cpp  **** }
 2227              		.loc 24 64 35 is_stmt 0 view .LVU560
 2228 001a 3948     		ldr	r0, .L94
 2229 001c FFF7FEFF 		bl	_ZN6TTrack8getTempoEv
 2230              	.LVL100:
  64:src/main.cpp  **** }
 2231              		.loc 24 64 18 view .LVU561
 2232 0020 384B     		ldr	r3, .L94+4
 2233 0022 83ED000A 		vstr.32	s0, [r3]
 2234              	.LVL101:
 2235              	.LBB1081:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 121


 2236              	.LBI1081:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2237              		.loc 19 678 7 is_stmt 1 view .LVU562
 2238              	.LBB1082:
 2239              	.LBI1082:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2240              		.loc 19 276 7 view .LVU563
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2241              		.loc 19 276 7 is_stmt 0 view .LVU564
 2242              	.LBE1082:
 2243              	.LBB1083:
 2244              	.LBI1083:
 2245              		.loc 20 735 5 is_stmt 1 view .LVU565
 2246              		.loc 20 735 5 is_stmt 0 view .LVU566
 2247              	.LBE1083:
 2248              	.LBB1084:
 2249              	.LBI1084:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2250              		.loc 19 333 7 is_stmt 1 view .LVU567
 2251              	.LBB1085:
 2252              	.LBI1085:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2253              		.loc 19 350 7 view .LVU568
 2254              	.LBE1085:
 2255              	.LBE1084:
 2256              	.LBE1081:
  65:src/main.cpp  **** 
 2257              		.loc 24 65 1 is_stmt 0 view .LVU569
 2258 0026 02B0     		add	sp, sp, #8
 2259              		.cfi_remember_state
 2260              		.cfi_def_cfa_offset 40
 2261              		@ sp needed
 2262 0028 BDEC028B 		vldm	sp!, {d8}
 2263              		.cfi_restore 80
 2264              		.cfi_restore 81
 2265              		.cfi_def_cfa_offset 32
 2266 002c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2267              	.LVL102:
 2268              	.L90:
 2269              		.cfi_restore_state
 2270              	.LBB1105:
 2271              	.LBB1074:
 2272              	.LBB1008:
 2273              	.LBI1008:
 2274              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\vector.tcc
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Vector implementation (out of line) -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 122


  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Copyright (c) 1996
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * representations about the suitability of this  software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** /** @file bits/vector.tcc
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #ifndef _VECTOR_TCC
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #define _VECTOR_TCC 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** {
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     reserve(size_type __n)
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n > this->max_size())
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 123


  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	__throw_length_error(__N("vector::reserve"));
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->capacity() < __n)
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __old_size = size();
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  pointer __tmp;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __tmp = this->_M_allocate(__n);
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  __tmp, _M_get_Tp_allocator());
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __tmp = _M_allocate_and_copy(__n,
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_start),
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_finish));
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			this->_M_impl._M_end_of_storage
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			- this->_M_impl._M_start);
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_start = __tmp;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = __tmp + __old_size;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       typename vector<_Tp, _Alloc>::reference
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     std::forward<_Args>(__args)...);
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return back();
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 124


 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     insert(const_iterator __position, const value_type& __x)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     insert(iterator __position, const value_type& __x)
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __n = __position - begin();
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__position == end())
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     __x);
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const auto __pos = begin() + (__position - cbegin());
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    // __x could be an existing element of this vector, so make a
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    // copy of it before _M_insert_aux moves elements around.
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Temporary_value __x_copy(this, __x);
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_insert_aux(__pos, std::move(__x_copy._M_val()));
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_insert_aux(__position, __x);
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(begin() + (__position - cbegin()), __x);
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(__position, __x);
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_erase(iterator __position)
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__position + 1 != end())
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_GLIBCXX_MOVE3(__position + 1, end(), __position);
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       --this->_M_impl._M_finish;
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return __position;
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 125


 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_erase(iterator __first, iterator __last)
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__first != __last)
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__last != end())
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_MOVE3(__last, end(), __first);
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(__first.base() + (end() - __last));
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return __first;
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>&
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     operator=(const vector<_Tp, _Alloc>& __x)
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (&__x != this)
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      if (!_Alloc_traits::_S_always_equal()
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	        {
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  // replacement allocator cannot free existing storage
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->clear();
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _M_deallocate(this->_M_impl._M_start,
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				this->_M_impl._M_end_of_storage
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				- this->_M_impl._M_start);
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_start = nullptr;
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish = nullptr;
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_end_of_storage = nullptr;
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __x._M_get_Tp_allocator());
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __xlen = __x.size();
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__xlen > capacity())
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						   __x.end());
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    this->_M_impl._M_end_of_storage
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    - this->_M_impl._M_start);
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_start = __tmp;
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else if (size() >= __xlen)
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    end(), _M_get_Tp_allocator());
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 126


 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			this->_M_impl._M_start);
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __x._M_impl._M_finish,
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return *this;
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_fill_assign(size_t __n, const value_type& __val)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n > capacity())
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  vector __tmp(__n, __val, _M_get_Tp_allocator());
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __tmp._M_impl._M_swap_data(this->_M_impl);
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else if (__n > size())
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  std::fill(begin(), end(), __val);
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __add = __n - size();
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GROW(__add);
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish =
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __add, __val, _M_get_Tp_allocator());
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GREW(__add);
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****         _M_erase_at_end(std::fill_n(this->_M_impl._M_start, __n, __val));
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _InputIterator>
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_assign_aux(_InputIterator __first, _InputIterator __last,
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::input_iterator_tag)
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	pointer __cur(this->_M_impl._M_start);
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	for (; __first != __last && __cur != this->_M_impl._M_finish;
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	     ++__cur, (void)++__first)
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  *__cur = *__first;
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__first == __last)
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(__cur);
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_range_insert(end(), __first, __last,
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  std::__iterator_category(__first));
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 127


 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _ForwardIterator>
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::forward_iterator_tag)
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	const size_type __len = std::distance(__first, __last);
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__len > capacity())
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _S_check_init_len(__len, _M_get_Tp_allocator());
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  _M_get_Tp_allocator());
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_REINIT;
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_deallocate(this->_M_impl._M_start,
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  this->_M_impl._M_end_of_storage
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  - this->_M_impl._M_start);
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_start = __tmp;
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_finish = this->_M_impl._M_start + __len;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_end_of_storage = this->_M_impl._M_finish;
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else if (size() >= __len)
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(std::copy(__first, __last, this->_M_impl._M_start));
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _ForwardIterator __mid = __first;
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::advance(__mid, size());
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::copy(__first, __mid, this->_M_impl._M_start);
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const size_type __attribute__((__unused__)) __n = __len - size();
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_finish =
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__mid, __last,
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     auto
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_insert_rval(const_iterator __position, value_type&& __v) -> iterator
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const auto __n = __position - cbegin();
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__position == cend())
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     std::move(__v));
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_insert_aux(begin() + __n, std::move(__v));
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 128


 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(begin() + __n, std::move(__v));
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       auto
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_emplace_aux(const_iterator __position, _Args&&... __args)
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       -> iterator
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	const auto __n = __position - cbegin();
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__position == cend())
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				       std::forward<_Args>(__args)...);
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++this->_M_impl._M_finish;
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // We need to construct a temporary because something in __args...
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // could alias one of the elements of the container and so we
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // need to use it before _M_insert_aux moves elements around.
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Temporary_value __tmp(this, std::forward<_Args>(__args)...);
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_insert_aux(begin() + __n, std::move(__tmp._M_val()));
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_realloc_insert(begin() + __n, std::forward<_Args>(__args)...);
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return iterator(this->_M_impl._M_start + __n);
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _Arg>
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_insert_aux(iterator __position, _Arg&& __arg)
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_insert_aux(iterator __position, const _Tp& __x)
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			       _GLIBCXX_MOVE(*(this->_M_impl._M_finish - 1)));
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       ++this->_M_impl._M_finish;
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Tp __x_copy = __x;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 129


 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_finish - 2,
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_finish - 1);
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       *__position = __x_copy;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       *__position = std::forward<_Arg>(__arg);
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_realloc_insert(iterator __position, const _Tp& __x)
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __len =
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_check_len(size_type(1), "vector::_M_realloc_insert");
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __old_start = this->_M_impl._M_start;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __old_finish = this->_M_impl._M_finish;
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __elems_before = __position - begin();
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __new_start(this->_M_allocate(__len));
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __new_finish(__new_start);
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       __try
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // The order of the three operations is dictated by the C++11
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // case, where the moves could alter a new element belonging
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // to the existing vector.  This is an issue only for callers
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // taking the element by lvalue ref (see last bullet of C++11
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // [res.on.arguments]).
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _Alloc_traits::construct(this->_M_impl,
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before,
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   std::forward<_Args>(__args)...);
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __x);
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __new_finish = pointer();
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish = _S_relocate(__old_start, __position.base(),
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 __new_start, _M_get_Tp_allocator());
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++__new_finish;
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish = _S_relocate(__position.base(), __old_finish,
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 __new_finish, _M_get_Tp_allocator());
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 130


 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		(__old_start, __position.base(),
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		 __new_start, _M_get_Tp_allocator());
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++__new_finish;
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		(__position.base(), __old_finish,
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		 __new_finish, _M_get_Tp_allocator());
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       __catch(...)
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (!__new_finish)
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::destroy(this->_M_impl,
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before);
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_deallocate(__new_start, __len);
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __throw_exception_again;
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_REINIT;
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_deallocate(__old_start,
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    this->_M_impl._M_end_of_storage - __old_start);
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_finish = __new_finish;
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_fill_insert(iterator __position, size_type __n, const value_type& __x)
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n != 0)
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (size_type(this->_M_impl._M_end_of_storage
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			- this->_M_impl._M_finish) >= __n)
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      value_type __x_copy = __x;
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Temporary_value __tmp(this, __x);
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      value_type& __x_copy = __tmp._M_val();
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      const size_type __elems_after = end() - __position;
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __old_finish(this->_M_impl._M_finish);
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      if (__elems_after > __n)
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 131


 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::__uninitialized_move_a(this->_M_impl._M_finish - __n,
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      this->_M_impl._M_finish,
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      this->_M_impl._M_finish,
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      _M_get_Tp_allocator());
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish += __n;
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __old_finish - __n, __old_finish);
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::fill(__position.base(), __position.base() + __n,
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    __x_copy);
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      else
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish =
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						  __n - __elems_after,
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						  __x_copy,
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						  _M_get_Tp_allocator());
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_ASAN_ANNOTATE_GREW(__n - __elems_after);
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::__uninitialized_move_a(__position.base(), __old_finish,
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      this->_M_impl._M_finish,
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      _M_get_Tp_allocator());
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish += __elems_after;
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_ASAN_ANNOTATE_GREW(__elems_after);
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::fill(__position.base(), __old_finish, __x_copy);
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      const size_type __len =
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_M_check_len(__n, "vector::_M_fill_insert");
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      const size_type __elems_before = __position - begin();
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __new_start(this->_M_allocate(__len));
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __new_finish(__new_start);
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __try
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  // See _M_realloc_insert above.
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::__uninitialized_fill_n_a(__new_start + __elems_before,
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						__n, __x,
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						_M_get_Tp_allocator());
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __new_finish = pointer();
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __new_finish
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    = std::__uninitialized_move_if_noexcept_a
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    (this->_M_impl._M_start, __position.base(),
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		     __new_start, _M_get_Tp_allocator());
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __new_finish += __n;
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __new_finish
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    = std::__uninitialized_move_if_noexcept_a
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    (__position.base(), this->_M_impl._M_finish,
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		     __new_finish, _M_get_Tp_allocator());
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 132


 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __catch(...)
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  if (!__new_finish)
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::_Destroy(__new_start + __elems_before,
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				  __new_start + __elems_before + __n,
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				  _M_get_Tp_allocator());
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  else
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::_Destroy(__new_start, __new_finish,
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				  _M_get_Tp_allocator());
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _M_deallocate(__new_start, __len);
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __throw_exception_again;
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_REINIT;
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    this->_M_impl._M_end_of_storage
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    - this->_M_impl._M_start);
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_start = __new_start;
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_finish = __new_finish;
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_end_of_storage = __new_start + __len;
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 2275              		.loc 26 611 5 is_stmt 1 view .LVU570
 2276              	.LBB1009:
 2277              	.LBB1010:
 2278              	.LBB1011:
 2279              	.LBI1011:
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_default_append(__new_size - size());
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 133


 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       shrink_to_fit()
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_shrink_to_fit(); }
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns the total number of elements that the %vector can
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  hold before needing to allocate more memory.
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 - this->_M_impl._M_start); }
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  equal end().)
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _GLIBCXX_NODISCARD bool
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return begin() == end(); }
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *          elements.
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements required.
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function attempts to reserve enough memory for the
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number requested is more than max_size(), length_error is
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  thrown.
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 134


1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The advantage of this function is that if optimal code is a
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  necessity and the user can determine the number of elements
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that will be required, the user can reserve the memory in
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and copying of %vector data.
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reserve(size_type __n);
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // element access
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Safety check used only from at().
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_range_check(size_type __n) const
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n >= this->size())
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu) >= this->size() "
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu)"),
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				   __n, this->size());
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 135


1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n)
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n) const
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the first
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 136


1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the last
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element of the %vector.
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // data access
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp*
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp*
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.3] modifiers
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Add data to the end of the %vector.
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be added.
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation.  The function creates an
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element at the end of the %vector and assigns the given data
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  done in constant time if the %vector has preallocated space
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  available.
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(const value_type& __x)
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 137


1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     __x);
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    ++this->_M_impl._M_finish;
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_realloc_insert(end(), __x);
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(value_type&& __x)
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201402L
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	reference
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace_back(_Args&&... __args);
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Removes last element.
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that no data is returned, and if the last element's
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  called.
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	--this->_M_impl._M_finish;
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __args  Arguments.
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert an object of type T constructed
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and if it is frequently used the user should consider using
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::list.
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 138


1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace(const_iterator __position, _Args&&... __args)
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ return _M_emplace_aux(__position, std::forward<_Args>(__args)...); }
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, const value_type& __x);
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__x)); }
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  specified by @a position.
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 139


1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	auto __offset = __position - cbegin();
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(begin() + __offset, __l.begin(), __l.end(),
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			std::random_access_iterator_tag());
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	difference_type __offset = __position - cbegin();
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 140


1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(const_iterator __position, _InputIterator __first,
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     __first, __last, __false_type());
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  return begin() + __offset;
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(iterator __position, _InputIterator __first,
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove element at given position.
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the element at the given position and thus
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 141


1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  shorten the %vector by one.
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointer is the user's responsibility.
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __position)
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __position)
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__position); }
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove a range of elements.
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *                  erased.
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *           prior to erasing (or end()).
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the elements in the range
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the elements, and that if the elements themselves are
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __beg = begin();
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __cbeg = cbegin();
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __first, iterator __last)
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__first, __last); }
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Swaps data with another %vector.
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 142


1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocators are swapped depends on the allocator traits.
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_assert(_Alloc_traits::propagate_on_container_swap::value
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 || _M_get_Tp_allocator() == __x._M_get_Tp_allocator());
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				  __x._M_get_Tp_allocator());
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the user's responsibility.
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_allocate_and_copy(size_type __n,
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      return __result;
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __catch(...)
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _M_deallocate(__result, __n);
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __throw_exception_again;
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal constructor functions follow.
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 143


1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(_S_check_init_len(
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		static_cast<size_type>(__n), _M_get_Tp_allocator()));
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			       __false_type)
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_InputIterator __first, _InputIterator __last,
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::input_iterator_tag)
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try {
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    for (; __first != __last; ++__first)
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      emplace_back(*__first);
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      push_back(*__first);
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  } __catch(...) {
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    clear();
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __throw_exception_again;
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					this->_M_impl._M_start,
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 144


1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // vector(n,value,a) constructor.
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the vector(n) constructor.
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_initialize(size_type __n)
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					   _M_get_Tp_allocator());
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // assignment work for the range versions.
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_assign(__n, __val); }
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __false_type)
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::input_iterator_tag);
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::forward_iterator_tag);
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by assign(n,t), and the range assign when it turns out
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // to be the same thing.
1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 145


1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal insert functions follow.
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __true_type)
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_insert(__pos, __n, __val); }
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _InputIterator __first,
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   _InputIterator __last, __false_type)
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_insert(__pos, __first, __last,
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  std::__iterator_category(__first));
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _InputIterator __first,
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_InputIterator __last, std::input_iterator_tag);
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _ForwardIterator __first,
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // the same thing.
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by resize(n).
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_append(size_type __n);
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       bool
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_shrink_to_fit();
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x)
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_aux(iterator __position, const value_type& __x);
1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_realloc_insert(iterator __position, const value_type& __x);
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // A value_type object constructed with _Alloc_traits::construct()
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 146


1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // and destroyed with _Alloc_traits::destroy().
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Temporary_value
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename... _Args>
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  explicit
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Temporary_value(vector* __vec, _Args&&... __args) : _M_this(__vec)
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(_M_this->_M_impl, _M_ptr(),
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     std::forward<_Args>(__args)...);
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	~_Temporary_value()
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _Alloc_traits::destroy(_M_this->_M_impl, _M_ptr()); }
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	value_type&
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_val() { return *_M_ptr(); }
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       private:
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Tp*
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_ptr() { return reinterpret_cast<_Tp*>(&__buf); }
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector* _M_this;
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typename aligned_storage<sizeof(_Tp), alignof(_Tp)>::type __buf;
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x) and other functions when insertion needs to
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // reallocate or move existing elements. _Arg is either _Tp& or _Tp.
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Arg>
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_aux(iterator __position, _Arg&& __arg);
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_realloc_insert(iterator __position, _Args&&... __args);
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Either move-construct at the end, or forward to _M_insert_aux.
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_rval(const_iterator __position, value_type&& __v);
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Try to emplace at the end, otherwise forward to _M_insert_aux.
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_emplace_aux(const_iterator __position, _Args&&... __args);
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Emplacing an rvalue of the correct type can use _M_insert_rval.
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_emplace_aux(const_iterator __position, value_type&& __v)
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__v)); }
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by _M_fill_insert, _M_insert_aux etc.
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_check_len(size_type __n, const char* __s) const
 2280              		.loc 19 1756 7 view .LVU571
 2281              	.LBB1012:
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (max_size() - size() < __n)
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 147


 2282              		.loc 19 1758 2 is_stmt 0 view .LVU572
 2283 0030 B2F1005F 		cmp	r2, #536870912
 2284 0034 61D2     		bcs	.L91
 2285              	.LVL103:
 2286              		.loc 19 1758 2 view .LVU573
 2287              	.LBE1012:
 2288              	.LBE1011:
 2289              	.LBB1014:
 2290              	.LBI1014:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2291              		.loc 19 343 7 is_stmt 1 view .LVU574
 2292              	.LBB1015:
 2293              	.LBB1016:
 2294              	.LBI1016:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 2295              		.loc 20 459 7 view .LVU575
 2296              	.LBB1017:
 2297              	.LBI1017:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2298              		.loc 21 103 7 view .LVU576
 2299              	.LBB1018:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2300              		.loc 21 115 41 is_stmt 0 view .LVU577
 2301 0036 4FEA8209 		lsl	r9, r2, #2
 2302 003a 0446     		mov	r4, r0
 2303 003c 013E     		subs	r6, r6, #1
 2304 003e 8A46     		mov	r10, r1
 2305 0040 4846     		mov	r0, r9
 2306              	.LVL104:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2307              		.loc 21 115 41 view .LVU578
 2308 0042 314F     		ldr	r7, .L94+8
 2309 0044 FFF7FEFF 		bl	_Znwj
 2310              	.LVL105:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2311              		.loc 21 115 41 view .LVU579
 2312              	.LBE1018:
 2313              	.LBE1017:
 2314              	.LBE1016:
 2315              	.LBE1015:
 2316              	.LBE1014:
 2317              	.LBB1023:
 2318              	.LBB1024:
 2319              	.LBB1025:
 2320              	.LBB1026:
 2321              	.LBB1027:
 2322              	.LBB1028:
 2323              	.LBB1029:
 2324              	.LBB1030:
 2325              	.LBB1031:
 2326              	.LBB1032:
 2327              	.LBB1033:
 2328              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_algoba
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** //
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 148


   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 149


  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <debug/debug.h>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <type_traits>
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus > 201703L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <compare>
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** {
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /*
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    */
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline int
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return 0;
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       else
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _BoolType>
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 150


 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    _ValueType1;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__a = *__b;
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__b = __tmp;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap<true>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  swap(*__a, *__b);
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif // C++03
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   Nothing.
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  iterators themselves.
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType1;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType2;
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType2>)
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType1>)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType1;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType2;
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 151


 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // 187. iter_swap underspecified
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       swap(*__a, *__b);
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The ranges must not overlap.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _ForwardIterator2
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first2;
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 152


 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__b < __a)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return  __a < __b ? __b : __a;
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__a < __b)
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__b, __a))
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 153


 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__a, __b))
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_base(_Iterator __it)
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __it; }
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _From, typename _To>
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _From
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __res; }
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // a for loop with an explicit count.
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 154


 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = *__first;
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Category>
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, _Category>
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = std::move(*__first);
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = *__first;
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = std::move(*__first);
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 155


 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove>
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _Tp>
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _Tp*
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_move_assignable<_Tp>,
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  // trivial types can have deleted assignment
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT>
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct char_traits;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class istreambuf_iterator;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class ostreambuf_iterator;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				    _CharT*>::__type
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 156


 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return std::__copy_move<_IsMove, false, _Category>::
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  __copy_m(__first, __last, __result);
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct _Deque_iterator;
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _OI);
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II __first, _II __last, _OI __result)
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__niter_wrap(__result,
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__last),
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__result)));
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 157


 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  _OI);
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II, _II,
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result + (last - first)
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  within [first,last).
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_a<__is_move_iterator<_II>::__value>
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 158


 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result + (last - first)
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  within [first,last).
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_a<true>(std::__miter_base(__first),
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				      std::__miter_base(__last), __result);
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _BI2
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  while (__first != __last)
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = *--__last;
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Category>
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _BI2
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 159


 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  while (__first != __last)
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = std::move(*--__last);
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _BI2
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __n = __last - __first;
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __n > 0; --__n)
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = *--__last;
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _BI2
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __n = __last - __first;
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __n > 0; --__n)
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = std::move(*--__last);
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove>
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _Tp>
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _Tp*
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_move_assignable<_Tp>,
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  // trivial types can have deleted assignment
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 160


 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result - _Num;
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _BI2
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return std::__copy_move_backward<_IsMove, false, _Category>::
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  __copy_move_b(__first, __last, __result);
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_backward<_IsMove,
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				       __memcpyable<_BI2, _BI1>::__value,
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				       _Category>::__copy_move_b(__first,
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 								 __last,
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 								 __result);
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _BI2
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			    _OI);
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a1(
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a1(_II, _II,
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a(_II __first, _II __last, _OI __result)
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 161


 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__niter_wrap(__result,
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_backward_a1<_IsMove>
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   std::__niter_base(__result)));
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a(
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		_OI);
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a(_II, _II,
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a(
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result - (last - first)
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _BI1, typename _BI2>
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _BI2
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 162


 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_backward_a<__is_move_iterator<_BI1>::__value>
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result - (last - first)
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _BI1, typename _BI2>
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _BI2
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_backward_a<true>(std::__miter_base(__first),
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					       std::__miter_base(__last),
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					       __result);
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline typename
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      const _Tp& __value)
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 163


 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first != __last; ++__first)
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	*__first = __value;
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline typename
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      const _Tp& __value)
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       const _Tp __tmp = __value;
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first != __last; ++__first)
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	*__first = __tmp;
 2329              		.loc 27 873 11 view .LVU580
 2330 0048 4A46     		mov	r2, r9
 2331 004a 0021     		movs	r1, #0
 2332              	.LBE1033:
 2333              	.LBE1032:
 2334              	.LBE1031:
 2335              	.LBE1030:
 2336              	.LBE1029:
 2337              	.LBE1028:
 2338              	.LBE1027:
 2339              	.LBE1026:
 2340              	.LBE1025:
 2341              	.LBE1024:
 2342              	.LBE1023:
 2343              	.LBB1059:
 2344              	.LBB1022:
 2345              	.LBB1021:
 2346              	.LBB1020:
 2347              	.LBB1019:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2348              		.loc 21 115 41 view .LVU581
 2349 004c 8046     		mov	r8, r0
 2350              	.LVL106:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2351              		.loc 21 115 41 view .LVU582
 2352              	.LBE1019:
 2353              	.LBE1020:
 2354              	.LBE1021:
 2355              	.LBE1022:
 2356              	.LBE1059:
 2357              	.LBB1060:
 2358              	.LBI1023:
 2359              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_uninit
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 164


  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus > 201402L
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <bits/stl_pair.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <type_traits>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <ext/alloc_traits.h>
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 165


  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** {
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /** @addtogroup memory
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @{
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    */
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __first != __last; ++__first, (void)++__cur)
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy<true>
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 166


 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType1;
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::copy
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType2, decltype(*__first)>::value,
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from value type of input range");
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::copy
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::copy:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill<true>
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 167


 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       const _Tp& __x)
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 168


 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 169


 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  any of the POD optimizations.
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __first != __last; ++__first, (void)++__cur)
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __last, __result); }
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_a(_InputIterator __first, _InputIterator __last,
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy_a(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 _GLIBCXX_MAKE_MOVE_ITERATOR(__last),
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 __result, __alloc);
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_if_noexcept_a(_InputIterator __first,
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _InputIterator __last,
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _ForwardIterator __result,
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _Allocator& __alloc)
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy_a
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Allocator>
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     void
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 170


 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   const _Tp& __x, _Allocator& __alloc)
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Tp2>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   const _Tp& __x, allocator<_Tp2>&)
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { std::uninitialized_fill(__first, __last, __x); }
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			     const _Tp& __x, _Allocator& __alloc)
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Tp2>
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			     const _Tp& __x, allocator<_Tp2>&)
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_fill_n(__first, __n, __x); }
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: __uninitialized_copy_move, __uninitialized_move_copy,
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_fill_move, __uninitialized_move_fill.
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // All of these algorithms take a user-supplied allocator, which is used
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // for construction and destruction.
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 171


 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_copy_move
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Copies [first1, last1) into [result, result + (last1 - first1)), and
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  move [first2, last2) into
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_move(_InputIterator1 __first1,
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator1 __last1,
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __first2,
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __last2,
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result,
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_copy_a(__first1, __last1,
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __result,
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __alloc);
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first2, __last2, __mid, __alloc);
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_move_copy
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Moves [first1, last1) into [result, result + (last1 - first1)), and
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  copies [first2, last2) into
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_copy(_InputIterator1 __first1,
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator1 __last1,
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __first2,
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __last2,
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result,
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_move_a(__first1, __last1,
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __result,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __alloc);
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_copy_a(__first2, __last2, __mid, __alloc);
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_fill_move
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 172


 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [result, mid) with x, and moves [first, last) into
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [mid, mid + (last - first)).
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _InputIterator,
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid,
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      const _Tp& __x, _InputIterator __first,
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator __last, _Allocator& __alloc)
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill_a(__result, __mid, __x, __alloc);
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first, __last, __mid, __alloc);
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_move_fill
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Moves [first1, last1) into [first2, first2 + (last1 - first1)), and
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  fills [first2 + (last1 - first1), last2) with x.
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp,
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1,
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __first2,
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last2, const _Tp& __x,
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid2 = std::__uninitialized_move_a(__first1, __last1,
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							    __first2,
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							    __alloc);
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::__uninitialized_fill_a(__mid2, __last2, __x, __alloc);
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first2, __mid2, __alloc);
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: __uninitialized_default, __uninitialized_default_n,
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_a, __uninitialized_default_n_a.
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_1
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 173


 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_1<true>
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    _ValueType;
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::fill(__first, __last, _ValueType());
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_n_1
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_n_1<true>
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 174


 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    _ValueType;
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::fill_n(__first, __n, _ValueType());
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed value_types(s).
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator>
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default(_ForwardIterator __first,
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			    _ForwardIterator __last)
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // trivial types can have deleted assignment
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_default_1<__is_trivial(_ValueType)
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				     && __assignable>::
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default(__first, __last);
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default constructed value_type(s).
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size>
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n(_ForwardIterator __first, _Size __n)
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // trivial types can have deleted assignment
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_n_1<__is_trivial(_ValueType)
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_n(__first, __n);
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_a
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed value_types(s), constructed with the allocator alloc.
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Allocator>
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     void
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_a(_ForwardIterator __first,
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last,
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 175


 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur));
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_a(_ForwardIterator __first,
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last,
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      allocator<_Tp>&)
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { std::__uninitialized_default(__first, __last); }
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n_a
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default constructed value_types(s),
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed with the allocator alloc.
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Allocator>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				_Allocator& __alloc)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur));
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
 2360              		.loc 28 683 5 is_stmt 1 view .LVU583
 2361              	.LBB1056:
 2362              	.LBI1024:
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 2363              		.loc 28 614 5 view .LVU584
 2364              	.LBB1053:
 2365              	.LBB1050:
 2366              	.LBI1026:
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 2367              		.loc 28 583 9 view .LVU585
 2368              	.LBB1047:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 176


 2369              	.LBB1044:
 2370              	.LBI1028:
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Specialization: for char types we can use memset.
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline typename
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       const _Tp __tmp = __c;
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cpp_lib_is_constant_evaluated
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__first)
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__first = __tmp;
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return;
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (const size_t __len = __last - __first)
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Ite, typename _Cont, typename _Tp>
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a1(::__gnu_cxx::__normal_iterator<_Ite, _Cont> __first,
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ::__gnu_cxx::__normal_iterator<_Ite, _Cont> __last,
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      const _Tp& __value)
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { std::__fill_a1(__first.base(), __last.base(), __value); }
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _VTp>
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     void
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a1(const _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>&,
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      const _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>&,
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      const _VTp&);
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _FIte, typename _Tp>
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Ite, typename _Seq, typename _Cat, typename _Tp>
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     void
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     const _Tp&);
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Fills the range [first,last) with copies of value.
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  A forward iterator.
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   A forward iterator.
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   Nothing.
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 177


 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  to @c memset or @c wmemset.
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator>)
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       std::__fill_a(__first, __last, __value);
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Used by fill_n, generate_n, etc. to convert _Size to an integral type:
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR int
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(int __n) { return __n; }
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR unsigned
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(unsigned __n) { return __n; }
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR long
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(long __n) { return __n; }
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR unsigned long
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(unsigned long __n) { return __n; }
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR long long
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(long long __n) { return __n; }
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR unsigned long long
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(unsigned long long __n) { return __n; }
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if defined(__GLIBCXX_TYPE_INT_N_0)
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_0
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(__GLIBCXX_TYPE_INT_N_0 __n) { return __n; }
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR unsigned __GLIBCXX_TYPE_INT_N_0
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(unsigned __GLIBCXX_TYPE_INT_N_0 __n) { return __n; }
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if defined(__GLIBCXX_TYPE_INT_N_1)
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_1
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(__GLIBCXX_TYPE_INT_N_1 __n) { return __n; }
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR unsigned __GLIBCXX_TYPE_INT_N_1
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(unsigned __GLIBCXX_TYPE_INT_N_1 __n) { return __n; }
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if defined(__GLIBCXX_TYPE_INT_N_2)
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_2
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(__GLIBCXX_TYPE_INT_N_2 __n) { return __n; }
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR unsigned __GLIBCXX_TYPE_INT_N_2
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(unsigned __GLIBCXX_TYPE_INT_N_2 __n) { return __n; }
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if defined(__GLIBCXX_TYPE_INT_N_3)
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR unsigned __GLIBCXX_TYPE_INT_N_3
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(__GLIBCXX_TYPE_INT_N_3 __n) { return __n; }
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR __GLIBCXX_TYPE_INT_N_3
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(unsigned __GLIBCXX_TYPE_INT_N_3 __n) { return __n; }
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 178


 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR long long
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(float __n) { return __n; }
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR long long
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(double __n) { return __n; }
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR long long
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(long double __n) { return __n; }
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if !defined(__STRICT_ANSI__) && defined(_GLIBCXX_USE_FLOAT128)
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR long long
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   __size_to_integer(__float128 __n) { return __n; }
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline typename
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_n_a1(_OutputIterator __first, _Size __n, const _Tp& __value)
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __n > 0; --__n, (void) ++__first)
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	*__first = __value;
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first;
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline typename
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_n_a1(_OutputIterator __first, _Size __n, const _Tp& __value)
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       const _Tp __tmp = __value;
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __n > 0; --__n, (void) ++__first)
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	*__first = __tmp;
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first;
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Ite, typename _Seq, typename _Cat, typename _Size,
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Tp>
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_n_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>& __first,
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	       _Size __n, const _Tp& __value,
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	       std::input_iterator_tag);
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OutputIterator
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	       std::output_iterator_tag)
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       static_assert(is_integral<_Size>{}, "fill_n must pass integral size");
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __fill_n_a1(__first, __n, __value);
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OutputIterator
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 179


1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	       std::input_iterator_tag)
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       static_assert(is_integral<_Size>{}, "fill_n must pass integral size");
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __fill_n_a1(__first, __n, __value);
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OutputIterator
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	       std::random_access_iterator_tag)
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       static_assert(is_integral<_Size>{}, "fill_n must pass integral size");
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__n <= 0)
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __first;
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_can_increment(__first, __n);
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       std::__fill_a(__first, __first + __n, __value);
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first + __n;
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Fills the range [first,first+n) with copies of value.
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  An output iterator.
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __n      The count of copies to perform.
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The iterator at first+n.
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  to @c memset or @c wmemset.
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  If @p __n is negative, the function does nothing.
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // DR 865. More algorithms that throw away information
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // DR 426. search_n(), fill_n(), and generate_n() with negative n
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _OI, typename _Size, typename _Tp>
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     fill_n(_OI __first, _Size __n, const _Tp& __value)
 2371              		.loc 27 1089 5 view .LVU586
 2372              	.LBE1044:
 2373              	.LBE1047:
 2374              	.LBE1050:
 2375              	.LBE1053:
 2376              	.LBE1056:
 2377              	.LBE1060:
 2378              	.LBE1010:
 2379              	.LBE1009:
 2380              	.LBE1008:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 180


 2381              	.LBE1074:
 2382              	.LBE1105:
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR long
 2383              		.loc 27 951 37 view .LVU587
 2384              	.LBB1106:
 2385              	.LBB1075:
 2386              	.LBB1070:
 2387              	.LBB1067:
 2388              	.LBB1064:
 2389              	.LBB1061:
 2390              	.LBB1057:
 2391              	.LBB1054:
 2392              	.LBB1051:
 2393              	.LBB1048:
 2394              	.LBB1045:
 2395              	.LBB1042:
 2396              	.LBI1029:
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	       std::random_access_iterator_tag)
 2397              		.loc 27 1054 5 view .LVU588
 2398              	.LBB1040:
 2399              	.LBI1030:
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	       std::random_access_iterator_tag)
 2400              		.loc 27 1054 5 view .LVU589
 2401              	.LBB1038:
 2402              	.LBI1031:
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 2403              		.loc 27 913 5 view .LVU590
 2404              	.LBB1036:
 2405              	.LBI1032:
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      const _Tp& __value)
 2406              		.loc 27 868 5 view .LVU591
 2407              	.LBB1034:
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	*__first = __tmp;
 2408              		.loc 27 872 22 view .LVU592
 2409 004e 7608     		lsrs	r6, r6, #1
 2410              	.LVL107:
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 2411              		.loc 27 873 11 is_stmt 0 view .LVU593
 2412 0050 FFF7FEFF 		bl	memset
 2413              	.LVL108:
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 2414              		.loc 27 873 11 view .LVU594
 2415              	.LBE1034:
 2416              	.LBE1036:
 2417              	.LBE1038:
 2418              	.LBE1040:
 2419              	.LBE1042:
 2420              	.LBE1045:
 2421              	.LBE1048:
 2422              	.LBE1051:
 2423              	.LBE1054:
 2424              	.LBE1057:
 2425              	.LBE1061:
 2426              	.LBE1064:
 2427              	.LBE1067:
 2428              	.LBE1070:
 2429              	.LBE1075:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 181


 2430              	.LBE1106:
  42:src/main.cpp  **** 	//audio
 2431              		.loc 24 42 5 is_stmt 1 view .LVU595
 2432              	.LBB1107:
 2433              	.LBB1076:
 2434              	.LBB1071:
 2435              	.LBB1068:
 2436              	.LBB1065:
 2437              	.LBB1062:
 2438              	.LBB1058:
 2439              	.LBB1055:
 2440              	.LBB1052:
 2441              	.LBB1049:
 2442              	.LBB1046:
 2443              	.LBB1043:
 2444              	.LBB1041:
 2445              	.LBB1039:
 2446              	.LBB1037:
 2447              	.LBB1035:
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 2448              		.loc 27 873 11 is_stmt 0 view .LVU596
 2449 0054 4546     		mov	r5, r8
 2450              	.LBE1035:
 2451              	.LBE1037:
 2452              	.LBE1039:
 2453              	.LBE1041:
 2454              	.LBE1043:
 2455              	.LBE1046:
 2456              	.LBE1049:
 2457              	.LBE1052:
 2458              	.LBE1055:
 2459              	.LBE1058:
 2460              	.LBE1062:
 2461              	.LBE1065:
 2462              	.LBE1068:
 2463              	.LBE1071:
 2464              	.LBE1076:
 2465              	.LBE1107:
  42:src/main.cpp  **** 	//audio
 2466              		.loc 24 42 13 view .LVU597
 2467 0056 FFF7FEFF 		bl	_Z8Controlsv
 2468              	.LVL109:
  44:src/main.cpp  ****     {
 2469              		.loc 24 44 5 is_stmt 1 view .LVU598
 2470              	.LBB1108:
  44:src/main.cpp  ****     {
 2471              		.loc 24 44 25 view .LVU599
 2472 005a 04F10803 		add	r3, r4, #8
 2473 005e 03EBC606 		add	r6, r3, r6, lsl #3
 2474 0062 20E0     		b	.L86
 2475              	.LVL110:
 2476              	.L93:
  48:src/main.cpp  ****     	{
 2477              		.loc 24 48 3 is_stmt 0 view .LVU600
 2478 0064 013B     		subs	r3, r3, #1
 2479 0066 012B     		cmp	r3, #1
 2480 0068 2FD8     		bhi	.L84
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 182


  52:src/main.cpp  ****             default: outl = outr = 0;
 2481              		.loc 24 52 4 is_stmt 1 view .LVU601
  52:src/main.cpp  ****             default: outl = outr = 0;
 2482              		.loc 24 52 15 view .LVU602
  52:src/main.cpp  ****             default: outl = outr = 0;
 2483              		.loc 24 52 29 is_stmt 0 view .LVU603
 2484 006a F0EE680A 		vmov.f32	s1, s17
 2485 006e 01A9     		add	r1, sp, #4
 2486 0070 B0EE480A 		vmov.f32	s0, s16
 2487 0074 6846     		mov	r0, sp
 2488 0076 FFF7FEFF 		bl	_Z14GetDelaySampleRfS_ff
 2489              	.LVL111:
  52:src/main.cpp  ****             default: outl = outr = 0;
 2490              		.loc 24 52 53 is_stmt 1 view .LVU604
  57:src/main.cpp  **** 
 2491              		.loc 24 57 16 is_stmt 0 view .LVU605
 2492 007a 009A     		ldr	r2, [sp]	@ float
  60:src/main.cpp  ****     }
 2493              		.loc 24 60 20 view .LVU606
 2494 007c 019B     		ldr	r3, [sp, #4]	@ float
 2495              	.L85:
  55:src/main.cpp  ****         // left out
 2496              		.loc 24 55 3 is_stmt 1 discriminator 2 view .LVU607
  55:src/main.cpp  ****         // left out
 2497              		.loc 24 55 19 is_stmt 0 discriminator 2 view .LVU608
 2498 007e 38EE288A 		vadd.f32	s16, s16, s17
 2499              	.LVL112:
  44:src/main.cpp  ****     {
 2500              		.loc 24 44 25 discriminator 2 view .LVU609
 2501 0082 0834     		adds	r4, r4, #8
  55:src/main.cpp  ****         // left out
 2502              		.loc 24 55 26 discriminator 2 view .LVU610
 2503 0084 F6EE000A 		vmov.f32	s1, #5.0e-1
  60:src/main.cpp  ****     }
 2504              		.loc 24 60 20 discriminator 2 view .LVU611
 2505 0088 CAF80430 		str	r3, [r10, #4]	@ float
  44:src/main.cpp  ****     {
 2506              		.loc 24 44 25 discriminator 2 view .LVU612
 2507 008c A642     		cmp	r6, r4
  55:src/main.cpp  ****         // left out
 2508              		.loc 24 55 12 discriminator 2 view .LVU613
 2509 008e 2B46     		mov	r3, r5
  57:src/main.cpp  **** 
 2510              		.loc 24 57 16 discriminator 2 view .LVU614
 2511 0090 CAF80020 		str	r2, [r10]	@ float
  55:src/main.cpp  ****         // left out
 2512              		.loc 24 55 12 discriminator 2 view .LVU615
 2513 0094 05F10805 		add	r5, r5, #8
  55:src/main.cpp  ****         // left out
 2514              		.loc 24 55 26 discriminator 2 view .LVU616
 2515 0098 28EE208A 		vmul.f32	s16, s16, s1
  44:src/main.cpp  ****     {
 2516              		.loc 24 44 25 discriminator 2 view .LVU617
 2517 009c 0AF1080A 		add	r10, r10, #8
  55:src/main.cpp  ****         // left out
 2518              		.loc 24 55 12 discriminator 2 view .LVU618
 2519 00a0 83ED008A 		vstr.32	s16, [r3]
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 183


  57:src/main.cpp  **** 
 2520              		.loc 24 57 9 is_stmt 1 discriminator 2 view .LVU619
  60:src/main.cpp  ****     }
 2521              		.loc 24 60 9 discriminator 2 view .LVU620
  44:src/main.cpp  ****     {
 2522              		.loc 24 44 5 discriminator 2 view .LVU621
  44:src/main.cpp  ****     {
 2523              		.loc 24 44 25 discriminator 2 view .LVU622
 2524 00a4 16D0     		beq	.L92
 2525              	.LVL113:
 2526              	.L86:
  46:src/main.cpp  ****         inr = in[i + 1];
 2527              		.loc 24 46 9 view .LVU623
  48:src/main.cpp  ****     	{
 2528              		.loc 24 48 3 is_stmt 0 view .LVU624
 2529 00a6 3B68     		ldr	r3, [r7]
  46:src/main.cpp  ****         inr = in[i + 1];
 2530              		.loc 24 46 13 view .LVU625
 2531 00a8 94ED008A 		vldr.32	s16, [r4]
 2532              	.LVL114:
  47:src/main.cpp  **** 		switch(mode)
 2533              		.loc 24 47 9 is_stmt 1 view .LVU626
  47:src/main.cpp  **** 		switch(mode)
 2534              		.loc 24 47 13 is_stmt 0 view .LVU627
 2535 00ac D4ED018A 		vldr.32	s17, [r4, #4]
 2536              	.LVL115:
  48:src/main.cpp  ****     	{
 2537              		.loc 24 48 3 is_stmt 1 view .LVU628
 2538 00b0 002B     		cmp	r3, #0
 2539 00b2 D7D1     		bne	.L93
  50:src/main.cpp  ****             case DEL1: GetDelaySample(outl, outr, inl, inr); break;
 2540              		.loc 24 50 13 view .LVU629
  50:src/main.cpp  ****             case DEL1: GetDelaySample(outl, outr, inl, inr); break;
 2541              		.loc 24 50 23 view .LVU630
  50:src/main.cpp  ****             case DEL1: GetDelaySample(outl, outr, inl, inr); break;
 2542              		.loc 24 50 38 is_stmt 0 view .LVU631
 2543 00b4 F0EE680A 		vmov.f32	s1, s17
 2544 00b8 01A9     		add	r1, sp, #4
 2545 00ba B0EE480A 		vmov.f32	s0, s16
 2546 00be 6846     		mov	r0, sp
 2547 00c0 FFF7FEFF 		bl	_Z15GetReverbSampleRfS_ff
 2548              	.LVL116:
  50:src/main.cpp  ****             case DEL1: GetDelaySample(outl, outr, inl, inr); break;
 2549              		.loc 24 50 62 is_stmt 1 view .LVU632
  57:src/main.cpp  **** 
 2550              		.loc 24 57 16 is_stmt 0 view .LVU633
 2551 00c4 009A     		ldr	r2, [sp]	@ float
  60:src/main.cpp  ****     }
 2552              		.loc 24 60 20 view .LVU634
 2553 00c6 019B     		ldr	r3, [sp, #4]	@ float
  50:src/main.cpp  ****             case DEL1: GetDelaySample(outl, outr, inl, inr); break;
 2554              		.loc 24 50 62 view .LVU635
 2555 00c8 D9E7     		b	.L85
 2556              	.L84:
  53:src/main.cpp  ****         }
 2557              		.loc 24 53 13 is_stmt 1 view .LVU636
  53:src/main.cpp  ****         }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 184


 2558              		.loc 24 53 22 view .LVU637
  53:src/main.cpp  ****         }
 2559              		.loc 24 53 34 is_stmt 0 view .LVU638
 2560 00ca 0022     		movs	r2, #0
  53:src/main.cpp  ****         }
 2561              		.loc 24 53 27 view .LVU639
 2562 00cc 1346     		mov	r3, r2	@ float
  53:src/main.cpp  ****         }
 2563              		.loc 24 53 34 view .LVU640
 2564 00ce 0192     		str	r2, [sp, #4]	@ float
  53:src/main.cpp  ****         }
 2565              		.loc 24 53 27 view .LVU641
 2566 00d0 0092     		str	r2, [sp]	@ float
 2567 00d2 D4E7     		b	.L85
 2568              	.LVL117:
 2569              	.L92:
  53:src/main.cpp  ****         }
 2570              		.loc 24 53 27 view .LVU642
 2571              	.LBE1108:
  63:src/main.cpp  ****     currentTempo = ttrack.getTempo();
 2572              		.loc 24 63 2 is_stmt 1 view .LVU643
  63:src/main.cpp  ****     currentTempo = ttrack.getTempo();
 2573              		.loc 24 63 26 is_stmt 0 view .LVU644
 2574 00d4 4146     		mov	r1, r8
 2575 00d6 0A48     		ldr	r0, .L94
 2576 00d8 FFF7FEFF 		bl	_ZN6TTrack17processAudioFrameEPf
 2577              	.LVL118:
  64:src/main.cpp  **** }
 2578              		.loc 24 64 5 is_stmt 1 view .LVU645
  64:src/main.cpp  **** }
 2579              		.loc 24 64 35 is_stmt 0 view .LVU646
 2580 00dc 0848     		ldr	r0, .L94
 2581 00de FFF7FEFF 		bl	_ZN6TTrack8getTempoEv
 2582              	.LVL119:
  64:src/main.cpp  **** }
 2583              		.loc 24 64 18 view .LVU647
 2584 00e2 084B     		ldr	r3, .L94+4
 2585              	.LBB1109:
 2586              	.LBB1101:
 2587              	.LBB1096:
 2588              	.LBB1086:
 2589              	.LBB1087:
 2590              	.LBB1088:
 2591              	.LBB1089:
 2592              	.LBB1090:
 2593              		.loc 21 133 19 view .LVU648
 2594 00e4 4946     		mov	r1, r9
 2595 00e6 4046     		mov	r0, r8
 2596              	.LBE1090:
 2597              	.LBE1089:
 2598              	.LBE1088:
 2599              	.LBE1087:
 2600              	.LBE1086:
 2601              	.LBE1096:
 2602              	.LBE1101:
 2603              	.LBE1109:
  64:src/main.cpp  **** }
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 185


 2604              		.loc 24 64 18 view .LVU649
 2605 00e8 83ED000A 		vstr.32	s0, [r3]
 2606              	.LVL120:
 2607              	.LBB1110:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2608              		.loc 19 678 7 is_stmt 1 view .LVU650
 2609              	.LBB1102:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2610              		.loc 19 276 7 view .LVU651
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2611              		.loc 19 276 7 is_stmt 0 view .LVU652
 2612              	.LBE1102:
 2613              	.LBB1103:
 2614              		.loc 20 735 5 is_stmt 1 view .LVU653
 2615              		.loc 20 735 5 is_stmt 0 view .LVU654
 2616              	.LBE1103:
 2617              	.LBB1104:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2618              		.loc 19 333 7 is_stmt 1 view .LVU655
 2619              	.LBB1097:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2620              		.loc 19 350 7 view .LVU656
 2621              	.LBB1095:
 2622              	.LBB1094:
 2623              	.LBI1087:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2624              		.loc 20 491 7 view .LVU657
 2625              	.LBB1093:
 2626              	.LBB1092:
 2627              	.LBI1089:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2628              		.loc 21 120 7 view .LVU658
 2629              	.LBB1091:
 2630              		.loc 21 133 19 is_stmt 0 view .LVU659
 2631 00ec FFF7FEFF 		bl	_ZdlPvj
 2632              	.LVL121:
 2633              		.loc 21 133 19 view .LVU660
 2634              	.LBE1091:
 2635              	.LBE1092:
 2636              	.LBE1093:
 2637              	.LBE1094:
 2638              	.LBE1095:
 2639              	.LBE1097:
 2640              	.LBB1098:
 2641              	.LBI1098:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2642              		.loc 19 128 14 is_stmt 1 view .LVU661
 2643              	.LBB1099:
 2644              	.LBI1099:
 2645              		.loc 22 162 7 view .LVU662
 2646              	.LBB1100:
 2647              	.LBI1100:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2648              		.loc 21 89 7 view .LVU663
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2649              		.loc 21 89 7 is_stmt 0 view .LVU664
 2650              	.LBE1100:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 186


 2651              	.LBE1099:
 2652              	.LBE1098:
 2653              	.LBE1104:
 2654              	.LBE1110:
  65:src/main.cpp  **** 
 2655              		.loc 24 65 1 view .LVU665
 2656 00f0 02B0     		add	sp, sp, #8
 2657              		.cfi_remember_state
 2658              		.cfi_def_cfa_offset 40
 2659              		@ sp needed
 2660 00f2 BDEC028B 		vldm	sp!, {d8}
 2661              		.cfi_restore 80
 2662              		.cfi_restore 81
 2663              		.cfi_def_cfa_offset 32
 2664 00f6 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2665              	.LVL122:
 2666              	.L91:
 2667              		.cfi_restore_state
 2668              	.LBB1111:
 2669              	.LBB1077:
 2670              	.LBB1072:
 2671              	.LBB1069:
 2672              	.LBB1066:
 2673              	.LBB1063:
 2674              	.LBB1013:
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
 2675              		.loc 19 1759 24 view .LVU666
 2676 00fa 0448     		ldr	r0, .L94+12
 2677              	.LVL123:
 2678              		.loc 19 1759 24 view .LVU667
 2679 00fc FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 2680              	.LVL124:
 2681              	.L95:
 2682              		.loc 19 1759 24 view .LVU668
 2683              		.align	2
 2684              	.L94:
 2685 0100 00000000 		.word	_ZL6ttrack
 2686 0104 00000000 		.word	.LANCHOR11
 2687 0108 00000000 		.word	.LANCHOR8
 2688 010c 00000000 		.word	.LC2
 2689              	.LBE1013:
 2690              	.LBE1063:
 2691              	.LBE1066:
 2692              	.LBE1069:
 2693              	.LBE1072:
 2694              	.LBE1077:
 2695              	.LBE1111:
 2696              		.cfi_endproc
 2697              	.LFE7169:
 2699              		.section	.text.startup._GLOBAL__sub_I_mode,"ax",%progbits
 2700              		.align	1
 2701              		.p2align 2,,3
 2702              		.syntax unified
 2703              		.thumb
 2704              		.thumb_func
 2705              		.fpu fpv5-d16
 2707              	_GLOBAL__sub_I_mode:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 187


 2708              	.LFB7938:
 2709              		.loc 24 203 1 is_stmt 1 view -0
 2710              		.cfi_startproc
 2711              		@ args = 0, pretend = 0, frame = 0
 2712              		@ frame_needed = 0, uses_anonymous_args = 0
 2713              	.LBB1201:
 2714              	.LBI1201:
 2715              		.loc 24 203 1 view .LVU670
 2716              	.LVL125:
 2717              	.LBB1202:
 2718              	.LBB1203:
 2719              	.LBI1203:
  35:../DaisyExamples/libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
 2720              		.loc 6 35 5 view .LVU671
 2721              	.LBB1204:
 2722              	.LBB1205:
 2723              	.LBI1205:
  21:../DaisyExamples/libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 2724              		.loc 12 21 5 view .LVU672
 2725              	.LBB1206:
 2726              	.LBB1207:
 2727              	.LBI1207:
 2728              		.file 29 "../DaisyExamples/libDaisy//src/per/qspi.h"
   1:../DaisyExamples/libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../DaisyExamples/libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../DaisyExamples/libDaisy//src/per/qspi.h **** 
   4:../DaisyExamples/libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../DaisyExamples/libDaisy//src/per/qspi.h **** 
   6:../DaisyExamples/libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../DaisyExamples/libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../DaisyExamples/libDaisy//src/per/qspi.h **** 
   9:../DaisyExamples/libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../DaisyExamples/libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../DaisyExamples/libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../DaisyExamples/libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../DaisyExamples/libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../DaisyExamples/libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../DaisyExamples/libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../DaisyExamples/libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../DaisyExamples/libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  19:../DaisyExamples/libDaisy//src/per/qspi.h **** namespace daisy
  20:../DaisyExamples/libDaisy//src/per/qspi.h **** {
  21:../DaisyExamples/libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../DaisyExamples/libDaisy//src/per/qspi.h **** @{
  23:../DaisyExamples/libDaisy//src/per/qspi.h **** */
  24:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  25:../DaisyExamples/libDaisy//src/per/qspi.h **** /** 
  26:../DaisyExamples/libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../DaisyExamples/libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../DaisyExamples/libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../DaisyExamples/libDaisy//src/per/qspi.h **** */
  30:../DaisyExamples/libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../DaisyExamples/libDaisy//src/per/qspi.h **** {
  32:../DaisyExamples/libDaisy//src/per/qspi.h ****   public:
  33:../DaisyExamples/libDaisy//src/per/qspi.h ****     enum Result
  34:../DaisyExamples/libDaisy//src/per/qspi.h ****     {
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 188


  35:../DaisyExamples/libDaisy//src/per/qspi.h ****         OK = 0,
  36:../DaisyExamples/libDaisy//src/per/qspi.h ****         ERR
  37:../DaisyExamples/libDaisy//src/per/qspi.h ****     };
  38:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  39:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../DaisyExamples/libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../DaisyExamples/libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../DaisyExamples/libDaisy//src/per/qspi.h ****          * 
  43:../DaisyExamples/libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../DaisyExamples/libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../DaisyExamples/libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../DaisyExamples/libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../DaisyExamples/libDaisy//src/per/qspi.h ****          */
  48:../DaisyExamples/libDaisy//src/per/qspi.h ****     enum Status
  49:../DaisyExamples/libDaisy//src/per/qspi.h ****     {
  50:../DaisyExamples/libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../DaisyExamples/libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../DaisyExamples/libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../DaisyExamples/libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../DaisyExamples/libDaisy//src/per/qspi.h ****     };
  55:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  56:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../DaisyExamples/libDaisy//src/per/qspi.h ****     struct Config
  58:../DaisyExamples/libDaisy//src/per/qspi.h ****     {
  59:../DaisyExamples/libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../DaisyExamples/libDaisy//src/per/qspi.h ****         enum Device
  61:../DaisyExamples/libDaisy//src/per/qspi.h ****         {
  62:../DaisyExamples/libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../DaisyExamples/libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../DaisyExamples/libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../DaisyExamples/libDaisy//src/per/qspi.h ****         };
  66:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  67:../DaisyExamples/libDaisy//src/per/qspi.h ****         /** 
  68:../DaisyExamples/libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../DaisyExamples/libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../DaisyExamples/libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../DaisyExamples/libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../DaisyExamples/libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
  74:../DaisyExamples/libDaisy//src/per/qspi.h ****         enum Mode
  75:../DaisyExamples/libDaisy//src/per/qspi.h ****         {
  76:../DaisyExamples/libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../DaisyExamples/libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../DaisyExamples/libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../DaisyExamples/libDaisy//src/per/qspi.h ****         };
  80:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  81:../DaisyExamples/libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../DaisyExamples/libDaisy//src/per/qspi.h ****         struct
  83:../DaisyExamples/libDaisy//src/per/qspi.h ****         {
  84:../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../DaisyExamples/libDaisy//src/per/qspi.h ****         } pin_config;
  91:../DaisyExamples/libDaisy//src/per/qspi.h **** 
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 189


  92:../DaisyExamples/libDaisy//src/per/qspi.h ****         Device device;
  93:../DaisyExamples/libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../DaisyExamples/libDaisy//src/per/qspi.h ****     };
  95:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  96:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
  97:../DaisyExamples/libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 101:../DaisyExamples/libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 103:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../DaisyExamples/libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 106:../DaisyExamples/libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../DaisyExamples/libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
 109:../DaisyExamples/libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../DaisyExamples/libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 113:../DaisyExamples/libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 115:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
 116:../DaisyExamples/libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../DaisyExamples/libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 123:../DaisyExamples/libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 125:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
 126:../DaisyExamples/libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 132:../DaisyExamples/libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 134:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
 135:../DaisyExamples/libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../DaisyExamples/libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../DaisyExamples/libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 142:../DaisyExamples/libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 144:../DaisyExamples/libDaisy//src/per/qspi.h ****     /**  
 145:../DaisyExamples/libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../DaisyExamples/libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 190


 149:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 150:../DaisyExamples/libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 152:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../DaisyExamples/libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../DaisyExamples/libDaisy//src/per/qspi.h ****      */
 155:../DaisyExamples/libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 157:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../DaisyExamples/libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../DaisyExamples/libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../DaisyExamples/libDaisy//src/per/qspi.h ****      * 
 161:../DaisyExamples/libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../DaisyExamples/libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../DaisyExamples/libDaisy//src/per/qspi.h ****     */
 164:../DaisyExamples/libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 166:../DaisyExamples/libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 2729              		.loc 29 166 5 view .LVU673
 2730              	.LBB1208:
 2731              	.LBB1209:
 2732              		.loc 29 166 34 is_stmt 0 view .LVU674
 2733 0000 2E48     		ldr	r0, .L98
 2734 0002 0022     		movs	r2, #0
 2735              	.LBE1209:
 2736              	.LBE1208:
 2737              	.LBE1207:
 2738              	.LBE1206:
 2739              	.LBE1205:
 2740              	.LBB1225:
 2741              	.LBB1226:
 2742              	.LBB1227:
 2743              	.LBB1228:
 2744              	.LBB1229:
 2745              	.LBB1230:
 2746              	.LBB1231:
  37:../DaisyExamples/libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 2747              		.loc 7 37 20 view .LVU675
 2748 0004 2E49     		ldr	r1, .L98+4
 2749              	.LBE1231:
 2750              	.LBE1230:
 2751              	.LBE1229:
 2752              	.LBE1228:
 2753              	.LBE1227:
 2754              	.LBE1226:
 2755              	.LBE1225:
 2756              	.LBE1204:
 2757              	.LBE1203:
 2758              	.LBE1202:
 2759              	.LBE1201:
 2760              		.loc 24 203 1 view .LVU676
 2761 0006 38B5     		push	{r3, r4, r5, lr}
 2762              		.cfi_def_cfa_offset 16
 2763              		.cfi_offset 3, -16
 2764              		.cfi_offset 4, -12
 2765              		.cfi_offset 5, -8
 2766              		.cfi_offset 14, -4
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 191


 2767              	.LBB1328:
 2768              	.LBB1326:
 2769              	.LBB1307:
 2770              	.LBB1303:
 2771              	.LBB1278:
 2772              	.LBB1272:
 2773              	.LBB1266:
 2774              	.LBB1250:
 2775              	.LBB1244:
 2776              	.LBB1238:
 2777              	.LBB1232:
  36:../DaisyExamples/libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 2778              		.loc 7 36 20 view .LVU677
 2779 0008 00F51043 		add	r3, r0, #36864
 2780              	.LBE1232:
 2781              	.LBE1238:
 2782              	.LBE1244:
 2783              	.LBE1250:
 2784              	.LBE1266:
 2785              	.LBE1272:
 2786              	.LBE1278:
 2787              	.LBB1279:
 2788              	.LBB1223:
 2789              	.LBB1212:
 2790              	.LBB1211:
 2791              	.LBB1210:
 2792              		.loc 29 166 34 view .LVU678
 2793 000c 0260     		str	r2, [r0]
 2794              	.LVL126:
 2795              		.loc 29 166 34 view .LVU679
 2796              	.LBE1210:
 2797              	.LBE1211:
 2798              	.LBE1212:
 2799              	.LBB1213:
 2800              	.LBI1213:
  95:../DaisyExamples/libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 2801              		.loc 16 95 5 is_stmt 1 view .LVU680
 2802              	.LBB1214:
 2803              	.LBB1215:
  95:../DaisyExamples/libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 2804              		.loc 16 95 35 is_stmt 0 view .LVU681
 2805 000e 4261     		str	r2, [r0, #20]
 2806              	.LVL127:
  95:../DaisyExamples/libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 2807              		.loc 16 95 35 view .LVU682
 2808              	.LBE1215:
 2809              	.LBE1214:
 2810              	.LBE1213:
 2811              	.LBB1216:
 2812              	.LBI1216:
  92:../DaisyExamples/libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 2813              		.loc 15 92 5 is_stmt 1 view .LVU683
  92:../DaisyExamples/libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 2814              		.loc 15 92 5 is_stmt 0 view .LVU684
 2815              	.LBE1216:
 2816              	.LBB1217:
 2817              	.LBI1217:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 192


 2818              		.file 30 "../DaisyExamples/libDaisy//src/per/dac.h"
   1:../DaisyExamples/libDaisy//src/per/dac.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../DaisyExamples/libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../DaisyExamples/libDaisy//src/per/dac.h **** 
   5:../DaisyExamples/libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../DaisyExamples/libDaisy//src/per/dac.h **** 
   7:../DaisyExamples/libDaisy//src/per/dac.h **** namespace daisy
   8:../DaisyExamples/libDaisy//src/per/dac.h **** {
   9:../DaisyExamples/libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../DaisyExamples/libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../DaisyExamples/libDaisy//src/per/dac.h ****  ** 
  12:../DaisyExamples/libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../DaisyExamples/libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../DaisyExamples/libDaisy//src/per/dac.h ****  **
  15:../DaisyExamples/libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../DaisyExamples/libDaisy//src/per/dac.h ****  **
  17:../DaisyExamples/libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../DaisyExamples/libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../DaisyExamples/libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../DaisyExamples/libDaisy//src/per/dac.h ****  ***/
  21:../DaisyExamples/libDaisy//src/per/dac.h **** class DacHandle
  22:../DaisyExamples/libDaisy//src/per/dac.h **** {
  23:../DaisyExamples/libDaisy//src/per/dac.h ****   public:
  24:../DaisyExamples/libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../DaisyExamples/libDaisy//src/per/dac.h ****     enum class Result
  26:../DaisyExamples/libDaisy//src/per/dac.h ****     {
  27:../DaisyExamples/libDaisy//src/per/dac.h ****         OK,
  28:../DaisyExamples/libDaisy//src/per/dac.h ****         ERR,
  29:../DaisyExamples/libDaisy//src/per/dac.h ****     };
  30:../DaisyExamples/libDaisy//src/per/dac.h **** 
  31:../DaisyExamples/libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../DaisyExamples/libDaisy//src/per/dac.h ****     enum class Channel
  33:../DaisyExamples/libDaisy//src/per/dac.h ****     {
  34:../DaisyExamples/libDaisy//src/per/dac.h ****         ONE,
  35:../DaisyExamples/libDaisy//src/per/dac.h ****         TWO,
  36:../DaisyExamples/libDaisy//src/per/dac.h ****         BOTH,
  37:../DaisyExamples/libDaisy//src/per/dac.h ****     };
  38:../DaisyExamples/libDaisy//src/per/dac.h **** 
  39:../DaisyExamples/libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../DaisyExamples/libDaisy//src/per/dac.h ****      **
  41:../DaisyExamples/libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../DaisyExamples/libDaisy//src/per/dac.h ****      **
  43:../DaisyExamples/libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../DaisyExamples/libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../DaisyExamples/libDaisy//src/per/dac.h ****      ***/
  46:../DaisyExamples/libDaisy//src/per/dac.h ****     enum class Mode
  47:../DaisyExamples/libDaisy//src/per/dac.h ****     {
  48:../DaisyExamples/libDaisy//src/per/dac.h ****         POLLING,
  49:../DaisyExamples/libDaisy//src/per/dac.h ****         DMA,
  50:../DaisyExamples/libDaisy//src/per/dac.h ****     };
  51:../DaisyExamples/libDaisy//src/per/dac.h **** 
  52:../DaisyExamples/libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../DaisyExamples/libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../DaisyExamples/libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../DaisyExamples/libDaisy//src/per/dac.h ****      ***/
  56:../DaisyExamples/libDaisy//src/per/dac.h ****     enum class BitDepth
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 193


  57:../DaisyExamples/libDaisy//src/per/dac.h ****     {
  58:../DaisyExamples/libDaisy//src/per/dac.h ****         BITS_8,
  59:../DaisyExamples/libDaisy//src/per/dac.h ****         BITS_12
  60:../DaisyExamples/libDaisy//src/per/dac.h ****     };
  61:../DaisyExamples/libDaisy//src/per/dac.h **** 
  62:../DaisyExamples/libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../DaisyExamples/libDaisy//src/per/dac.h ****     enum class BufferState
  64:../DaisyExamples/libDaisy//src/per/dac.h ****     {
  65:../DaisyExamples/libDaisy//src/per/dac.h ****         ENABLED,
  66:../DaisyExamples/libDaisy//src/per/dac.h ****         DISABLED,
  67:../DaisyExamples/libDaisy//src/per/dac.h ****     };
  68:../DaisyExamples/libDaisy//src/per/dac.h **** 
  69:../DaisyExamples/libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../DaisyExamples/libDaisy//src/per/dac.h ****     struct Config
  71:../DaisyExamples/libDaisy//src/per/dac.h ****     {
  72:../DaisyExamples/libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../DaisyExamples/libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../DaisyExamples/libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../DaisyExamples/libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../DaisyExamples/libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../DaisyExamples/libDaisy//src/per/dac.h **** 
  78:../DaisyExamples/libDaisy//src/per/dac.h ****         Channel     chn;
  79:../DaisyExamples/libDaisy//src/per/dac.h ****         Mode        mode;
  80:../DaisyExamples/libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../DaisyExamples/libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../DaisyExamples/libDaisy//src/per/dac.h ****     };
  83:../DaisyExamples/libDaisy//src/per/dac.h **** 
  84:../DaisyExamples/libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 2819              		.loc 30 84 5 is_stmt 1 view .LVU685
 2820              	.LBE1217:
 2821              	.LBE1223:
 2822              	.LBE1279:
 2823              	.LBB1280:
 2824              	.LBB1273:
 2825              	.LBB1267:
 2826              	.LBB1251:
 2827              	.LBB1245:
 2828              	.LBB1239:
 2829              	.LBB1233:
  36:../DaisyExamples/libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 2830              		.loc 7 36 20 is_stmt 0 view .LVU686
 2831 0010 C3F82422 		str	r2, [r3, #548]
 2832              	.LBE1233:
 2833              	.LBE1239:
 2834              	.LBE1245:
 2835              	.LBE1251:
 2836              	.LBB1252:
 2837              	.LBB1253:
 2838              	.LBB1254:
 2839              	.LBB1255:
 2840              		.file 31 "../DaisyExamples/libDaisy//src/per/uart.h"
   1:../DaisyExamples/libDaisy//src/per/uart.h **** /* 
   2:../DaisyExamples/libDaisy//src/per/uart.h **** TODO
   3:../DaisyExamples/libDaisy//src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../DaisyExamples/libDaisy//src/per/uart.h **** - Transmit function improvements.
   5:../DaisyExamples/libDaisy//src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   6:../DaisyExamples/libDaisy//src/per/uart.h **** */
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 194


   7:../DaisyExamples/libDaisy//src/per/uart.h **** 
   8:../DaisyExamples/libDaisy//src/per/uart.h **** #pragma once
   9:../DaisyExamples/libDaisy//src/per/uart.h **** #ifndef DSY_UART_H
  10:../DaisyExamples/libDaisy//src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../DaisyExamples/libDaisy//src/per/uart.h **** #include "daisy_core.h"
  12:../DaisyExamples/libDaisy//src/per/uart.h **** 
  13:../DaisyExamples/libDaisy//src/per/uart.h **** 
  14:../DaisyExamples/libDaisy//src/per/uart.h **** namespace daisy
  15:../DaisyExamples/libDaisy//src/per/uart.h **** {
  16:../DaisyExamples/libDaisy//src/per/uart.h **** /** @addtogroup serial
  17:../DaisyExamples/libDaisy//src/per/uart.h ****     @{
  18:../DaisyExamples/libDaisy//src/per/uart.h ****     */
  19:../DaisyExamples/libDaisy//src/per/uart.h **** 
  20:../DaisyExamples/libDaisy//src/per/uart.h **** /** 
  21:../DaisyExamples/libDaisy//src/per/uart.h ****     Uart Peripheral
  22:../DaisyExamples/libDaisy//src/per/uart.h ****     @author shensley
  23:../DaisyExamples/libDaisy//src/per/uart.h ****     @date March 2020
  24:../DaisyExamples/libDaisy//src/per/uart.h ****     */
  25:../DaisyExamples/libDaisy//src/per/uart.h **** class UartHandler
  26:../DaisyExamples/libDaisy//src/per/uart.h **** {
  27:../DaisyExamples/libDaisy//src/per/uart.h ****   public:
  28:../DaisyExamples/libDaisy//src/per/uart.h ****     struct Config
  29:../DaisyExamples/libDaisy//src/per/uart.h ****     {
  30:../DaisyExamples/libDaisy//src/per/uart.h ****         enum class Peripheral
  31:../DaisyExamples/libDaisy//src/per/uart.h ****         {
  32:../DaisyExamples/libDaisy//src/per/uart.h ****             USART_1,
  33:../DaisyExamples/libDaisy//src/per/uart.h ****             USART_2,
  34:../DaisyExamples/libDaisy//src/per/uart.h ****             USART_3,
  35:../DaisyExamples/libDaisy//src/per/uart.h ****             UART_4,
  36:../DaisyExamples/libDaisy//src/per/uart.h ****             UART_5,
  37:../DaisyExamples/libDaisy//src/per/uart.h ****             USART_6,
  38:../DaisyExamples/libDaisy//src/per/uart.h ****             UART_7,
  39:../DaisyExamples/libDaisy//src/per/uart.h ****             UART_8,
  40:../DaisyExamples/libDaisy//src/per/uart.h ****             LPUART_1,
  41:../DaisyExamples/libDaisy//src/per/uart.h ****         };
  42:../DaisyExamples/libDaisy//src/per/uart.h **** 
  43:../DaisyExamples/libDaisy//src/per/uart.h ****         enum class StopBits
  44:../DaisyExamples/libDaisy//src/per/uart.h ****         {
  45:../DaisyExamples/libDaisy//src/per/uart.h ****             BITS_0_5,
  46:../DaisyExamples/libDaisy//src/per/uart.h ****             BITS_1,
  47:../DaisyExamples/libDaisy//src/per/uart.h ****             BITS_1_5,
  48:../DaisyExamples/libDaisy//src/per/uart.h ****             BITS_2,
  49:../DaisyExamples/libDaisy//src/per/uart.h ****         };
  50:../DaisyExamples/libDaisy//src/per/uart.h **** 
  51:../DaisyExamples/libDaisy//src/per/uart.h ****         enum class Parity
  52:../DaisyExamples/libDaisy//src/per/uart.h ****         {
  53:../DaisyExamples/libDaisy//src/per/uart.h ****             NONE,
  54:../DaisyExamples/libDaisy//src/per/uart.h ****             EVEN,
  55:../DaisyExamples/libDaisy//src/per/uart.h ****             ODD,
  56:../DaisyExamples/libDaisy//src/per/uart.h ****         };
  57:../DaisyExamples/libDaisy//src/per/uart.h **** 
  58:../DaisyExamples/libDaisy//src/per/uart.h ****         enum class Mode
  59:../DaisyExamples/libDaisy//src/per/uart.h ****         {
  60:../DaisyExamples/libDaisy//src/per/uart.h ****             RX,
  61:../DaisyExamples/libDaisy//src/per/uart.h ****             TX,
  62:../DaisyExamples/libDaisy//src/per/uart.h ****             TX_RX,
  63:../DaisyExamples/libDaisy//src/per/uart.h ****         };
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 195


  64:../DaisyExamples/libDaisy//src/per/uart.h **** 
  65:../DaisyExamples/libDaisy//src/per/uart.h ****         enum class WordLength
  66:../DaisyExamples/libDaisy//src/per/uart.h ****         {
  67:../DaisyExamples/libDaisy//src/per/uart.h ****             BITS_7,
  68:../DaisyExamples/libDaisy//src/per/uart.h ****             BITS_8,
  69:../DaisyExamples/libDaisy//src/per/uart.h ****             BITS_9,
  70:../DaisyExamples/libDaisy//src/per/uart.h ****         };
  71:../DaisyExamples/libDaisy//src/per/uart.h **** 
  72:../DaisyExamples/libDaisy//src/per/uart.h ****         struct
  73:../DaisyExamples/libDaisy//src/per/uart.h ****         {
  74:../DaisyExamples/libDaisy//src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  75:../DaisyExamples/libDaisy//src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../DaisyExamples/libDaisy//src/per/uart.h ****         } pin_config;        /**< & */
  77:../DaisyExamples/libDaisy//src/per/uart.h **** 
  78:../DaisyExamples/libDaisy//src/per/uart.h ****         Config()
  79:../DaisyExamples/libDaisy//src/per/uart.h ****         {
  80:../DaisyExamples/libDaisy//src/per/uart.h ****             // user must init periph, pin_config, and mode
  81:../DaisyExamples/libDaisy//src/per/uart.h ****             stopbits   = StopBits::BITS_1;
  82:../DaisyExamples/libDaisy//src/per/uart.h ****             parity     = Parity::NONE;
  83:../DaisyExamples/libDaisy//src/per/uart.h ****             wordlength = WordLength::BITS_8;
  84:../DaisyExamples/libDaisy//src/per/uart.h ****             baudrate   = 4800;
  85:../DaisyExamples/libDaisy//src/per/uart.h ****             // baudrate   = 31250;
  86:../DaisyExamples/libDaisy//src/per/uart.h ****         }
  87:../DaisyExamples/libDaisy//src/per/uart.h **** 
  88:../DaisyExamples/libDaisy//src/per/uart.h ****         Peripheral periph;
  89:../DaisyExamples/libDaisy//src/per/uart.h ****         StopBits   stopbits;
  90:../DaisyExamples/libDaisy//src/per/uart.h ****         Parity     parity;
  91:../DaisyExamples/libDaisy//src/per/uart.h ****         Mode       mode;
  92:../DaisyExamples/libDaisy//src/per/uart.h ****         WordLength wordlength;
  93:../DaisyExamples/libDaisy//src/per/uart.h ****         uint32_t   baudrate;
  94:../DaisyExamples/libDaisy//src/per/uart.h ****     };
  95:../DaisyExamples/libDaisy//src/per/uart.h **** 
  96:../DaisyExamples/libDaisy//src/per/uart.h **** 
  97:../DaisyExamples/libDaisy//src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 2841              		.loc 31 97 35 view .LVU687
 2842 0014 C3F82C22 		str	r2, [r3, #556]
 2843              	.LBE1255:
 2844              	.LBE1254:
 2845              	.LBE1253:
 2846              	.LBE1252:
 2847              	.LBE1267:
 2848              	.LBE1273:
 2849              	.LBE1280:
 2850              	.LBB1281:
 2851              	.LBB1224:
 2852              	.LBB1220:
 2853              	.LBB1218:
 2854              	.LBB1219:
 2855              		.loc 30 84 33 view .LVU688
 2856 0018 0262     		str	r2, [r0, #32]
 2857              	.LVL128:
 2858              		.loc 30 84 33 view .LVU689
 2859              	.LBE1219:
 2860              	.LBE1218:
 2861              	.LBE1220:
 2862              	.LBB1221:
 2863              	.LBI1221:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 196


  40:../DaisyExamples/libDaisy//src/hid/usb.h **** 
 2864              		.loc 14 40 5 is_stmt 1 view .LVU690
  40:../DaisyExamples/libDaisy//src/hid/usb.h **** 
 2865              		.loc 14 40 5 is_stmt 0 view .LVU691
 2866              	.LBE1221:
 2867              	.LBB1222:
 2868              	.LBI1222:
  77:../DaisyExamples/libDaisy//src/sys/system.h ****     ~System() {}
 2869              		.loc 13 77 5 is_stmt 1 view .LVU692
  77:../DaisyExamples/libDaisy//src/sys/system.h ****     ~System() {}
 2870              		.loc 13 77 5 is_stmt 0 view .LVU693
 2871              	.LBE1222:
 2872              	.LBE1224:
 2873              	.LBE1281:
 2874              	.LBB1282:
 2875              	.LBI1282:
  20:../DaisyExamples/libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 2876              		.loc 11 20 5 is_stmt 1 view .LVU694
 2877              	.LBB1283:
 2878              	.LBB1284:
 2879              	.LBI1284:
  41:../DaisyExamples/libDaisy//src/hid/switch.h ****     ~Switch() {}
 2880              		.loc 10 41 5 view .LVU695
  41:../DaisyExamples/libDaisy//src/hid/switch.h ****     ~Switch() {}
 2881              		.loc 10 41 5 is_stmt 0 view .LVU696
 2882              	.LBE1284:
 2883              	.LBE1283:
 2884              	.LBE1282:
 2885              	.LBB1285:
 2886              	.LBI1285:
  21:../DaisyExamples/libDaisy//src/hid/ctrl.h ****     /** destructor */
 2887              		.loc 5 21 5 is_stmt 1 view .LVU697
  21:../DaisyExamples/libDaisy//src/hid/ctrl.h ****     /** destructor */
 2888              		.loc 5 21 5 is_stmt 0 view .LVU698
 2889              	.LBE1285:
 2890              	.LBB1286:
 2891              	.LBI1286:
  21:../DaisyExamples/libDaisy//src/hid/ctrl.h ****     /** destructor */
 2892              		.loc 5 21 5 is_stmt 1 view .LVU699
  21:../DaisyExamples/libDaisy//src/hid/ctrl.h ****     /** destructor */
 2893              		.loc 5 21 5 is_stmt 0 view .LVU700
 2894              	.LBE1286:
 2895              	.LBB1287:
 2896              	.LBI1287:
  41:../DaisyExamples/libDaisy//src/hid/switch.h ****     ~Switch() {}
 2897              		.loc 10 41 5 is_stmt 1 view .LVU701
  41:../DaisyExamples/libDaisy//src/hid/switch.h ****     ~Switch() {}
 2898              		.loc 10 41 5 is_stmt 0 view .LVU702
 2899              	.LBE1287:
 2900              	.LBB1288:
 2901              	.LBI1288:
  41:../DaisyExamples/libDaisy//src/hid/switch.h ****     ~Switch() {}
 2902              		.loc 10 41 5 is_stmt 1 view .LVU703
  41:../DaisyExamples/libDaisy//src/hid/switch.h ****     ~Switch() {}
 2903              		.loc 10 41 5 is_stmt 0 view .LVU704
 2904              	.LBE1288:
 2905              	.LBB1289:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 197


 2906              	.LBI1289:
  17:../DaisyExamples/libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 2907              		.loc 8 17 5 is_stmt 1 view .LVU705
 2908              	.LBB1290:
 2909              	.LBB1291:
 2910              	.LBI1291:
  24:../DaisyExamples/libDaisy//src/hid/led.h ****     ~Led() {}
 2911              		.loc 9 24 5 view .LVU706
  24:../DaisyExamples/libDaisy//src/hid/led.h ****     ~Led() {}
 2912              		.loc 9 24 5 is_stmt 0 view .LVU707
 2913              	.LBE1291:
 2914              	.LBB1292:
 2915              	.LBI1292:
  24:../DaisyExamples/libDaisy//src/hid/led.h ****     ~Led() {}
 2916              		.loc 9 24 5 is_stmt 1 view .LVU708
  24:../DaisyExamples/libDaisy//src/hid/led.h ****     ~Led() {}
 2917              		.loc 9 24 5 is_stmt 0 view .LVU709
 2918              	.LBE1292:
 2919              	.LBB1293:
 2920              	.LBI1293:
  24:../DaisyExamples/libDaisy//src/hid/led.h ****     ~Led() {}
 2921              		.loc 9 24 5 is_stmt 1 view .LVU710
  24:../DaisyExamples/libDaisy//src/hid/led.h ****     ~Led() {}
 2922              		.loc 9 24 5 is_stmt 0 view .LVU711
 2923              	.LBE1293:
 2924              	.LBE1290:
 2925              	.LBE1289:
 2926              	.LBB1294:
 2927              	.LBI1294:
  17:../DaisyExamples/libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 2928              		.loc 8 17 5 is_stmt 1 view .LVU712
 2929              	.LBB1295:
 2930              	.LBB1296:
 2931              	.LBI1296:
  24:../DaisyExamples/libDaisy//src/hid/led.h ****     ~Led() {}
 2932              		.loc 9 24 5 view .LVU713
  24:../DaisyExamples/libDaisy//src/hid/led.h ****     ~Led() {}
 2933              		.loc 9 24 5 is_stmt 0 view .LVU714
 2934              	.LBE1296:
 2935              	.LBB1297:
 2936              	.LBI1297:
  24:../DaisyExamples/libDaisy//src/hid/led.h ****     ~Led() {}
 2937              		.loc 9 24 5 is_stmt 1 view .LVU715
  24:../DaisyExamples/libDaisy//src/hid/led.h ****     ~Led() {}
 2938              		.loc 9 24 5 is_stmt 0 view .LVU716
 2939              	.LBE1297:
 2940              	.LBB1298:
 2941              	.LBI1298:
  24:../DaisyExamples/libDaisy//src/hid/led.h ****     ~Led() {}
 2942              		.loc 9 24 5 is_stmt 1 view .LVU717
  24:../DaisyExamples/libDaisy//src/hid/led.h ****     ~Led() {}
 2943              		.loc 9 24 5 is_stmt 0 view .LVU718
 2944              	.LBE1298:
 2945              	.LBE1295:
 2946              	.LBE1294:
 2947              	.LBB1299:
 2948              	.LBI1225:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 198


  84:../DaisyExamples/libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 2949              		.loc 7 84 5 is_stmt 1 view .LVU719
 2950              	.LBB1274:
 2951              	.LBB1268:
 2952              	.LBB1257:
 2953              	.LBI1257:
 2954              		.loc 31 97 5 view .LVU720
 2955              	.LBB1258:
 2956              	.LBB1259:
 2957              		.loc 31 97 35 is_stmt 0 view .LVU721
 2958 001a C0F87C21 		str	r2, [r0, #380]
 2959              	.LVL129:
 2960              		.loc 31 97 35 view .LVU722
 2961              	.LBE1259:
 2962              	.LBE1258:
 2963              	.LBE1257:
 2964              	.LBB1260:
 2965              	.LBI1260:
 2966              		.file 32 "../DaisyExamples/libDaisy//src/util/ringbuffer.h"
   1:../DaisyExamples/libDaisy//src/util/ringbuffer.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/util/ringbuffer.h **** #ifndef DSY_RINGBUFFER_H
   3:../DaisyExamples/libDaisy//src/util/ringbuffer.h **** #define DSY_RINGBUFFER_H
   4:../DaisyExamples/libDaisy//src/util/ringbuffer.h **** 
   5:../DaisyExamples/libDaisy//src/util/ringbuffer.h **** #include <algorithm>
   6:../DaisyExamples/libDaisy//src/util/ringbuffer.h **** 
   7:../DaisyExamples/libDaisy//src/util/ringbuffer.h **** namespace daisy
   8:../DaisyExamples/libDaisy//src/util/ringbuffer.h **** {
   9:../DaisyExamples/libDaisy//src/util/ringbuffer.h **** /** @addtogroup utility
  10:../DaisyExamples/libDaisy//src/util/ringbuffer.h ****     @{
  11:../DaisyExamples/libDaisy//src/util/ringbuffer.h **** */
  12:../DaisyExamples/libDaisy//src/util/ringbuffer.h **** 
  13:../DaisyExamples/libDaisy//src/util/ringbuffer.h **** /**
  14:../DaisyExamples/libDaisy//src/util/ringbuffer.h **** Utility Ring Buffer \n 
  15:../DaisyExamples/libDaisy//src/util/ringbuffer.h **** imported from pichenettes/stmlib
  16:../DaisyExamples/libDaisy//src/util/ringbuffer.h **** */
  17:../DaisyExamples/libDaisy//src/util/ringbuffer.h **** template <typename T, size_t size>
  18:../DaisyExamples/libDaisy//src/util/ringbuffer.h **** class RingBuffer
  19:../DaisyExamples/libDaisy//src/util/ringbuffer.h **** {
  20:../DaisyExamples/libDaisy//src/util/ringbuffer.h ****   public:
  21:../DaisyExamples/libDaisy//src/util/ringbuffer.h ****     RingBuffer() {}
 2967              		.loc 32 21 5 is_stmt 1 view .LVU723
 2968              		.loc 32 21 5 is_stmt 0 view .LVU724
 2969              	.LBE1260:
 2970              	.LBB1261:
 2971              	.LBI1228:
  86:../DaisyExamples/libDaisy//src/hid/midi.h **** 
  87:../DaisyExamples/libDaisy//src/hid/midi.h ****     struct Config
 2972              		.loc 7 87 12 is_stmt 1 view .LVU725
 2973              	.LBB1246:
 2974              	.LBI1229:
  34:../DaisyExamples/libDaisy//src/hid/midi.h ****         {
 2975              		.loc 7 34 9 view .LVU726
 2976              	.LBB1240:
 2977              	.LBB1234:
  36:../DaisyExamples/libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 2978              		.loc 7 36 13 view .LVU727
  37:../DaisyExamples/libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 199


 2979              		.loc 7 37 13 view .LVU728
 2980              	.LBE1234:
 2981              	.LBE1240:
 2982              	.LBE1246:
 2983              	.LBE1261:
  84:../DaisyExamples/libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 2984              		.loc 7 84 19 is_stmt 0 view .LVU729
 2985 001e 294A     		ldr	r2, .L98+8
 2986              	.LBB1262:
 2987              	.LBB1247:
 2988              	.LBB1241:
 2989              	.LBB1235:
  37:../DaisyExamples/libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 2990              		.loc 7 37 20 view .LVU730
 2991 0020 0D88     		ldrh	r5, [r1]
 2992              	.LBE1235:
 2993              	.LBE1241:
 2994              	.LBE1247:
 2995              	.LBE1262:
  84:../DaisyExamples/libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 2996              		.loc 7 84 19 view .LVU731
 2997 0022 C3F83022 		str	r2, [r3, #560]
 2998 0026 4FF60F02 		movw	r2, #63503
 2999              	.LBE1268:
 3000              	.LBE1274:
 3001              	.LBE1299:
 3002              	.LBE1303:
 3003              	.LBE1307:
  15:src/main.cpp  **** static TTrack ttrack;
 3004              		.loc 24 15 17 view .LVU732
 3005 002a 274C     		ldr	r4, .L98+12
 3006              	.LBB1308:
 3007              	.LBB1304:
 3008              	.LBB1300:
 3009              	.LBB1275:
 3010              	.LBB1269:
  84:../DaisyExamples/libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 3011              		.loc 7 84 19 view .LVU733
 3012 002c A3F83422 		strh	r2, [r3, #564]	@ movhi
 3013 0030 0722     		movs	r2, #7
 3014              	.LBB1263:
 3015              	.LBB1248:
 3016              	.LBB1242:
 3017              	.LBB1236:
  38:../DaisyExamples/libDaisy//src/hid/midi.h ****         }
 3018              		.loc 7 38 20 view .LVU734
 3019 0032 8988     		ldrh	r1, [r1, #4]
  37:../DaisyExamples/libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 3020              		.loc 7 37 20 view .LVU735
 3021 0034 A3F82852 		strh	r5, [r3, #552]	@ movhi
  38:../DaisyExamples/libDaisy//src/hid/midi.h ****         }
 3022              		.loc 7 38 13 is_stmt 1 view .LVU736
 3023              	.LBE1236:
 3024              	.LBE1242:
 3025              	.LBE1248:
 3026              	.LBE1263:
 3027              	.LBE1269:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 200


 3028              	.LBE1275:
 3029              	.LBE1300:
 3030              	.LBE1304:
 3031              	.LBE1308:
  16:src/main.cpp  **** 
 3032              		.loc 24 16 15 is_stmt 0 view .LVU737
 3033 0038 244D     		ldr	r5, .L98+16
 3034              	.LBB1309:
 3035              	.LBB1305:
 3036              	.LBB1301:
 3037              	.LBB1276:
 3038              	.LBB1270:
  84:../DaisyExamples/libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 3039              		.loc 7 84 19 view .LVU738
 3040 003a 83F83622 		strb	r2, [r3, #566]
 3041              	.LBE1270:
 3042              	.LBE1276:
 3043              	.LBE1301:
 3044              	.LBE1305:
 3045              	.LBE1309:
  15:src/main.cpp  **** static TTrack ttrack;
 3046              		.loc 24 15 17 view .LVU739
 3047 003e 2246     		mov	r2, r4
 3048              	.LBB1310:
 3049              	.LBB1306:
 3050              	.LBB1302:
 3051              	.LBB1277:
 3052              	.LBB1271:
 3053              	.LBB1264:
 3054              	.LBB1249:
 3055              	.LBB1243:
 3056              	.LBB1237:
  38:../DaisyExamples/libDaisy//src/hid/midi.h ****         }
 3057              		.loc 7 38 20 view .LVU740
 3058 0040 A3F82A12 		strh	r1, [r3, #554]	@ movhi
 3059              	.LVL130:
  38:../DaisyExamples/libDaisy//src/hid/midi.h ****         }
 3060              		.loc 7 38 20 view .LVU741
 3061              	.LBE1237:
 3062              	.LBE1243:
 3063              	.LBE1249:
 3064              	.LBE1264:
 3065              	.LBB1265:
 3066              	.LBI1252:
  25:../DaisyExamples/libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
 3067              		.loc 7 25 5 is_stmt 1 view .LVU742
 3068              	.LBB1256:
 3069              	.LBI1253:
 3070              		.loc 31 97 5 view .LVU743
 3071              		.loc 31 97 5 is_stmt 0 view .LVU744
 3072              	.LBE1256:
 3073              	.LBE1265:
 3074              	.LBE1271:
 3075              	.LBE1277:
 3076              	.LBE1302:
 3077              	.LBE1306:
 3078              	.LBE1310:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 201


  15:src/main.cpp  **** static TTrack ttrack;
 3079              		.loc 24 15 17 view .LVU745
 3080 0044 2249     		ldr	r1, .L98+20
 3081 0046 FFF7FEFF 		bl	__aeabi_atexit
 3082              	.LVL131:
  16:src/main.cpp  **** 
 3083              		.loc 24 16 15 view .LVU746
 3084 004a 2846     		mov	r0, r5
 3085 004c FFF7FEFF 		bl	_ZN6TTrackC1Ev
 3086              	.LVL132:
 3087 0050 2246     		mov	r2, r4
 3088 0052 2049     		ldr	r1, .L98+24
 3089 0054 2846     		mov	r0, r5
 3090 0056 FFF7FEFF 		bl	__aeabi_atexit
 3091              	.LVL133:
 3092              	.LBB1311:
 3093              	.LBI1311:
  21:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 3094              		.loc 1 21 5 is_stmt 1 view .LVU747
  21:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 3095              		.loc 1 21 5 is_stmt 0 view .LVU748
 3096              	.LBE1311:
  18:src/main.cpp  **** static ReverbSc                                  rev;
 3097              		.loc 24 18 50 view .LVU749
 3098 005a 2246     		mov	r2, r4
 3099 005c 1E49     		ldr	r1, .L98+28
 3100 005e 1F48     		ldr	r0, .L98+32
 3101 0060 FFF7FEFF 		bl	__aeabi_atexit
 3102              	.LVL134:
 3103              	.LBB1312:
 3104              	.LBI1312:
  21:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 3105              		.loc 1 21 5 is_stmt 1 view .LVU750
  21:../DaisyExamples/DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 3106              		.loc 1 21 5 is_stmt 0 view .LVU751
 3107              	.LBE1312:
  20:src/main.cpp  **** static DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS delr;
 3108              		.loc 24 20 50 view .LVU752
 3109 0064 1E4D     		ldr	r5, .L98+36
  18:src/main.cpp  **** static ReverbSc                                  rev;
 3110              		.loc 24 18 57 view .LVU753
 3111 0066 2246     		mov	r2, r4
 3112 0068 1B49     		ldr	r1, .L98+28
 3113 006a 1E48     		ldr	r0, .L98+40
 3114 006c FFF7FEFF 		bl	__aeabi_atexit
 3115              	.LVL135:
 3116              	.LBB1313:
 3117              	.LBI1313:
  40:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     ~ReverbSc() {}
 3118              		.loc 2 40 5 is_stmt 1 view .LVU754
  40:../DaisyExamples/DaisySP//Source/Effects/reverbsc.h ****     ~ReverbSc() {}
 3119              		.loc 2 40 5 is_stmt 0 view .LVU755
 3120              	.LBE1313:
  19:src/main.cpp  **** static DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS dell;
 3121              		.loc 24 19 50 view .LVU756
 3122 0070 2246     		mov	r2, r4
 3123 0072 1D49     		ldr	r1, .L98+44
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 202


 3124 0074 1D48     		ldr	r0, .L98+48
 3125 0076 FFF7FEFF 		bl	__aeabi_atexit
 3126              	.LVL136:
 3127              	.LBB1314:
 3128              	.LBI1314:
  23:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     ~DelayLine() {}
 3129              		.loc 17 23 5 is_stmt 1 view .LVU757
  23:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     ~DelayLine() {}
 3130              		.loc 17 23 5 is_stmt 0 view .LVU758
 3131              	.LBE1314:
  20:src/main.cpp  **** static DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS delr;
 3132              		.loc 24 20 50 view .LVU759
 3133 007a 2246     		mov	r2, r4
 3134 007c 2946     		mov	r1, r5
 3135 007e 1C48     		ldr	r0, .L98+52
 3136 0080 FFF7FEFF 		bl	__aeabi_atexit
 3137              	.LVL137:
 3138              	.LBB1315:
 3139              	.LBI1315:
  23:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     ~DelayLine() {}
 3140              		.loc 17 23 5 is_stmt 1 view .LVU760
  23:../DaisyExamples/DaisySP//Source/Utility/delayline.h ****     ~DelayLine() {}
 3141              		.loc 17 23 5 is_stmt 0 view .LVU761
 3142              	.LBE1315:
  21:src/main.cpp  **** static Tone                                      tone;
 3143              		.loc 24 21 50 view .LVU762
 3144 0084 2246     		mov	r2, r4
 3145 0086 2946     		mov	r1, r5
 3146 0088 1A48     		ldr	r0, .L98+56
  23:src/main.cpp  **** int              mode = REV;
 3147              		.loc 24 23 18 view .LVU763
 3148 008a 1B4D     		ldr	r5, .L98+60
  21:src/main.cpp  **** static Tone                                      tone;
 3149              		.loc 24 21 50 view .LVU764
 3150 008c FFF7FEFF 		bl	__aeabi_atexit
 3151              	.LVL138:
 3152              	.LBB1316:
 3153              	.LBI1316:
  15:../DaisyExamples/DaisySP//Source/Filters/tone.h ****     ~Tone() {}
 3154              		.loc 3 15 5 is_stmt 1 view .LVU765
  15:../DaisyExamples/DaisySP//Source/Filters/tone.h ****     ~Tone() {}
 3155              		.loc 3 15 5 is_stmt 0 view .LVU766
 3156              	.LBE1316:
  22:src/main.cpp  **** static Parameter deltime, cutoffParam, deldiscrete;
 3157              		.loc 24 22 50 view .LVU767
 3158 0090 2246     		mov	r2, r4
 3159 0092 1A49     		ldr	r1, .L98+64
 3160 0094 1A48     		ldr	r0, .L98+68
 3161 0096 FFF7FEFF 		bl	__aeabi_atexit
 3162              	.LVL139:
 3163              	.LBB1317:
 3164              	.LBI1317:
  25:../DaisyExamples/libDaisy//src/hid/parameter.h ****     /** Destructor */
 3165              		.loc 4 25 5 is_stmt 1 view .LVU768
 3166              	.LBB1318:
 3167              	.LBB1319:
 3168              	.LBI1319:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 203


  21:../DaisyExamples/libDaisy//src/hid/ctrl.h ****     /** destructor */
 3169              		.loc 5 21 5 view .LVU769
  21:../DaisyExamples/libDaisy//src/hid/ctrl.h ****     /** destructor */
 3170              		.loc 5 21 5 is_stmt 0 view .LVU770
 3171              	.LBE1319:
 3172              	.LBE1318:
 3173              	.LBE1317:
  23:src/main.cpp  **** int              mode = REV;
 3174              		.loc 24 23 18 view .LVU771
 3175 009a 2246     		mov	r2, r4
 3176 009c 2946     		mov	r1, r5
 3177 009e 1948     		ldr	r0, .L98+72
 3178 00a0 FFF7FEFF 		bl	__aeabi_atexit
 3179              	.LVL140:
 3180              	.LBB1320:
 3181              	.LBI1320:
  25:../DaisyExamples/libDaisy//src/hid/parameter.h ****     /** Destructor */
 3182              		.loc 4 25 5 is_stmt 1 view .LVU772
 3183              	.LBB1321:
 3184              	.LBB1322:
 3185              	.LBI1322:
  21:../DaisyExamples/libDaisy//src/hid/ctrl.h ****     /** destructor */
 3186              		.loc 5 21 5 view .LVU773
  21:../DaisyExamples/libDaisy//src/hid/ctrl.h ****     /** destructor */
 3187              		.loc 5 21 5 is_stmt 0 view .LVU774
 3188              	.LBE1322:
 3189              	.LBE1321:
 3190              	.LBE1320:
  23:src/main.cpp  **** int              mode = REV;
 3191              		.loc 24 23 27 view .LVU775
 3192 00a4 2246     		mov	r2, r4
 3193 00a6 2946     		mov	r1, r5
 3194 00a8 1748     		ldr	r0, .L98+76
 3195 00aa FFF7FEFF 		bl	__aeabi_atexit
 3196              	.LVL141:
 3197              	.LBB1323:
 3198              	.LBI1323:
  25:../DaisyExamples/libDaisy//src/hid/parameter.h ****     /** Destructor */
 3199              		.loc 4 25 5 is_stmt 1 view .LVU776
 3200              	.LBB1324:
 3201              	.LBB1325:
 3202              	.LBI1325:
  21:../DaisyExamples/libDaisy//src/hid/ctrl.h ****     /** destructor */
 3203              		.loc 5 21 5 view .LVU777
  21:../DaisyExamples/libDaisy//src/hid/ctrl.h ****     /** destructor */
 3204              		.loc 5 21 5 is_stmt 0 view .LVU778
 3205              	.LBE1325:
 3206              	.LBE1324:
 3207              	.LBE1323:
  23:src/main.cpp  **** int              mode = REV;
 3208              		.loc 24 23 40 view .LVU779
 3209 00ae 2246     		mov	r2, r4
 3210 00b0 2946     		mov	r1, r5
 3211 00b2 1648     		ldr	r0, .L98+80
 3212              	.LBE1326:
 3213              	.LBE1328:
 3214              		.loc 24 203 1 view .LVU780
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 204


 3215 00b4 BDE83840 		pop	{r3, r4, r5, lr}
 3216              		.cfi_restore 14
 3217              		.cfi_restore 5
 3218              		.cfi_restore 4
 3219              		.cfi_restore 3
 3220              		.cfi_def_cfa_offset 0
 3221              	.LBB1329:
 3222              	.LBB1327:
  23:src/main.cpp  **** int              mode = REV;
 3223              		.loc 24 23 40 view .LVU781
 3224 00b8 FFF7FEBF 		b	__aeabi_atexit
 3225              	.LVL142:
 3226              	.L99:
 3227              		.align	2
 3228              	.L98:
 3229 00bc 00000000 		.word	_ZL3pod
 3230 00c0 00000000 		.word	.LANCHOR12
 3231 00c4 80707FF0 		.word	-260083584
 3232 00c8 00000000 		.word	__dso_handle
 3233 00cc 00000000 		.word	_ZL6ttrack
 3234 00d0 00000000 		.word	_ZN5daisy8DaisyPodD1Ev
 3235 00d4 00000000 		.word	_ZN6TTrackD1Ev
 3236 00d8 00000000 		.word	_ZN7daisysp3SvfD1Ev
 3237 00dc 00000000 		.word	.LANCHOR0
 3238 00e0 00000000 		.word	_ZN7daisysp9DelayLineIfLj120000EED1Ev
 3239 00e4 00000000 		.word	.LANCHOR1
 3240 00e8 00000000 		.word	_ZN7daisysp8ReverbScD1Ev
 3241 00ec 00000000 		.word	_ZL3rev
 3242 00f0 0C530700 		.word	_ZL4dell
 3243 00f4 00000000 		.word	_ZL4delr
 3244 00f8 00000000 		.word	_ZN5daisy9ParameterD1Ev
 3245 00fc 00000000 		.word	_ZN7daisysp4ToneD1Ev
 3246 0100 00000000 		.word	.LANCHOR2
 3247 0104 00000000 		.word	.LANCHOR4
 3248 0108 00000000 		.word	.LANCHOR5
 3249 010c 00000000 		.word	.LANCHOR3
 3250              	.LBE1327:
 3251              	.LBE1329:
 3252              		.cfi_endproc
 3253              	.LFE7938:
 3255              		.section	.init_array,"aw",%init_array
 3256              		.align	2
 3257 0000 00000000 		.word	_GLOBAL__sub_I_mode(target1)
 3258              		.global	drywet
 3259              		.global	currentTempo
 3260              		.global	cutoff
 3261              		.global	delayTarget
 3262              		.global	feedback
 3263              		.global	currentDelay
 3264              		.global	mode
 3265              		.section	.rodata
 3266              		.align	2
 3267              		.set	.LANCHOR12,. + 0
 3268              	.LC0:
 3269 0000 01       		.byte	1
 3270 0001 07       		.byte	7
 3271 0002 0000     		.space	2
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 205


 3272              	.LC1:
 3273 0004 01       		.byte	1
 3274 0005 06       		.byte	6
 3275              		.section	.bss._ZL11cutoffParam,"aw",%nobits
 3276              		.align	2
 3277              		.set	.LANCHOR5,. + 0
 3280              	_ZL11cutoffParam:
 3281 0000 00000000 		.space	56
 3281      00000000 
 3281      00000000 
 3281      00000000 
 3281      00000000 
 3282              		.section	.bss._ZL11deldiscrete,"aw",%nobits
 3283              		.align	2
 3284              		.set	.LANCHOR3,. + 0
 3287              	_ZL11deldiscrete:
 3288 0000 00000000 		.space	56
 3288      00000000 
 3288      00000000 
 3288      00000000 
 3288      00000000 
 3289              		.section	.bss._ZL3pod,"aw",%nobits
 3290              		.align	2
 3293              	_ZL3pod:
 3294 0000 00000000 		.space	37432
 3294      00000000 
 3294      00000000 
 3294      00000000 
 3294      00000000 
 3295              		.section	.bss._ZL3rev,"aw",%nobits
 3296              		.align	2
 3299              	_ZL3rev:
 3300 0000 00000000 		.space	396100
 3300      00000000 
 3300      00000000 
 3300      00000000 
 3300      00000000 
 3301              		.section	.bss._ZL4tone,"aw",%nobits
 3302              		.align	2
 3303              		.set	.LANCHOR2,. + 0
 3306              	_ZL4tone:
 3307 0000 00000000 		.space	28
 3307      00000000 
 3307      00000000 
 3307      00000000 
 3307      00000000 
 3308              		.section	.bss._ZL5filtl,"aw",%nobits
 3309              		.align	2
 3310              		.set	.LANCHOR0,. + 0
 3313              	_ZL5filtl:
 3314 0000 00000000 		.space	76
 3314      00000000 
 3314      00000000 
 3314      00000000 
 3314      00000000 
 3315              		.section	.bss._ZL5filtr,"aw",%nobits
 3316              		.align	2
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 206


 3317              		.set	.LANCHOR1,. + 0
 3320              	_ZL5filtr:
 3321 0000 00000000 		.space	76
 3321      00000000 
 3321      00000000 
 3321      00000000 
 3321      00000000 
 3322              		.section	.bss._ZL6ttrack,"aw",%nobits
 3323              		.align	3
 3326              	_ZL6ttrack:
 3327 0000 00000000 		.space	20128
 3327      00000000 
 3327      00000000 
 3327      00000000 
 3327      00000000 
 3328              		.section	.bss._ZL7deltime,"aw",%nobits
 3329              		.align	2
 3330              		.set	.LANCHOR4,. + 0
 3333              	_ZL7deltime:
 3334 0000 00000000 		.space	56
 3334      00000000 
 3334      00000000 
 3334      00000000 
 3334      00000000 
 3335              		.section	.bss.currentDelay,"aw",%nobits
 3336              		.align	2
 3337              		.set	.LANCHOR7,. + 0
 3340              	currentDelay:
 3341 0000 00000000 		.space	4
 3342              		.section	.bss.currentTempo,"aw",%nobits
 3343              		.align	2
 3344              		.set	.LANCHOR11,. + 0
 3347              	currentTempo:
 3348 0000 00000000 		.space	4
 3349              		.section	.bss.cutoff,"aw",%nobits
 3350              		.align	2
 3353              	cutoff:
 3354 0000 00000000 		.space	4
 3355              		.section	.bss.delayTarget,"aw",%nobits
 3356              		.align	2
 3357              		.set	.LANCHOR6,. + 0
 3360              	delayTarget:
 3361 0000 00000000 		.space	4
 3362              		.section	.bss.drywet,"aw",%nobits
 3363              		.align	2
 3364              		.set	.LANCHOR9,. + 0
 3367              	drywet:
 3368 0000 00000000 		.space	4
 3369              		.section	.bss.feedback,"aw",%nobits
 3370              		.align	2
 3371              		.set	.LANCHOR10,. + 0
 3374              	feedback:
 3375 0000 00000000 		.space	4
 3376              		.section	.bss.mode,"aw",%nobits
 3377              		.align	2
 3378              		.set	.LANCHOR8,. + 0
 3381              	mode:
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 207


 3382 0000 00000000 		.space	4
 3383              		.section	.sdram_bss,"aw"
 3384              		.align	2
 3387              	_ZL4delr:
 3388 0000 00000000 		.space	480012
 3388      00000000 
 3388      00000000 
 3388      00000000 
 3388      00000000 
 3391              	_ZL4dell:
 3392 7530c 00000000 		.space	480012
 3392      00000000 
 3392      00000000 
 3392      00000000 
 3392      00000000 
 3393              		.text
 3394              	.Letext0:
 3395              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 3396              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 3397              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 3398              		.file 36 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 3399              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 3400              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 3401              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 3402              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 3403              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 3404              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 3405              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 3406              		.file 44 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
 3407              		.file 45 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 3408              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 3409              		.file 47 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 3410              		.file 48 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 3411              		.file 49 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_constr
 3412              		.file 50 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 3413              		.file 51 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 3414              		.file 52 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\charconv.h
 3415              		.file 53 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 3416              		.file 54 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 3417              		.file 55 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 3418              		.file 56 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\array"
 3419              		.file 57 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\uses_alloc
 3420              		.file 58 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\tuple"
 3421              		.file 59 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\shared_ptr
 3422              		.file 60 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\atomic_bas
 3423              		.file 61 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\functional"
 3424              		.file 62 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 3425              		.file 63 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\concurrence
 3426              		.file 64 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\alloc_trait
 3427              		.file 65 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 3428              		.file 66 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 3429              		.file 67 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 3430              		.file 68 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 3431              		.file 69 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 3432              		.file 70 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 3433              		.file 71 "../DaisyExamples/DaisySP//Source/Control/adenv.h"
 3434              		.file 72 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 208


 3435              		.file 73 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 3436              		.file 74 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 3437              		.file 75 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 3438              		.file 76 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 3439              		.file 77 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 3440              		.file 78 "../DaisyExamples/libDaisy//src/daisy_core.h"
 3441              		.file 79 "../DaisyExamples/libDaisy//src/per/tim.h"
 3442              		.file 80 "../DaisyExamples/libDaisy//src/per/sai.h"
 3443              		.file 81 "../DaisyExamples/libDaisy//src/hid/MidiEvent.h"
 3444              		.file 82 "../DaisyExamples/libDaisy//src/util/wav_format.h"
 3445              		.file 83 "../DaisyExamples/libDaisy//src/util/color.h"
 3446              		.file 84 "../DaisyExamples/libDaisy//src/dev/max11300.h"
 3447              		.file 85 "../DaisyExamples/libDaisy//src/per/gpio.h"
 3448              		.file 86 "../DaisyExamples/libDaisy//src/dev/sdram.h"
 3449              		.file 87 "src/OnsetDF.h"
 3450              		.file 88 "./lib/etl/include/etl/profiles/determine_builtin_support.h"
 3451              		.file 89 "./lib/etl/include/etl/platform.h"
 3452              		.file 90 "./lib/etl/include/etl/atomic/atomic_std.h"
 3453              		.file 91 "./lib/etl/include/etl/integral_limits.h"
 3454              		.file 92 "./lib/etl/include/etl/memory.h"
 3455              		.file 93 "../DaisyExamples/libDaisy//src/dev/sr_595.h"
 3456              		.file 94 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\functexcep
 3457              		.file 95 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\new"
 3458              		.file 96 "<built-in>"
 3459              		.file 97 "./lib/etl/include/etl/debug_count.h"
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 209


DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:17     .text._ZN7daisysp3SvfD2Ev:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:26     .text._ZN7daisysp3SvfD2Ev:00000000 _ZN7daisysp3SvfD2Ev
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:26     .text._ZN7daisysp3SvfD2Ev:00000000 _ZN7daisysp3SvfD1Ev
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:43     .text._ZN7daisysp8ReverbScD2Ev:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:51     .text._ZN7daisysp8ReverbScD2Ev:00000000 _ZN7daisysp8ReverbScD2Ev
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:51     .text._ZN7daisysp8ReverbScD2Ev:00000000 _ZN7daisysp8ReverbScD1Ev
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:68     .text._ZN7daisysp4ToneD2Ev:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:76     .text._ZN7daisysp4ToneD2Ev:00000000 _ZN7daisysp4ToneD2Ev
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:76     .text._ZN7daisysp4ToneD2Ev:00000000 _ZN7daisysp4ToneD1Ev
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:93     .text._ZN5daisy9ParameterD2Ev:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:101    .text._ZN5daisy9ParameterD2Ev:00000000 _ZN5daisy9ParameterD2Ev
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:101    .text._ZN5daisy9ParameterD2Ev:00000000 _ZN5daisy9ParameterD1Ev
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:124    .text._ZN5daisy8DaisyPodD2Ev:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:132    .text._ZN5daisy8DaisyPodD2Ev:00000000 _ZN5daisy8DaisyPodD2Ev
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:132    .text._ZN5daisy8DaisyPodD2Ev:00000000 _ZN5daisy8DaisyPodD1Ev
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:259    .text._ZN7daisysp9DelayLineIfLj120000EED2Ev:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:267    .text._ZN7daisysp9DelayLineIfLj120000EED2Ev:00000000 _ZN7daisysp9DelayLineIfLj120000EED2Ev
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:267    .text._ZN7daisysp9DelayLineIfLj120000EED2Ev:00000000 _ZN7daisysp9DelayLineIfLj120000EED1Ev
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:284    .text._ZN6TTrackD2Ev:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:292    .text._ZN6TTrackD2Ev:00000000 _ZN6TTrackD2Ev
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:292    .text._ZN6TTrackD2Ev:00000000 _ZN6TTrackD1Ev
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:497    .text.startup.main:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:505    .text.startup.main:00000000 main
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:915    .text.startup.main:00000178 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3293   .bss._ZL3pod:00000000 _ZL3pod
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3299   .bss._ZL3rev:00000000 _ZL3rev
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:2140   .text._Z13AudioCallbackPKfPfj:00000000 _Z13AudioCallbackPKfPfj
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3391   .sdram_bss:0007530c _ZL4dell
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3387   .sdram_bss:00000000 _ZL4delr
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:945    .text._Z11UpdateKnobsRfS_:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:953    .text._Z11UpdateKnobsRfS_:00000000 _Z11UpdateKnobsRfS_
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:1146   .text._Z11UpdateKnobsRfS_:000000c4 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:1166   .text._Z13UpdateEncoderv:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:1174   .text._Z13UpdateEncoderv:00000000 _Z13UpdateEncoderv
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:1243   .text._Z13UpdateEncoderv:0000003c $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:1251   .text._Z10UpdateLedsff:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:1259   .text._Z10UpdateLedsff:00000000 _Z10UpdateLedsff
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:1374   .text._Z10UpdateLedsff:00000098 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:1383   .text._Z8Controlsv:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:1391   .text._Z8Controlsv:00000000 _Z8Controlsv
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:1506   .text._Z8Controlsv:0000006c $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:1517   .text._Z15GetReverbSampleRfS_ff:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:1525   .text._Z15GetReverbSampleRfS_ff:00000000 _Z15GetReverbSampleRfS_ff
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:1653   .text._Z15GetReverbSampleRfS_ff:0000007c $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:1661   .text._Z14GetDelaySampleRfS_ff:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:1669   .text._Z14GetDelaySampleRfS_ff:00000000 _Z14GetDelaySampleRfS_ff
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:2115   .text._Z14GetDelaySampleRfS_ff:00000150 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:2128   .rodata._Z13AudioCallbackPKfPfj.str1.4:00000000 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:2132   .text._Z13AudioCallbackPKfPfj:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:2685   .text._Z13AudioCallbackPKfPfj:00000100 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3326   .bss._ZL6ttrack:00000000 _ZL6ttrack
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:2700   .text.startup._GLOBAL__sub_I_mode:00000000 $t
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:2707   .text.startup._GLOBAL__sub_I_mode:00000000 _GLOBAL__sub_I_mode
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3229   .text.startup._GLOBAL__sub_I_mode:000000bc $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3256   .init_array:00000000 $d
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 210


C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3367   .bss.drywet:00000000 drywet
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3347   .bss.currentTempo:00000000 currentTempo
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3353   .bss.cutoff:00000000 cutoff
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3360   .bss.delayTarget:00000000 delayTarget
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3374   .bss.feedback:00000000 feedback
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3340   .bss.currentDelay:00000000 currentDelay
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3381   .bss.mode:00000000 mode
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3266   .rodata:00000000 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3276   .bss._ZL11cutoffParam:00000000 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3280   .bss._ZL11cutoffParam:00000000 _ZL11cutoffParam
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3283   .bss._ZL11deldiscrete:00000000 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3287   .bss._ZL11deldiscrete:00000000 _ZL11deldiscrete
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3290   .bss._ZL3pod:00000000 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3296   .bss._ZL3rev:00000000 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3302   .bss._ZL4tone:00000000 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3306   .bss._ZL4tone:00000000 _ZL4tone
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3309   .bss._ZL5filtl:00000000 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3313   .bss._ZL5filtl:00000000 _ZL5filtl
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3316   .bss._ZL5filtr:00000000 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3320   .bss._ZL5filtr:00000000 _ZL5filtr
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3323   .bss._ZL6ttrack:00000000 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3329   .bss._ZL7deltime:00000000 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3333   .bss._ZL7deltime:00000000 _ZL7deltime
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3336   .bss.currentDelay:00000000 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3343   .bss.currentTempo:00000000 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3350   .bss.cutoff:00000000 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3356   .bss.delayTarget:00000000 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3363   .bss.drywet:00000000 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3370   .bss.feedback:00000000 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3377   .bss.mode:00000000 $d
C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s:3384   .sdram_bss:00000000 $d
                           .group:00000000 _ZN7daisysp3SvfD5Ev
                           .group:00000000 _ZN7daisysp8ReverbScD5Ev
                           .group:00000000 _ZN7daisysp4ToneD5Ev
                           .group:00000000 _ZN5daisy9ParameterD5Ev
                           .group:00000000 _ZN5daisy8DaisyPodD5Ev
                           .group:00000000 _ZN7daisysp9DelayLineIfLj120000EED5Ev
                           .group:00000000 _ZN6TTrackD5Ev

UNDEFINED SYMBOLS
_ZdlPvj
_ZN5daisy8DaisyPod4InitEb
_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
_ZN5daisy8DaisyPod15AudioSampleRateEv
_ZN7daisysp3Svf4InitEf
_ZN7daisysp8ReverbSc4InitEf
memset
_ZN7daisysp4Tone4InitEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp3Svf7SetFreqEf
_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
_ZN5daisy8DaisyPod8StartAdcEv
_ZN5daisy8DaisyPod10StartAudioEPFvPKfPfjE
_ZN5daisy13AnalogControl7ProcessEv
_ZN5daisy9Parameter7ProcessEv
_ZN5daisy6RgbLed3SetEfff
_ZN5daisy8DaisyPod10UpdateLedsEv
ARM GAS  C:\Users\Estudi\AppData\Local\Temp\ccmFsFlA.s 			page 211


_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
_ZN7daisysp3Svf7ProcessEf
_ZN7daisysp8ReverbSc7ProcessERKfS2_PfS3_
_ZN6TTrack17processAudioFrameEPf
_ZN6TTrack8getTempoEv
_Znwj
_ZSt20__throw_length_errorPKc
__aeabi_atexit
_ZN6TTrackC1Ev
__dso_handle
